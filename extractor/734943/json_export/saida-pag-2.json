[{"id":33999404,"iid":382,"project_id":734943,"title":"Remove support for disk configuration source","description":"In https://gitlab.com/gitlab-org/gitlab/-/issues/217912 we introduced `domain-config-source` configuration flag to allow users to choose which domain source to use between `disk` and `api`.\n\nIn %\"14.0\" we plan to remove support for old disk configuration source.\n\nThe purpose of this issue is to remove `domain-source`, some code may be hard to remove in one MR, so this can be extracted to follow-up issues.\n\nOmnibus will need to be updated to remove this flag\n\nIf users can't use the disk config source, we can gradually get rid of old code supporting it.","state":"closed","created_at":"2020-04-30T13:17:18.566Z","updated_at":"2021-09-18T07:02:10.659Z","closed_at":"2021-08-26T01:58:18.677Z","closed_by":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"labels":["Category:Pages","Deliverable","Pages::Object Storage","backstage [DEPRECATED]","cicd::active","deprecation","devops::release [DEPRECATED]","direction","group::release [DEPRECATED]","maintenance::refactor","section::ops","workflow::verification"],"milestone":{"id":1948702,"iid":63,"group_id":9970,"title":"14.3","description":"https://about.gitlab.com/releases/archives.html","state":"closed","created_at":"2021-03-17T21:43:36.613Z","updated_at":"2022-04-21T07:25:29.231Z","due_date":"2021-09-17","start_date":"2021-08-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/63"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},{"id":6742251,"username":"feistel","name":"feistel","state":"active","avatar_url":"https://secure.gravatar.com/avatar/40569112d16323eb878ebdead2117943?s=80\u0026d=identicon","web_url":"https://gitlab.com/feistel"}],"author":{"id":3379682,"username":"vshushlin","name":"Vladimir Shushlin","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3379682/avatar.png","web_url":"https://gitlab.com/vshushlin"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":13,"merge_requests_count":2,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/382","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/382","notes":"https://gitlab.com/api/v4/projects/734943/issues/382/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/382/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#382","relative":"#382","full":"gitlab-org/gitlab-pages#382"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":4705,"epic":{"id":134034,"iid":4705,"title":"14.0 Release Team feature removals","url":"/groups/gitlab-org/-/epics/4705","group_id":9970,"human_readable_end_date":"Sep 17, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":33344838,"iid":377,"project_id":734943,"title":"Tech evaluation: Object storage using presigned URLs","description":"This is a follow-up tech evaluation from #355 \n\n@ayufan thanks for your [input on slack](https://gitlab.slack.com/archives/C1BSEQ138/p1585668949053900)!(copying here)\n\n- We need to use pre-signed URLs from GitLab, that way we don’t need any credentials on Pages, and whether the .zip is used can be controlled by Rails exclusively, the link would have an encoded and Rails controlled expiry date\n- If serving from .zip I think we need to likely define the maximum archive size that we can support, likely filtering the relevant files (public/ only folder), and holding that somewhere in memory. I would assume that we could likely configure how many files-in-archives/archives we cache and allow this to be configured and optimised towards cache-hit-ratio, likely GitLab.com would allow to use a ton of memory if needed\n- I would likely break the support for Content-Range if serving files as I don’t think that this is cheaply possible with .zip\n- GitLab Workhorse does have OpenArchive that supports local and remote archive just it is not performance optimised: the HTTP requests are badly aligned and this will likely need to be somehow improved, so just copy-pasting will not give a great performance yet\n\n---\n- [ ] @vshushlin started a [discussion](https://gitlab.com/gitlab-org/gitlab-pages/-/merge_requests/258#note_309921953):  (+7 comments)\n\n    \u003e Oh, I thought that https://gitlab.com/gitlab-org/gitlab-pages/-/merge_requests/136/ has some object storage implementation while it only has serving from zip files from disc :see_no_evil: \n    \u003e \n    \u003e I have a very simple idea for alternative PoC:\n    \u003e \n    \u003e 1. We can copy(and maybe slightly modify) https://gitlab.com/gitlab-org/gitlab/-/blob/84c0ffe12646b9bae1fdf2e576cde7f01f8ded73/lib/api/job_artifacts.rb#L75-94 to pages API https://gitlab.com/gitlab-org/gitlab/-/blob/75f8d42bb443d0a6101a9c2f6b65c607cd95efd4/lib/api/internal/pages.rb#L19\n    \u003e 1. Then we can return the `job_id` in the API\n    \u003e 1. Pages will get specific file and proxy it to user.\n    \u003e 1. Later we can add cache for it.\n    \u003e \n    \u003e Alternatively, we can get the whole artifacts zip archive and use the current zip reading code, then we'll need to cache those files.\n    \u003e \n    \u003e I don't think that adding some object-storage specific code to pages is a good idea. We already have it in the workhorse, we can just use the API. It's slower, but much simplier.\n\n### Diagram/proposal \n\n![Screen_Shot_2020-06-26_at_5.09.00_pm](/uploads/6c277237392a3ce3844fe3e1551f980f/Screen_Shot_2020-06-26_at_5.09.00_pm.png)\n\n```\nsequenceDiagram\n  participant U as User\n  participant P as gitlab-pages\n  participant G as gitlab-workhorse and rails\n  participant OS as Object Storage\n  U-\u003e\u003eP: 1. username.gitlab.io/index.html\n  P-\u003e\u003eG: 2. GET /api/v4/internal/pages?host=username.gitlab.io\n  G-\u003e\u003eP: 3. {... lookup_paths: [{source: {type: \"zip\", path: \"presignedURL\"}],...}\n  loop zipartifacts\n    P-\u003e\u003eP: 4. reader:= OpenArchive(presignedURL)\n    P-\u003e\u003eOS: 5. GET presignedURL\n    OS-\u003e\u003eP: 6. .zip file\n    P-\u003e\u003eP: 7. reader.find(public/index.html)\n    P-\u003e\u003eP: 8. go func(){ cache({host,reader}) } ()\n  end\n  P-\u003e\u003eU: 9. username.gitlab.io/index.html\n```\n\n### Proposal \n\nIn this PoC we will hardcode the returning value from `/api/v4/internal/pages` to reduce the scope. I will use minio which is already supported in the GDK. I'll also shamelessly steal and slightly modify the `zipartifacts` package from workhorse.\n\nTo address https://gitlab.com/gitlab-org/gitlab-pages/-/issues/377#note_367358348 the source type should be `\"zip\"` so that Pages can serve from `.zip` regardless of the path (pre-signed URL or disk path).\n\n### Outcomes\n\nWe have now https://gitlab.com/groups/gitlab-org/-/epics/3901 and https://gitlab.com/groups/gitlab-org/-/epics/3902 with parent https://gitlab.com/groups/gitlab-org/-/epics/1316 to track all future efforts.\n\n#### Rails\n\n1. Allow deploying Pages as `.zip` archives with a `max_archive_size`. https://gitlab.com/gitlab-org/gitlab/-/issues/208135\n1. On deploy -\u003echeck size -\u003e store `public.zip` either on disk or in object storage depending on the features enabled. also tracked in https://gitlab.com/gitlab-org/gitlab/-/issues/208135\n1. Update `/api/v4/internal/pages` -\u003e return a \"source\".\"type\":“zip” with a path https://gitlab.com/gitlab-org/gitlab/-/issues/225840 e.g.\n```json\n{\n\t\"lookup_paths\" : [\n\t{\n\t\t\"source\": {\n\t\t\t\"type\": \"zip\",\n\t\t\t\"path\": \"https://presigned.url/public.zip\",\n\t\t\t\"_\":\"or from disk path\"\n\t\t\t\"path\": \"/shared/pages/domain/project/public.zip\"\n\t}\n]\n```\n\n#### Pages (Go)\n\n0. extract the `resolvePath` logic from disk serving into its own package so it can be shared. https://gitlab.com/gitlab-org/gitlab-pages/-/issues/421\n1. Add package `zip` with `zip/reader` https://gitlab.com/gitlab-org/gitlab/-/issues/28784\n2. Add `zip` serving to Pages - this allows serving from disk or pre-signed URLs from object storage https://gitlab.com/gitlab-org/gitlab/-/issues/28784\n3. Implement a zip reader caching mechanism https://gitlab.com/gitlab-org/gitlab-pages/-/issues/422\n4. Add metrics for zip serving https://gitlab.com/gitlab-org/gitlab-pages/-/issues/423\n\n* while testing I hit https://gitlab.com/gitlab-org/gitlab-pages/-/issues/371 so I think it would be valuable to work on that issue first.","state":"closed","created_at":"2020-04-15T23:30:45.118Z","updated_at":"2022-12-19T23:04:57.612Z","closed_at":"2020-07-20T00:38:25.754Z","closed_by":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"labels":["Category:Pages","Pages::Object Storage","backend","cicd::active","devops::release [DEPRECATED]","type::feature","workflow::in review"],"milestone":{"id":1233746,"iid":49,"group_id":9970,"title":"13.2","description":"https://about.gitlab.com/releases/2020/07/22/gitlab-13-2-released/","state":"closed","created_at":"2020-04-09T17:28:01.032Z","updated_at":"2022-04-13T14:48:24.167Z","due_date":"2020-07-17","start_date":"2020-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/49"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":26,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/377","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":1,"blocking_issues_count":1,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/377","notes":"https://gitlab.com/api/v4/projects/734943/issues/377/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/377/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#377","relative":"#377","full":"gitlab-org/gitlab-pages#377"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":3902,"epic":{"id":81052,"iid":3902,"title":"GitLab Pages Object storage PoCs","url":"/groups/gitlab-org/-/epics/3902","group_id":9970,"human_readable_end_date":"Aug 17, 2020","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":32478519,"iid":365,"project_id":734943,"title":"Add metrics for disk serving","description":"As part of the work done for #355 we need to add some metrics to measure loading times of serving from disk.\n\n- file size\n- time taken to serve\n\nThis will give us some visibility on serving files and will allow us to compare serving times when we implement object storage #377 ","state":"closed","created_at":"2020-03-26T08:29:40.970Z","updated_at":"2020-07-03T01:22:20.201Z","closed_at":"2020-06-11T06:19:32.824Z","closed_by":{"id":263716,"username":"grzesiek","name":"Grzegorz Bizon | OOO until May 15th","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/263716/avatar.jpeg","web_url":"https://gitlab.com/grzesiek"},"labels":["Category:Pages","Deliverable","backend","backstage [DEPRECATED]","cicd::active","devops::release [DEPRECATED]","workflow::in review"],"milestone":{"id":1112145,"iid":47,"group_id":9970,"title":"13.1","description":"","state":"closed","created_at":"2020-01-03T12:28:30.160Z","updated_at":"2020-10-08T12:01:07.361Z","due_date":"2020-06-17","start_date":"2020-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/47"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":3,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/365","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/365","notes":"https://gitlab.com/api/v4/projects/734943/issues/365/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/365/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#365","relative":"#365","full":"gitlab-org/gitlab-pages#365"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":31331442,"iid":356,"project_id":734943,"title":"Fix data race in gitlab source cache package","description":"The following discussion from !246 should be addressed:\n\n- [ ] @nolith started a [discussion](https://gitlab.com/gitlab-org/gitlab-pages/-/merge_requests/246#note_294638273):  (+1 comment)\n\n    \u003e Here the race is deep inside the package\n    \u003e \n    \u003e we make use of global variables and this test will alter `retrievalTimeout` when a goroutine from the previous one is still running.\n    \u003e \n    \u003e This will require extra effort to fix, but I think we should add the race detector now.\n    \u003e \n    \u003e ```\n    \u003e  ==================\n    \u003e  WARNING: DATA RACE\n    \u003e  Write at 0x000000e0d4f0 by goroutine 46:\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.TestResolve.func9()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/cache_test.go:247 +0x3e\n    \u003e    testing.tRunner()\n    \u003e        /usr/local/go/src/testing/testing.go:827 +0x162\n    \u003e  Previous read at 0x000000e0d4f0 by goroutine 44:\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.(*Retriever).Retrieve()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/retriever.go:22 +0x8d\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.(*Entry).retrieveWithClient()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/entry.go:92 +0xc5\n    \u003e  Goroutine 46 (running) created at:\n    \u003e    testing.(*T).Run()\n    \u003e        /usr/local/go/src/testing/testing.go:878 +0x659\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.TestResolve()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/cache_test.go:246 +0x1d5\n    \u003e    testing.tRunner()\n    \u003e        /usr/local/go/src/testing/testing.go:827 +0x162\n    \u003e  Goroutine 44 (running) created at:\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.(*Entry).Retrieve.func1()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/entry.go:64 +0x67\n    \u003e    sync.(*Once).Do()\n    \u003e        /usr/local/go/src/sync/once.go:44 +0xde\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.(*Entry).Retrieve()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/entry.go:64 +0xad\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.(*Cache).Resolve()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/cache.go:89 +0x1ea\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.TestResolve.func8.1()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/cache_test.go:239 +0x76\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.withTestCache()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/cache_test.go:89 +0x185\n    \u003e    gitlab.com/gitlab-org/gitlab-pages/internal/source/gitlab/cache.TestResolve.func8()\n    \u003e        /builds/nolith/gitlab-pages/internal/source/gitlab/cache/cache_test.go:238 +0xc7\n    \u003e    testing.tRunner()\n    \u003e        /usr/local/go/src/testing/testing.go:827 +0x162\n    \u003e  ==================\n    \u003e ```","state":"closed","created_at":"2020-02-27T09:32:07.557Z","updated_at":"2020-03-03T14:50:05.845Z","closed_at":"2020-03-03T14:50:05.791Z","closed_by":{"id":376774,"username":"nolith","name":"Alessio Caiazza","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/376774/avatar.png","web_url":"https://gitlab.com/nolith"},"labels":["Category:Pages","backend","backstage [DEPRECATED]","cicd::active","devops::release [DEPRECATED]","maintenance::refactor","workflow::in dev"],"milestone":{"id":1001916,"iid":44,"group_id":9970,"title":"12.9","description":"https://about.gitlab.com/releases/2020/03/22/gitlab-12-9-released","state":"closed","created_at":"2019-09-15T20:54:50.875Z","updated_at":"2020-09-02T11:04:41.671Z","due_date":"2020-03-17","start_date":"2020-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/44"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":3379682,"username":"vshushlin","name":"Vladimir Shushlin","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3379682/avatar.png","web_url":"https://gitlab.com/vshushlin"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":3,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/356","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/356","notes":"https://gitlab.com/api/v4/projects/734943/issues/356/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/356/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#356","relative":"#356","full":"gitlab-org/gitlab-pages#356"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":31320489,"iid":355,"project_id":734943,"title":"Tech evaluation: Serve pages from object storage","description":"From https://gitlab.com/gitlab-org/gitlab/issues/208135\n\nThe idea is to create proof of concept for pages to be able to serve content from object storage. This will hopefully help identify some of the unknowns to enable this functionality!\n\nWill use [GitLab's object storage](https://docs.gitlab.com/charts/advanced/external-object-storage/) with the [GDK config](https://gitlab.com/gitlab-org/gitlab-development-kit/-/blob/master/doc/howto/object_storage.md) to explore a possible solution for this.\n\n## Results\n\nWhat we've discovered from !258\n\n* Adding specific code to handle objects from AWS S3 or GCS may not be scalable and would be harder to maintain.\n* Implementing [this diagram](https://gitlab.com/gitlab-org/gitlab-pages/-/merge_requests/258#note_310076437) it will be super slow, as Rails and Workhorse validate metadata multiple times, and is not very efficient if we want to random access the file (it does not cache anything).\n* We should explore using presigned URLs #377","state":"closed","created_at":"2020-02-27T01:21:02.720Z","updated_at":"2020-07-23T19:01:33.068Z","closed_at":"2020-04-15T23:38:47.009Z","closed_by":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"labels":["Category:Pages","Pages::Object Storage","backend","cicd::active","devops::release [DEPRECATED]","missed:12.9","workflow::in dev"],"milestone":{"id":1104429,"iid":46,"group_id":9970,"title":"12.10","description":"https://about.gitlab.com/releases/2020/04/22/gitlab-12-10-released","state":"closed","created_at":"2019-12-20T15:15:53.243Z","updated_at":"2020-10-08T12:00:39.852Z","due_date":"2020-04-17","start_date":"2020-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/46"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":13,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/355","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/355","notes":"https://gitlab.com/api/v4/projects/734943/issues/355/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/355/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#355","relative":"#355","full":"gitlab-org/gitlab-pages#355"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":29164214,"iid":315,"project_id":734943,"title":"Content-length header is not provided when content-encoding is used","description":"GitLab pages [support serving statically compressed files](https://docs.gitlab.com/ee/user/project/pages/introduction.html#serving-compressed-assets). But it looks like when this is done, the response headers are missing `Content-Length` header, when response headers include `Content-Encoding: gzip`.","state":"closed","created_at":"2019-12-28T16:37:21.739Z","updated_at":"2020-08-04T20:31:10.662Z","closed_at":"2020-08-04T09:14:28.969Z","closed_by":{"id":376774,"username":"nolith","name":"Alessio Caiazza","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/376774/avatar.png","web_url":"https://gitlab.com/nolith"},"labels":["Category:Pages","devops::release [DEPRECATED]","priority::4","severity::4","type::bug"],"milestone":null,"assignees":[{"id":2020145,"username":"mark2472","name":"Mark Francis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2020145/avatar.png","web_url":"https://gitlab.com/mark2472"}],"author":{"id":706613,"username":"mitar","name":"Mitar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/706613/avatar.png","web_url":"https://gitlab.com/mitar"},"type":"ISSUE","assignee":{"id":2020145,"username":"mark2472","name":"Mark Francis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2020145/avatar.png","web_url":"https://gitlab.com/mark2472"},"user_notes_count":3,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/315","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/315","notes":"https://gitlab.com/api/v4/projects/734943/issues/315/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/315/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#315","relative":"#315","full":"gitlab-org/gitlab-pages#315"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":29009434,"iid":314,"project_id":734943,"title":"Tech Evaluation: Support HSTS on GitLab Pages","description":"## Problem to solve \nWe need to research the technical implementation details to solve https://gitlab.com/gitlab-org/gitlab-pages/issues/28\n\n## Proposal \nSpend 2-3 days assessing sorting capabilities and breakdown issue into smaller components if larger than 2 MRs: \nSome users want to enforce no access to their web content without HTTPS/certificates. This can be done with [HTTP Strict Transport Security (HSTS) policy](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security), but we do not currently support enabling this for GitLab Pages sites.","state":"closed","created_at":"2019-12-23T15:50:14.281Z","updated_at":"2022-10-16T22:02:51.205Z","closed_at":"2022-10-16T22:02:51.177Z","closed_by":{"id":1646689,"username":"oregand","name":"David O'Regan","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1646689/avatar.png","web_url":"https://gitlab.com/oregand"},"labels":["Category:Pages","backend","cicd::active","devops::create","group::editor","section::dev","security","type::feature"],"milestone":{"id":490705,"iid":14,"group_id":9970,"title":"Backlog","description":"Issues that we want to do but are not planned right now. Open for contribution from the community.","state":"active","created_at":"2018-03-22T13:09:23.767Z","updated_at":"2018-10-30T14:56:54.069Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/14"},"assignees":[],"author":{"id":4905402,"username":"jreporter","name":"Jackie Porter","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4905402/avatar.png","web_url":"https://gitlab.com/jreporter"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":0,"upvotes":3,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/314","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/314","notes":"https://gitlab.com/api/v4/projects/734943/issues/314/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/314/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#314","relative":"#314","full":"gitlab-org/gitlab-pages#314"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":27985016,"iid":281,"project_id":734943,"title":"GitLab Pages depends on the availability of GitLab API","description":"If gitlab API is not available for some reason(e.g. https://gitlab.com/gitlab-com/gl-infra/production/-/issues/1936) GitLab Pages currently will become unavailable too(we clear cache in case of any API lookup problem).\n\nIf we not clear cache in these cases, GitLab Pages will be more independent and won't produce spikes of errors like https://dashboards.gitlab.net/d/web-pages-main/web-pages-overview?orgId=1\u0026from=1586889900000\u0026to=1586891700000\u0026var-PROMETHEUS_DS=Global\u0026var-environment=gprd\u0026var-stage=main\u0026var-sigma=2\n\nThe following discussion from !194 should be addressed:\n\n- [ ] @ayufan started a [discussion](https://gitlab.com/gitlab-org/gitlab-pages/merge_requests/194#note_255169959):  (+1 comment)\n\n    \u003e Should we consider replacing entry only if the new received one does not have `entry.lookup.Error` to solve intermediate errors of processing lookups?\n    \u003e \n    \u003e I consider the today it can happen that we store the lookup of success request, but after refresh we receive error, like 500 from GitLab. It would help if we could catch with this mechanism a short living errors of GitLab API, and try to re-use success requests for as long as long interval. This reduces Pages dependence on API being super stable, and we anticipate that upstream API is flaky to some extent.\n    \u003e \n    \u003e Or maybe better is in such case, is to re-use current lookup and extend the lease on the lookup to allow another refresh?\n    \u003e \n    \u003e ```golang\n    \u003e if entry.response != nil \u0026\u0026 entry.response.Error != nil {\n    \u003e   entry.response = e.response\n    \u003e }\n    \u003e ```\n    \u003e \n    \u003e \u003e Note: I'm fine following that in next MR as an stability improvement.","state":"closed","created_at":"2019-12-05T15:29:14.918Z","updated_at":"2021-04-08T07:25:39.710Z","closed_at":"2021-04-08T07:25:39.500Z","closed_by":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"labels":["Category:Pages","backend","backstage [DEPRECATED]","cicd::active","devops::release [DEPRECATED]","gitlab.com:availability","group::release [DEPRECATED]","priority::3","section::ops","severity::3","type::bug","workflow::production"],"milestone":{"id":1406669,"iid":59,"group_id":9970,"title":"13.11","description":"https://about.gitlab.com/releases/archives.html","state":"closed","created_at":"2020-08-13T14:23:09.688Z","updated_at":"2022-04-21T07:22:08.835Z","due_date":"2021-04-17","start_date":"2021-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/59"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":263716,"username":"grzesiek","name":"Grzegorz Bizon | OOO until May 15th","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/263716/avatar.jpeg","web_url":"https://gitlab.com/grzesiek"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":32,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/281","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/281","notes":"https://gitlab.com/api/v4/projects/734943/issues/281/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/281/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#281","relative":"#281","full":"gitlab-org/gitlab-pages#281"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":27741902,"iid":274,"project_id":734943,"title":"Make GitLab client timeout / JTW token expiry configurable","description":"The following discussion from !201 should be addressed:\n\n- [ ] @ayufan started a [discussion](https://gitlab.com/gitlab-org/gitlab-pages/merge_requests/201#note_251814520):  (+3 comments)\n\n    \u003e Is this timeout too small?\n    \u003e \n    \u003e Can we make it larger, or at least configurable?","state":"closed","created_at":"2019-11-29T10:57:29.701Z","updated_at":"2020-02-05T23:34:44.000Z","closed_at":"2020-02-05T01:02:41.289Z","closed_by":{"id":42196,"username":"twk3","name":"DJ Mountney","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0585c59e37fc2dbc124fc4c9f575234d?s=80\u0026d=identicon","web_url":"https://gitlab.com/twk3"},"labels":["backend","devops::release [DEPRECATED]","type::feature","workflow::in review"],"milestone":{"id":1001915,"iid":43,"group_id":9970,"title":"12.8","description":"https://about.gitlab.com/releases/2020/02/22/gitlab-12-8-released","state":"closed","created_at":"2019-09-15T20:53:58.792Z","updated_at":"2020-05-19T14:23:44.837Z","due_date":"2020-02-17","start_date":"2020-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/43"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":263716,"username":"grzesiek","name":"Grzegorz Bizon | OOO until May 15th","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/263716/avatar.jpeg","web_url":"https://gitlab.com/grzesiek"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":1,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/274","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/274","notes":"https://gitlab.com/api/v4/projects/734943/issues/274/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/274/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#274","relative":"#274","full":"gitlab-org/gitlab-pages#274"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":26998252,"iid":267,"project_id":734943,"title":"Provide a way to track and measure API calls","description":"We need the way to track the requests made from the `gitlab` config source (https://gitlab.com/gitlab-org/gitlab-pages/merge_requests/194) to the internal API.","state":"closed","created_at":"2019-11-13T02:35:41.940Z","updated_at":"2020-02-20T13:57:55.682Z","closed_at":"2020-02-11T08:39:26.998Z","closed_by":{"id":376774,"username":"nolith","name":"Alessio Caiazza","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/376774/avatar.png","web_url":"https://gitlab.com/nolith"},"labels":["Category:Pages","backend","cicd::active","devops::release [DEPRECATED]","type::feature","workflow::in review"],"milestone":{"id":1001915,"iid":43,"group_id":9970,"title":"12.8","description":"https://about.gitlab.com/releases/2020/02/22/gitlab-12-8-released","state":"closed","created_at":"2019-09-15T20:53:58.792Z","updated_at":"2020-05-19T14:23:44.837Z","due_date":"2020-02-17","start_date":"2020-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/43"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":3170776,"username":"krasio","name":"Krasimir Angelov","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3170776/avatar.png","web_url":"https://gitlab.com/krasio"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":13,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/267","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/267","notes":"https://gitlab.com/api/v4/projects/734943/issues/267/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/267/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#267","relative":"#267","full":"gitlab-org/gitlab-pages#267"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":4242,"epic":{"id":97712,"iid":4242,"title":"Move pages domain/project configuration to the API","url":"/groups/gitlab-org/-/epics/4242","group_id":9970,"human_readable_end_date":"May 17, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":26188901,"iid":264,"project_id":734943,"title":"XSSI in Gitlab Pages *.gitlab.io","description":"**[HackerOne report #719770](https://hackerone.com/reports/719770)** by `ngalog` on 2019-10-22, assigned to @jeremymatos:\n\nSecurity workflow issue: https://dev.gitlab.org/gitlab/gitlabhq/issues/2967.\n\n### Summary  \nSince now gitlab.io has implemented access control for all private pages, all pages should be limited to authorized user, however I found there is a way to steal content of JS files of victim using the XSSI(Cross Site Scripting Inclusion) technique in certain conditions.\n\n### Steps to reproduce  \n- Use Gitlab CI/CD to build a page, and limit access to project member only  \n- In the gitlab page folder, upload a JS file, something like below\n\n`secret.js`\n\n```  \naws_key='AKIARONCHAN';  \naws_secret='RONCHANAGAIN'  \n```  \n- Then, as the victim, login to gitlab  \n- As the attacker, in a domain that you control, prepare below html file and make victim to visit the page\n\nhttps://attacker.com/attackpage\n\n```  \n\u003cscript src=\"https://GROUPID.gitlab.io/PROJECTID/secret.js\"\u003e\u003c/script\u003e  \n\u003cscript\u003ealert(aws_key);\u003c/script\u003e  \n```\n\n- Then you should see a pop up containing the JS secrets of the gitlab page.\n\n\n### Impact  \nXSSI to steal user's gitlab page's JS file content\n\n### Examples  \nGiven above\n\n### What is the current *bug* behavior?  \nDidn't block invalid refer\n\n### What is the expected *correct* behavior?  \nShould not be able to allow attacker to carry out XSSI attacker\n\n### Relevant logs and/or screenshots  \n![Screenshot_2019-10-22_at_9.46.24_PM.png](https://h1.sec.gitlab.net/a/bb6765a1-a5b7-4bff-b992-6a6e84553263/Screenshot_2019-10-22_at_9.46.24_PM.png)  \n![Screenshot_2019-10-22_at_9.46.36_PM.png](https://h1.sec.gitlab.net/a/c7948fcf-c65c-449d-8f23-58add7b4b289/Screenshot_2019-10-22_at_9.46.36_PM.png)  \n![Screenshot_2019-10-22_at_9.46.42_PM.png](https://h1.sec.gitlab.net/a/08c44e4a-8ac2-47ab-b817-71f750589783/Screenshot_2019-10-22_at_9.46.42_PM.png)\n\n### Output of checks  \ngitlab.com\n\n## Impact\n\nXSSI\n\n## Attachments\n\n**Warning:** Attachments received through HackerOne, please exercise caution!\n\n* [Screenshot_2019-10-22_at_9.46.24_PM.png](https://h1.sec.gitlab.net/a/bb6765a1-a5b7-4bff-b992-6a6e84553263/Screenshot_2019-10-22_at_9.46.24_PM.png)\n* [Screenshot_2019-10-22_at_9.46.36_PM.png](https://h1.sec.gitlab.net/a/c7948fcf-c65c-449d-8f23-58add7b4b289/Screenshot_2019-10-22_at_9.46.36_PM.png)\n* [Screenshot_2019-10-22_at_9.46.42_PM.png](https://h1.sec.gitlab.net/a/08c44e4a-8ac2-47ab-b817-71f750589783/Screenshot_2019-10-22_at_9.46.42_PM.png)","state":"closed","created_at":"2019-10-22T10:20:27.813Z","updated_at":"2023-02-17T18:19:06.825Z","closed_at":"2022-04-12T12:09:24.010Z","closed_by":{"id":696751,"username":"kassio","name":"Kassio Borges","state":"active","avatar_url":"https://secure.gravatar.com/avatar/be7919dfa5d1e8b8826bf51bfc747055?s=80\u0026d=identicon","web_url":"https://gitlab.com/kassio"},"labels":["Category:Pages","Deliverable","HackerOne","SLO::Missed","Weakness::CWE-79","backend","bug::vulnerability","cicd::active","devops::create","frontend","group::editor","priority::3","section::ops","security","severity::3","type::maintenance","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":696751,"username":"kassio","name":"Kassio Borges","state":"active","avatar_url":"https://secure.gravatar.com/avatar/be7919dfa5d1e8b8826bf51bfc747055?s=80\u0026d=identicon","web_url":"https://gitlab.com/kassio"}],"author":{"id":2741139,"username":"gitlab-securitybot","name":"GitLab SecurityBot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2741139/avatar.png","web_url":"https://gitlab.com/gitlab-securitybot"},"type":"ISSUE","assignee":{"id":696751,"username":"kassio","name":"Kassio Borges","state":"active","avatar_url":"https://secure.gravatar.com/avatar/be7919dfa5d1e8b8826bf51bfc747055?s=80\u0026d=identicon","web_url":"https://gitlab.com/kassio"},"user_notes_count":27,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-12-27","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/264","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/264","notes":"https://gitlab.com/api/v4/projects/734943/issues/264/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/264/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#264","relative":"#264","full":"gitlab-org/gitlab-pages#264"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":26150199,"iid":262,"project_id":734943,"title":"[Gitlab Pages Auth Bypass] Able to steal a user's Authentication Code For Gitlab Pages","description":"**[HackerOne report #718460](https://hackerone.com/reports/718460)** by `ngalog` on 2019-10-21, assigned to @jeremymatos:\n\n### Summary\n\nI bypassed the regex for the gitlab pages authentication in gitlab.com\n\n### Steps to reproduce  \n- Login to gitlab and then visit https://projects.gitlab.io/auth?domain=https://ronchangitlab.io\u0026state=xdgnwM0hmRQ7g5xoevNV6g==  \n- Then attacker can get the access authorization code in ronchangitlab.io, then they can use it to exchange for victim's gitlab pages cookies\n\n## Impact\n\nGitlab Pages authentication bypass\n\n## Issue on dev\n\nhttps://dev.gitlab.org/gitlab/gitlabhq/issues/2938\n\nhttps://gitlab.com/gitlab-org/security/gitlab/-/issues/102\n\n---\n\n## Solution\n\n### Proposals\n\n- Proposal 1 - https://gitlab.com/gitlab-org/gitlab-pages/-/issues/262#note_255332604 and WIP PoC https://dev.gitlab.org/gitlab/gitlab-pages/-/merge_requests/21\n- Proposal 2 - https://gitlab.com/gitlab-org/gitlab-pages/-/issues/262#note_341774099\n\n### Proposal 2\n\n~~Going ahead with proposal 2~~\n\n1. Generate a JWT signing key based on the `auth-secret` on Pages startup\n1. When we initiate the authentication flow, generate a JWT token with claims, set it as the state and save to the encrypted cookie\n  ```go\n    state := jwt(domain, randomNewState, jwtSigningKey)\n  ```\n3. Redirect to `projects.gitlab.io?state=state` and validate the state's JWT signature\n4. Extract the domain from the JWT claims and continue OAuth flow.\n5. When we receive `mydomain.gitlab.io?stat=state\u0026code=code` we verify the state's JWT signature again.\n6. Continue as usual\n\n---\n## Implemented solution\n\nIt was later discovered that the problem lies in someone being able to steal an OAuth `code` as part of the authentication flow. To mitigate this, the process is to encrypt the code and add it to a JWT which is then signed.\nThe flow is\n\n1. Generate a JWT signing key based on the `auth-secret` on Pages startup.\n1. On redirection from GitLab to https://gitlab.io/auth?code=plaintext\u0026state=random, encrypt and sign the code\n1. Encrypt code `encryptedCode=AES-GCM(code, domain (as salt), hkdfKey(auth-secret)`\n1. Use the JWT as new code `code=JWT(encryptedCode, nonce, signingKey)`\n1. Redirect to `mydomain.com/auth?code=JWT(encryptedCode, nonce, signingKey)\u0026state=random` and strip the `token` from the query string to mitigate https://gitlab.com/gitlab-org/gitlab/-/issues/285244\n1. When we receive `mydomain.gitlab.io?state=random\u0026code=code` we verify the code's JWT signature.\n1. Get `encryptedCode` and `nonce` from the JWT claims and decrypt the code\n1. Exchange for access token and serve content if successful\n\n---\n\u003cdetails\u003e\n\u003csummary\u003eSequence diagrams from the comment below\u003c/summary\u003e\n\n### Summary\n\n* The goal of the attack is to ready the content of site `mygroup.gitlab.io` which is private\n* To achieve this attacker sends link `project.gitlab.io?domain=Attackersdomain.com` to user, which result in `attackersdomain.com?code=mygroupcode\u0026state=irrelevant`\n* After receiving the `code` attacker can complete the Auth process for `mygroup.gitlab.io`\n\nNote: it's not possible for attacker to get `token`, only to read the content of private web-site.\n\n### How the current Auth workflow works\n\n```mermaid\nsequenceDiagram\n    participant U as User\n    participant D as mygroup.gitlab.io\n    participant P as projects.gitlab.io\n    participant G as gitlab.com\n    U-\u003e\u003eD: get index.html\n    D-\u003e\u003eU: not authorzied, redirect to projects.gitlab.io/auth?domain=mygroup.gitlab.io\u0026state=123\n    U-\u003e\u003eP: projects.gitlab.io/auth?domain=mygroup.gitlab.io\u0026state=123\n    rect rgb(0, 255, 0)\n    Note over P,G: OAuth workflow\n    P-\u003e\u003eU: redirect to gitlab.com/oauth?redirect_url=projects.gitlab.io\u0026state=123\n    U-\u003e\u003eG: gitlab.com/oauth?redirect_url=projects.gitlab.io\u0026state=123\n    G-\u003e\u003eU: redirect to projects.gitlab.io?state=123\u0026code=mycode\n    U-\u003e\u003eP: projects.gitlab.io?state=123\u0026code=mycode\n    end\n    P-\u003e\u003eU: redirect to mygroup.gitlab.io?state=123\u0026code=mycode\n    U-\u003e\u003eD: mygroup.gitlab.io?state=123\u0026code=mycode\n    rect rgb(0, 255, 0)\n    Note over D,G: Exchange code for token and verify that user has permissions for the mygroup.gitlab.io\n    D-\u003e\u003eG: get token by code=mycode\n    G-\u003e\u003eD: token = blablabla\n    D-\u003e\u003eG: get project by id with token = blablabla\n    G-\u003e\u003eD: success\n    end\n    D-\u003e\u003eU: success\n```\n\n### Requests highlined in the green are not so relevant to the described attack, so let's get rid of them\n\n```mermaid\nsequenceDiagram\n    participant U as User\n    participant D as mygroup.gitlab.io\n    participant P as projects.gitlab.io\n    participant G as gitlab.com\n    U-\u003e\u003eD: get index.html\n    D-\u003e\u003eU: not authorzied, redirect to projects.gitlab.io/auth?domain=mygroup.gitlab.io\u0026state=123\n    U-\u003e\u003eP: projects.gitlab.io/auth?domain=mygroup.gitlab.io\u0026state=123\n    Note over P,G: OAuth workflow\n    P-\u003e\u003eU: redirect to mygroup.gitlab.io?state=123\u0026code=mycode\n    U-\u003e\u003eD: mygroup.gitlab.io?state=123\u0026code=mycode\n    Note over D,G: Exchange code for token and verify that user has permissions for the mygroup.gitlab.io\n    D-\u003e\u003eU: success\n```\n\n### Some notes about sessions(stored in encrypted and signed cookies with 10 minutes expiration time)\n\n```mermaid\nsequenceDiagram\n    participant U as User\n    participant D as mygroup.gitlab.io\n    participant P as projects.gitlab.io\n    participant G as gitlab.com\n    U-\u003e\u003eD: get index.html\n    Note left of D: generate random state and save it in the session cookie\n    D-\u003e\u003eU: not authorzied, redirect to projects.gitlab.io/auth?domain=mygroup.gitlab.io\u0026state=123\n    U-\u003e\u003eP: projects.gitlab.io/auth?domain=mygroup.gitlab.io\u0026state=123\n    Note over P,G: domain=mygroup.gitlab.io is being saved to the session cookie\n    Note over P,G: OAuth workflow\n    Note over P,G: verify that \"GitLab Pages conrolls the domain\" from session cookie \n    P-\u003e\u003eU: redirect to mygroup.gitlab.io?state=123\u0026code=mycode\n    U-\u003e\u003eD: mygroup.gitlab.io?state=123\u0026code=mycode\n    Note left of D: Verify that state from the query parameter is the same as in session cookie\n    Note over D,G: Exchange code for token and verify that user has permissions for the mygroup.gitlab.io\n    D-\u003e\u003eU: success\n```\n\n### A vulnerable step\n\nYou can see `verify that \"GitLab Pages conrolls the domain\" from session cookie` step above.\n\nThis is how it's implemented:\n```golang\nfunc (a *Auth) domainAllowed(name string, domains source.Source) bool {\n\t// This is incorrect but it's not important because of second check\n\tisConfigured := (name == a.pagesDomain) || strings.HasSuffix(\".\"+name, a.pagesDomain)\n\n\tif isConfigured {\n\t\treturn true\n\t}\n\n\t// This check is super easy to bypass by just adding the `attackersdomain.com` to any pages project passing validation\n\t// Note that validation does not mean that the correct CNAME record is set\n\tdomain, err := domains.GetDomain(name)\n\n\t// domain exists and there is no error\n\treturn (domain != nil \u0026\u0026 err == nil)\n}\n```\n\n### The attack as it's can be performed currently\n\n(note this diagram is a little different from [my previous comment](https://gitlab.com/gitlab-org/security/gitlab-pages/-/merge_requests/1#note_359604339):\nI placed attacker requesting user domain last to bring related steps closer, it's still possible to perform the attack this way, and it's actually even more convenient)\n\nVulnerability executed is highlighted in green.\n\n```mermaid\nsequenceDiagram\n    participant A as Attacker\n    participant U as User\n    participant D as mygroup.gitlab.io\n    participant P as projects.gitlab.io\n    participant G as gitlab.com\n    participant AD as ATTACKERSDOMAIN.com\n    A-\u003eU: can you please visit projects.gitlab.io/auth?domain=ATTACKERSDOMAIN.COM\u0026state=IRRELEVANT\n    U-\u003e\u003eP: projects.gitlab.io/auth?domain=ATTACKERSDOMAIN.COM\u0026state=IRRELEVANT\n    Note over P,G: domain=ATTACKERSDOMAIN.COM is being saved to the session cookie\n    Note over P,G: OAuth workflow\n    rect rgb(0, 255, 0)\n    Note over P,G: verify that \"GitLab Pages controls the domain\" from session cookie\n    Note over P,G: This check is bypassed by adding ATTACKERSDOMAIN.COM to a random pages project\n    P-\u003e\u003eU: redirect to ATTACKERSDOMAIN.COM?state=IRRELEVANT\u0026code=mycode\n    U-\u003e\u003eAD: ?state=IRRELEVANT\u0026code=mycode\n    end\n    AD-\u003e\u003eA: code=mycode\n    Note right of A: Need to get a valid state in cookie:\n    A-\u003e\u003eD: get index.html\n    D-\u003e\u003eA: unauthorized, redirect to projects.gitlab.io/auth?domain=mygroup.gitlab.io\u0026state=USERSTATE\n    Note right of A: skip the auth, just go the last step manually:\n    A-\u003e\u003eD: /auth?state=USERSTATE\u0026code=mycode\n    Note over D,G: Exchange code for token and verify that user has permissions for the mygroup.gitlab.io\n    D-\u003e\u003eA: success\n```\n\n### The JWT fix\n\nWe tried to fix this in https://gitlab.com/gitlab-org/security/gitlab-pages/-/merge_requests/1\n\nIt works by completely removing the `domain` parameter and including it in the `state=JWT({random=random, domain=domain...})`.\n\nSo the attacker can't send a link to domain.\n\nBut, it can be exploited in a little more complicated way:\n```mermaid\nsequenceDiagram\n    participant A as Attacker\n    participant Pages as Pages Server\n    participant U as User\n    participant D as mygroup.gitlab.io\n    participant P as projects.gitlab.io\n    participant G as gitlab.com\n    participant AD as ATTACKERSDOMAIN.com\n    Note right of A: Need to get a valid state for ATTACKERSDOMAIN.COM\n    Note right of A: Add ATTACKERSDOMAIN.COM as the domain for the private pages project\n    Note right of A: But not setup DNS for it\n    A-\u003ePages: ATTACKERSDOMAIN.com/index\n    Pages-\u003eA: not authorized, redirect to projects.gitlab.io/auth?state=JWT({random=random, domain=ATTACKERSDOMAIN.com})\n    Note right of A: Let's call JWT({random=random, domain=ATTACKERSDOMAIN.com}) ATTACKERSTATE\n    A-\u003eU: can you please visit projects.gitlab.io/auth?state=ATTACKERSTATE\n    U-\u003e\u003eP: projects.gitlab.io/auth?state=ATTACKERSTATE\n    Note over P,G: OAuth workflow\n    rect rgb(0, 255, 0)\n    Note over P,G: use the domain from state, wich is ATTACKERSDOMAIN.COM\n    P-\u003e\u003eU: redirect to ATTACKERSDOMAIN.COM?state=ATTACKERSTATE\u0026code=mycode\n    U-\u003e\u003eAD: ?state=ATTACKERSTATE\u0026code=mycode\n    end\n    AD-\u003e\u003eA: code=mycode\n    Note right of A: Need to get a valid state in cookie:\n    A-\u003e\u003eD: get index.html\n    D-\u003e\u003eA: unauthorized, redirect to projects.gitlab.io/auth?state=USERSTATE(JWT({random=random, domain=mygroup.gitlab.io}))\n    Note right of A: skip the auth, just go the last step manually:\n    A-\u003e\u003eD: /auth?state=USERSTATE\u0026code=mycode\n    Note over D,G: Exchange code for token and verify that user has permissions for the mygroup.gitlab.io\n    D-\u003e\u003eA: success\n```\n\n### The \"~~Signed~~ Encrypted code\" fix\n\nMy current idea is to sign the code instead of state when we redirect back to user domain\n\n```mermaid\nsequenceDiagram\n    participant A as Attacker\n    participant U as User\n    participant D as mygroup.gitlab.io\n    participant P as projects.gitlab.io\n    participant G as gitlab.com\n    participant AD as ATTACKERSDOMAIN.com\n    A-\u003eU: can you please visit projects.gitlab.io/auth?domain=ATTACKERSDOMAIN.COM\u0026state=IRRELEVANT\n    U-\u003e\u003eP: projects.gitlab.io/auth?domain=ATTACKERSDOMAIN.COM\u0026state=IRRELEVANT\n    Note over P,G: domain=ATTACKERSDOMAIN.COM is being saved to the session cookie\n    Note over P,G: OAuth workflow\n    P-\u003e\u003eU: redirect to ATTACKERSDOMAIN.COM?state=IRRELEVANT\u0026securecode=ENCRYPTED({domain=ATTACKERSDOMAIN.COM, code=mycode})\n    U-\u003e\u003eAD: ?state=IRRELEVANT\u0026securecode=ENCRYPTED({domain=ATTACKERSDOMAIN.COM, code=mycode})\n    AD-\u003e\u003eA: securecode=ENCRYPTED({domain=ATTACKERSDOMAIN.COM, code=mycode})\n    Note right of A: Need to get a valid state in cookie:\n    A-\u003e\u003eD: get index.html\n    D-\u003e\u003eA: unauthorized, redirect to projects.gitlab.io/auth?domain=mygroup.gitlab.io\u0026state=USERSTATE\n    Note right of A: skip the auth, just go the last step manually:\n    A-\u003e\u003eD: /auth?state=USERSTATE\u0026securecode=ENCRYPTED({domain=ATTACKERSDOMAIN.COM, code=mycode})\n    Note right of D: decrypt code, and get domain=ATTACKERSDOMAIN.COM, and code=mycode\n    Note right of D: check if ATTACKERSDOMAIN.COM==mygroup.gitlab.io\n    Note right of D: it's not equal, so user was tricked into clicking this,\n    D-\u003e\u003eA: failure\n```\n\n**I can't say if there is a way to bypass this check. I would really appreciate if everyone who read that far tries to break it** :wink: \n\n\u003c/details\u003e","state":"closed","created_at":"2019-10-21T09:46:58.732Z","updated_at":"2023-03-09T11:59:15.758Z","closed_at":"2021-01-07T18:37:10.145Z","closed_by":{"id":4992072,"username":"dcouture","name":"Dominic Couture","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4992072/avatar.png","web_url":"https://gitlab.com/dcouture"},"labels":["Category:Pages","HackerOne","Weakness::CWE-287","backend","cicd::active","devops::release [DEPRECATED]","group::release [DEPRECATED]","priority::1","section::ops","security","security-backlog::valid","severity::2","type::bug","workflow::verification"],"milestone":{"id":1233757,"iid":54,"group_id":9970,"title":"13.7","description":"https://about.gitlab.com/releases/archives.html","state":"closed","created_at":"2020-04-09T17:43:14.893Z","updated_at":"2022-04-13T14:51:12.240Z","due_date":"2020-12-17","start_date":"2020-11-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/54"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":2741139,"username":"gitlab-securitybot","name":"GitLab SecurityBot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2741139/avatar.png","web_url":"https://gitlab.com/gitlab-securitybot"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":136,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/262","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":7,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/262","notes":"https://gitlab.com/api/v4/projects/734943/issues/262/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/262/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#262","relative":"#262","full":"gitlab-org/gitlab-pages#262"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":26044218,"iid":260,"project_id":734943,"title":"Secrets cannot be passed on the command line","description":"Passing of Pages secrets was deprecated with issue https://gitlab.com/gitlab-org/gitlab-pages/issues/208 and issues a deprecation warning in the Pages logs. \n\nDisallowing the passing of secrets is a breaking change, so should be implemented during the next major release of GitLab (13.0).\n","state":"closed","created_at":"2019-10-17T13:59:25.470Z","updated_at":"2020-05-11T11:23:38.633Z","closed_at":"2020-05-11T04:19:48.098Z","closed_by":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"labels":["Category:Pages","cicd::active","devops::release [DEPRECATED]","maintenance::refactor","security","workflow::production"],"milestone":{"id":991112,"iid":42,"group_id":9970,"title":"13.0","description":"","state":"closed","created_at":"2019-09-04T15:20:39.024Z","updated_at":"2020-10-08T12:00:55.725Z","due_date":"2020-05-17","start_date":"2020-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/42"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":4391348,"username":"sean_carroll","name":"Sean Carroll","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4391348/avatar.png","web_url":"https://gitlab.com/sean_carroll"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":13,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/260","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/260","notes":"https://gitlab.com/api/v4/projects/734943/issues/260/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/260/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#260","relative":"#260","full":"gitlab-org/gitlab-pages#260"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":21200693,"iid":223,"project_id":734943,"title":"Default to JSON Logging","description":"[We are moving to make JSON the default configured log format for GitLab Pages in 12.0 Omnibus release](https://gitlab.com/gitlab-org/omnibus-gitlab/issues/4102).\n\nWould we like to make this the source install default as well by changing https://gitlab.com/gitlab-org/gitlab-pages/blob/master/logging.go#L28 ?","state":"closed","created_at":"2019-05-22T21:38:06.918Z","updated_at":"2021-06-17T08:49:56.223Z","closed_at":"2021-06-17T08:49:56.201Z","closed_by":{"id":3379682,"username":"vshushlin","name":"Vladimir Shushlin","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3379682/avatar.png","web_url":"https://gitlab.com/vshushlin"},"labels":["Category:Pages","[deprecated] Accepting merge requests","[deprecated] low hanging fruit","cicd::active","devops::release [DEPRECATED]","group::release [DEPRECATED]","section::ops","workflow::ready for development"],"milestone":{"id":490705,"iid":14,"group_id":9970,"title":"Backlog","description":"Issues that we want to do but are not planned right now. Open for contribution from the community.","state":"active","created_at":"2018-03-22T13:09:23.767Z","updated_at":"2018-10-30T14:56:54.069Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/14"},"assignees":[],"author":{"id":2602134,"username":"rmarshall","name":"Robert Marshall","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c78f467da196431abcc7aa223fdc1c64?s=80\u0026d=identicon","web_url":"https://gitlab.com/rmarshall"},"type":"ISSUE","assignee":null,"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/223","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/223","notes":"https://gitlab.com/api/v4/projects/734943/issues/223/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/223/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#223","relative":"#223","full":"gitlab-org/gitlab-pages#223"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":20643279,"iid":219,"project_id":734943,"title":"Convert https variable to Gorilla ProxyHeaders","description":"We temporary saved `https` flag in the context in https://gitlab.com/gitlab-org/gitlab-pages/merge_requests/168/diffs, but `https` variable is still being passed through a lot of calls.\n\nWe can use https://godoc.org/github.com/gorilla/handlers#ProxyHeaders instead of both these solutions.\n\nWe'll remove this flag in three steps \n\n- [x] Merge https://gitlab.com/gitlab-org/gitlab-pages/-/merge_requests/225 to log an error if `https` flag does not match the `r.URL.Scheme`\n- [x] Test bed with using a reverse proxy see https://gitlab.com/gitlab-org/gitlab-pages/issues/219#note_281592054 \n- [x] Completely remove the `https` flag from the context\n\n\u003cdetails\u003e\n\u003csummary\u003eOld description\u003c/summary\u003e\n\nThe following discussion from !141 should be addressed:\n\n- [ ] @nick.thomas started a [discussion](https://gitlab.com/gitlab-org/gitlab-pages/merge_requests/141#note_167068450):  (+1 comment)\n\n    \u003e I know we use this imperative style of middleware (returning true/false to indicate whether to end) elsewhere in gitlab-pages, but I wonder if we could avoid it in this case, and instead use the `http.Handler` style instead?\n    \u003e \n    \u003e One approach: the `Middleware` type would have a `ServeHTTP()` method and a `next` member. In the cases where we currently `return false`, we'd instead `m.next.ServeHTTP(w, r) ; return`. Otherwise, we'd serve the redirect and return. \n    \u003e \n    \u003e We use this pattern in workhorse and it serves us quite well. WDYT?\n\nThis is mostly a refactoring issue, I think  it would make the gitlab-pages codebase easier to understand, and we could make use of more third-party implementations this way.\n\nOne example: we could start using https://godoc.org/github.com/gorilla/handlers#ProxyHeaders on *just* the `ServeProxy` route!\n\n\u003c/details\u003e","state":"closed","created_at":"2019-05-07T08:39:16.048Z","updated_at":"2020-02-21T01:23:01.992Z","closed_at":"2020-02-20T15:28:24.399Z","closed_by":{"id":376774,"username":"nolith","name":"Alessio Caiazza","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/376774/avatar.png","web_url":"https://gitlab.com/nolith"},"labels":["Category:Pages","backend","cicd::active","devops::release [DEPRECATED]","missed-deliverable","missed:12.4","missed:12.5","missed:12.8","type::feature","workflow::in review"],"milestone":{"id":1001916,"iid":44,"group_id":9970,"title":"12.9","description":"https://about.gitlab.com/releases/2020/03/22/gitlab-12-9-released","state":"closed","created_at":"2019-09-15T20:54:50.875Z","updated_at":"2020-09-02T11:04:41.671Z","due_date":"2020-03-17","start_date":"2020-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/44"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":3379682,"username":"vshushlin","name":"Vladimir Shushlin","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3379682/avatar.png","web_url":"https://gitlab.com/vshushlin"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":22,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/219","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":3},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/219","notes":"https://gitlab.com/api/v4/projects/734943/issues/219/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/219/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#219","relative":"#219","full":"gitlab-org/gitlab-pages#219"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":17671246,"iid":196,"project_id":734943,"title":"Serve *in*directly from artifacts","description":"![1_-_Artifact.zip_SSOT_plus_filesystem_cache](/uploads/31e4d81967e779c24dc76b08a89d747e/1_-_Artifact.zip_SSOT_plus_filesystem_cache.jpeg)\n\n## Prerequisites\n\n1. Pages site artifact zip files are no longer consumed https://gitlab.com/gitlab-org/gitlab-ce/issues/45888\n1. We regenerate any Pages artifact zip files that were already consumed https://gitlab.com/gitlab-org/gitlab-ee/issues/9346\n1. We have Pages pull config from the Rails API https://gitlab.com/gitlab-org/gitlab-pages/issues/161\n\n## Proposal\n\n1. Pages receives a request for a site resource.\n1. Pages does a lookup in configs as usual.\n1. If the site exists, and Pages doesn't have the artifact.zip yet, it downloads it via the Rails API.\n1. Pages extracts the zip to a unique path in its filesystem.\n1. Pages serves the site from that path.\n1. Pages regularly checks for invalidation, so the filesystem acts as an LRU or other cache.\n\n### Pros\n\n- ~Geo doesn't need to \"sync\" *anything* at all.\n- Pages becomes HA and scalable?\n- Pages site symlinks continue to work.\n- Object storage is not required.\n\n### Cons\n\n- If we are extracting artifact.zip on demand, there is a cold-cache issue, whenever a new request comes in, there is this initial download/extract time before it can handle requests, and this is shared by each \"Pages\" node. Site can be of GBs if it include a lot of images. It would 503 for a while.\n- Invalidating/expiring is complex as you need to ping each machine to free space, or each one have to ping API in order to determine if they can or cannot remove folder from disk - O(N*M)?\n\n## More related discussion\n\nGitLab Pages direction doc (internal link): https://docs.google.com/document/d/18awpT5MVhlmdX0erO1X__Od59KZvrXBbdV0HG5A7WZk/edit#\n\n@nick.thomas \n\n\u003e\u003e\u003e\nOnce we have https://gitlab.com/gitlab-org/gitlab-pages/issues/78 done, we could rework the main pages functionality as a set of pointers to specific pages artifacts, accessed in the same way.\n\nWe'd need to stop deleting pages artifacts, and somehow regenerate the ones already deleted, of course, but then custom domains and the group / project pages can just become pointers to artifacts, with an optional filesystem cache to speed things up.\n\nOnce a given pages artifact is no longer the latest, it can expire according to the usual rules.\n\u003e\u003e\u003e\n\nhttps://gitlab.com/gitlab-org/gitlab-pages/issues/158:\n\n@nick.thomas \n\n\u003e\u003e\u003e\nFor content, I think we want to implement https://gitlab.com/gitlab-org/gitlab-ce/issues/45888. Modulo existing customer data (which could _in principle_ be backfilled), this will ensure you can _always_ get the current Pages content for a site from the GitLab API, (which may, of course, be serving a redirect to an archive in object storage).\n\nOnce we have this, we can treat the file store as a **non-coherent temporary cache**. If we're still interested in continued resilience while the GitLab API is unavailable, we can endeavour to keep it filled all the time. If the file store is lost, we can stand up a new, empty one, and the cache can be refilled from the GitLab API, either aggressively, or on-first-request.\n\nIf we have two of these backends, they don't have to share an NFS mount, and the loss of one won't cause an outage.\n\u003e\u003e\u003e","state":"closed","created_at":"2019-01-25T20:01:38.217Z","updated_at":"2021-05-26T15:58:27.092Z","closed_at":"2021-05-26T15:58:27.077Z","closed_by":{"id":1144264,"username":"mkozono","name":"Michael Kozono","state":"active","avatar_url":"https://secure.gravatar.com/avatar/6243abba3cf112e6df4a5a644c5f86aa?s=80\u0026d=identicon","web_url":"https://gitlab.com/mkozono"},"labels":["Architecture decision","Category:Pages","customer","devops::release [DEPRECATED]","group::release [DEPRECATED]","section::ops","type::feature"],"milestone":{"id":490705,"iid":14,"group_id":9970,"title":"Backlog","description":"Issues that we want to do but are not planned right now. Open for contribution from the community.","state":"active","created_at":"2018-03-22T13:09:23.767Z","updated_at":"2018-10-30T14:56:54.069Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/14"},"assignees":[],"author":{"id":1144264,"username":"mkozono","name":"Michael Kozono","state":"active","avatar_url":"https://secure.gravatar.com/avatar/6243abba3cf112e6df4a5a644c5f86aa?s=80\u0026d=identicon","web_url":"https://gitlab.com/mkozono"},"type":"ISSUE","assignee":null,"user_notes_count":21,"merge_requests_count":0,"upvotes":10,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/196","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":20,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/196","notes":"https://gitlab.com/api/v4/projects/734943/issues/196/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/196/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#196","relative":"#196","full":"gitlab-org/gitlab-pages#196"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":589,"epic":{"id":2262,"iid":589,"title":"Geo: Support GitLab Pages","url":"/groups/gitlab-org/-/epics/589","group_id":9970},"iteration":null,"health_status":null},{"id":17669680,"iid":195,"project_id":734943,"title":"Serve directly from artifacts in object storage","description":"![3_-_Proxy_to_artifact_in_object_storage](/uploads/12aa3170c49ec07d67f84b0930c56202/3_-_Proxy_to_artifact_in_object_storage.jpeg)\n\n## Prerequisites\n\n1. Pages site artifact zip files are no longer consumed https://gitlab.com/gitlab-org/gitlab-ce/issues/45888\n1. We regenerate any Pages artifact zip files that were already consumed https://gitlab.com/gitlab-org/gitlab-ee/issues/9346\n1. We have Pages pull config from the Rails API https://gitlab.com/gitlab-org/gitlab-pages/issues/161\n\n## Proposal\n\n1. Pages receives a request for a site resource.\n1. Pages does a lookup in configs as usual.\n1. Pages basically proxies the artifact files in object storage.\n\n### After MVP\n\n1. Pages caches the proxied files\n1. Pages translates symlinks into redirects (if we feel this is important enough behavior to add back)\n\n### Pros\n\n- ~Geo doesn't need to \"sync\" _anything_ at all.\n- Pages becomes HA and scalable?\n\n### Cons\n\n- Object storage is required.\n- Pages site symlinks would break, but it may be possible to reimplement the behavior by translating them to redirects.\n- Pages would need to keep the \"old\" way as well. To support small, simple instances, e.g. Raspberry Pi.\n- How would we transition?\n\n### More related discussion\n\nGitLab Pages direction doc (internal link): https://docs.google.com/document/d/18awpT5MVhlmdX0erO1X__Od59KZvrXBbdV0HG5A7WZk/edit#\n\n@brodock https://gitlab.com/gitlab-org/gitlab-ee/issues/4611#note_88542926:\n\n\u003e\u003e\u003e\nI built a similar infra for hosting landing-pages at my previous company. The use-case is very similar to ours and it was also inspired in how GitHub Pages works.\n\nThe endpoint that served the pages were proxying requests to the S3 bucket, based on the domain we would find the base folder and then try to look for files.\nBecause S3 calls can be expensive, I've also added a short-lived TTL cache between the twos, so any spike in traffic would not mean multiple requests to the object storage.\n\nRelevant information is here: http://shipit.resultadosdigitais.com.br/blog/do-apache-ao-go-como-melhoramos-nossas-landing-pages/ (it's in portuguese but google translator does a really good job).\n\nFor that specific use-case the Domain mapping was kept in both the database (for persistence reasons) and in Redis (so it is fast). Redis was being used not as cache but as main source of truth for that.\n\u003e\u003e\u003e\n\n@nick.thomas https://gitlab.com/gitlab-org/gitlab-ee/issues/4611#note_101235573:\n\n\u003e\u003e\u003e\nServing the _contents_ of the artifacts directly from object storage does several undesirable things from my point of view:\n\n- Makes object storage mandatory for Pages (unnecessary complexity for small sites)\n- Requires many changes in the Pages daemon\n- Breaks current symlink support, so breaking existing pages deployments\n\nUltimately, though, the route we take there is up to ~Release and @jlenny.\n\u003e\u003e\u003e\n\nhttps://gitlab.com/gitlab-org/gitlab-pages/issues/68:\n\n@ayufan \n\n\u003e\u003e\u003e\nWe could serve pages directly from ZIP archives, but loading all of the metadata is IO and memory consuming operation so it is not worthy.\n\nMaybe the solution is to assume that pages access data behind object storage, always. We could then build pages and sidekiq to access object storage directly, not filesystem. Extract data there and update metadata to make pages to pick a new changes.\n\u003e\u003e\u003e\n\n@ayufan \n\n\u003e\u003e\u003e\nCan pages be just regular OAuth application? Can pages use general API to download artifacts? This is possible even today. Maybe we can just generate one time URLs to download artifacts, similar how you can sign S3 URLs.\n\u003e\u003e\u003e","state":"closed","created_at":"2019-01-25T17:55:27.240Z","updated_at":"2023-03-16T22:37:30.109Z","closed_at":"2019-02-04T21:49:19.408Z","closed_by":{"id":1144264,"username":"mkozono","name":"Michael Kozono","state":"active","avatar_url":"https://secure.gravatar.com/avatar/6243abba3cf112e6df4a5a644c5f86aa?s=80\u0026d=identicon","web_url":"https://gitlab.com/mkozono"},"labels":["Architecture decision","Category:Geo Replication","group::geo","type::feature"],"milestone":null,"assignees":[],"author":{"id":1144264,"username":"mkozono","name":"Michael Kozono","state":"active","avatar_url":"https://secure.gravatar.com/avatar/6243abba3cf112e6df4a5a644c5f86aa?s=80\u0026d=identicon","web_url":"https://gitlab.com/mkozono"},"type":"ISSUE","assignee":null,"user_notes_count":5,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/195","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":20,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/195","notes":"https://gitlab.com/api/v4/projects/734943/issues/195/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/195/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#195","relative":"#195","full":"gitlab-org/gitlab-pages#195"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":16202508,"iid":183,"project_id":734943,"title":"Custom error pages not served for namespace domains","description":"Summary\n===\n\n`/404.html` not served even though it exists.\n\nSteps to reproduce\n===\n\nCreate a GitLab Pages website with `/404.html`. Go to `/non/existing_file`.\n\nExpected\n===\n\n`/404.html` served.\n\nActual\n===\n\nDefault GitLab 404 page served when using `*.gitlab.io`, but `/404.html` served when using custom domain.\n\nUseful links\n===\n\nPublic repository with a minimal, complete, verifiable example: https://gitlab.com/error-page-demo/error-page-demo.gitlab.io\n\nNon-existent GitLab Page: https://error-page-demo.gitlab.io/non/existing_file\n\n\nPage that should be served: https://error-page-demo.gitlab.io/404.html\n\nRelevant documentation: https://docs.gitlab.com/ce/user/project/pages/introduction.html#custom-error-codes-pages","state":"closed","created_at":"2018-11-29T04:03:28.753Z","updated_at":"2022-05-25T05:44:41.328Z","closed_at":"2020-07-13T12:34:37.399Z","closed_by":{"id":3379682,"username":"vshushlin","name":"Vladimir Shushlin","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3379682/avatar.png","web_url":"https://gitlab.com/vshushlin"},"labels":["Category:Pages","[deprecated] Accepting merge requests","devops::release [DEPRECATED]","missed:12.10","priority::3","severity::3","type::bug","workflow::in review"],"milestone":{"id":1233746,"iid":49,"group_id":9970,"title":"13.2","description":"https://about.gitlab.com/releases/2020/07/22/gitlab-13-2-released/","state":"closed","created_at":"2020-04-09T17:28:01.032Z","updated_at":"2022-04-13T14:48:24.167Z","due_date":"2020-07-17","start_date":"2020-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/49"},"assignees":[{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"}],"author":{"id":2410096,"username":"JonstonChan","name":"Jonston Chan","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2410096/avatar.png","web_url":"https://gitlab.com/JonstonChan"},"type":"ISSUE","assignee":{"id":4082686,"username":"jaime","name":"Jaime Martinez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4082686/avatar.png","web_url":"https://gitlab.com/jaime"},"user_notes_count":25,"merge_requests_count":1,"upvotes":17,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/183","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/183","notes":"https://gitlab.com/api/v4/projects/734943/issues/183/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/183/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#183","relative":"#183","full":"gitlab-org/gitlab-pages#183"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":13689763,"iid":161,"project_id":734943,"title":"Load domain data from API instead of traversing filesystem","description":"We've seen a number of bugs where stale values of `config.json` are stored or stale directories mess up the domains loading. I think it might make sense to switch GitLab Pages to load the data from the API. We are doing this to support access control in !94.\n\n- [ ] CE: Add API endpoint to serve project pages config.json\n- [ ] Pages: Fetch and cache config when it does not exist","state":"closed","created_at":"2018-08-25T06:44:46.063Z","updated_at":"2020-11-27T21:40:46.880Z","closed_at":"2019-08-29T20:51:47.327Z","closed_by":{"id":2737706,"username":"darbyfrey","name":"Darby Frey","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2737706/avatar.png","web_url":"https://gitlab.com/darbyfrey"},"labels":["Category:Pages","devops::release [DEPRECATED]","maintenance::refactor","priority::2","severity::2"],"milestone":null,"assignees":[],"author":{"id":64248,"username":"stanhu","name":"Stan Hu","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/64248/stanhu.jpg","web_url":"https://gitlab.com/stanhu"},"type":"ISSUE","assignee":null,"user_notes_count":20,"merge_requests_count":0,"upvotes":6,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/161","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/161","notes":"https://gitlab.com/api/v4/projects/734943/issues/161/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/161/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#161","relative":"#161","full":"gitlab-org/gitlab-pages#161"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":4242,"epic":{"id":97712,"iid":4242,"title":"Move pages domain/project configuration to the API","url":"/groups/gitlab-org/-/epics/4242","group_id":9970,"human_readable_end_date":"May 17, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":2803186,"iid":28,"project_id":734943,"title":"Support HSTS on GitLab Pages","description":"## Problem to Solve\n\nSome users want to enforce no access to their web content without HTTPS/certificates. This can be done with [HTTP Strict Transport Security (HSTS) policy](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security), but we do not currently support enabling this for GitLab Pages sites.\n\n## Proposal\n\nBy allowing for enabling this as a custom configuration/policy associated with a Pages site, we can make this possible.\n\u003c!-- triage-serverless v3 PLEASE DO NOT REMOVE THIS SECTION --\u003e\n*This page may contain information related to upcoming products, features and functionality.\nIt is important to note that the information presented is for informational purposes only, so please do not rely on the information for purchasing or planning purposes.\nJust like with all projects, the items mentioned on the page are subject to change or delay, and the development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab Inc.*\n\u003c!-- triage-serverless v3 PLEASE DO NOT REMOVE THIS SECTION --\u003e","state":"closed","created_at":"2016-08-22T18:30:50.935Z","updated_at":"2022-10-31T01:38:00.882Z","closed_at":"2022-10-26T10:05:04.564Z","closed_by":{"id":1646689,"username":"oregand","name":"David O'Regan","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1646689/avatar.png","web_url":"https://gitlab.com/oregand"},"labels":["Category:Pages","Deliverable","GitLab Free","[deprecated] Accepting merge requests","backend","customer","devops::create","direction","group::editor","priority::2","section::dev","security","severity::3","type::feature","workflow::refinement"],"milestone":{"id":2453027,"iid":77,"group_id":9970,"title":"15.5","description":"","state":"active","created_at":"2022-02-03T22:29:56.909Z","updated_at":"2022-02-03T22:29:56.909Z","due_date":"2022-10-17","start_date":"2022-09-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/77"},"assignees":[{"id":10764887,"username":"vtak","name":"Vishal Tak","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10764887/avatar.png","web_url":"https://gitlab.com/vtak"}],"author":{"id":602446,"username":"mhalano","name":"Marcos H. Alano","state":"active","avatar_url":"https://secure.gravatar.com/avatar/42d18016aae2b40cc761f58eda8b3e17?s=80\u0026d=identicon","web_url":"https://gitlab.com/mhalano"},"type":"ISSUE","assignee":{"id":10764887,"username":"vtak","name":"Vishal Tak","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10764887/avatar.png","web_url":"https://gitlab.com/vtak"},"user_notes_count":78,"merge_requests_count":0,"upvotes":45,"downvotes":0,"due_date":"2020-11-18","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/28","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":1,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/28","notes":"https://gitlab.com/api/v4/projects/734943/issues/28/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/28/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#28","relative":"#28","full":"gitlab-org/gitlab-pages#28"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":766,"epic":{"id":3437,"iid":766,"title":"Improve certificate handling for Pages","url":"/groups/gitlab-org/-/epics/766","group_id":9970,"human_readable_end_date":"Oct 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":2574075,"iid":23,"project_id":734943,"title":"Support for single page applications route all requests to index.html.","description":"## Problem to Solve \n\nWhen routing requests to Gitlab Pages, if there is no default index.html, the request renders an error that does not permit SEO or support of SPA on GitLab Pages. \n\n## Solution \n\nRoute all requests to GitPages to /index.html by:\n*  implementing a `route single page app to index.html` to a checkbox in **Pages \u003e Settings**\n* Enable SPAs to serve any accompanying files so that it works\n* Ensure existing files are served before trying to serve `index.html`\n\n## Update 2021-07-20\nClosing this issue in favor of https://gitlab.com/gitlab-org/gitlab-pages/-/issues/57. We aim to enable SPAs via a new `.gitlab-pages.yml`","state":"closed","created_at":"2016-07-09T13:57:40.932Z","updated_at":"2022-06-27T06:15:31.792Z","closed_at":"2021-07-20T17:47:29.906Z","closed_by":{"id":5213298,"username":"kbychu","name":"Kevin Chu","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0b6f70425a17d5ab47ec6093f8df9aa6?s=80\u0026d=identicon","web_url":"https://gitlab.com/kbychu"},"labels":["CEO Interest","Category:Pages","Community challenge","[deprecated] Accepting merge requests","customer","devops::release [DEPRECATED]","group::release [DEPRECATED]","section::ops","type::feature","workflow::planning breakdown"],"milestone":{"id":490705,"iid":14,"group_id":9970,"title":"Backlog","description":"Issues that we want to do but are not planned right now. Open for contribution from the community.","state":"active","created_at":"2018-03-22T13:09:23.767Z","updated_at":"2018-10-30T14:56:54.069Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/14"},"assignees":[],"author":{"id":423525,"username":"mxrlkn","name":"mxrlkn","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/423525/avatar.png","web_url":"https://gitlab.com/mxrlkn"},"type":"ISSUE","assignee":null,"user_notes_count":66,"merge_requests_count":0,"upvotes":98,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/gitlab-pages/-/issues/23","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/734943/issues/23","notes":"https://gitlab.com/api/v4/projects/734943/issues/23/notes","award_emoji":"https://gitlab.com/api/v4/projects/734943/issues/23/award_emoji","project":"https://gitlab.com/api/v4/projects/734943","closed_as_duplicate_of":null},"references":{"short":"#23","relative":"#23","full":"gitlab-org/gitlab-pages#23"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":2317,"epic":{"id":16058,"iid":2317,"title":"Pages: Redirects","url":"/groups/gitlab-org/-/epics/2317","group_id":9970,"human_readable_end_date":"Sep 17, 2020","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null}]