[{"id":109094220,"iid":3076,"project_id":3836952,"title":"SCORU: WASM: Tickify module initialization","description":"`Eval.init` from the WebAssembly reference interpreter needs to be tickify. It has a significant time complexity cost and must be broken up.\n\n!5552 introduces lazy vectors instead of list for the module fields, which are then converted into list in `init`, then back to lazy vectors. Tickification can remove these conversions roundtrip by directly going from lazy vector to lazy vector, and evaluate the fields as small steps.\n\nRemaining:\n- Remove all uses of to_list/concat/of_list from `Eval.init`","state":"closed","created_at":"2022-05-25T10:50:48.155Z","updated_at":"2022-09-07T14:51:48.133Z","closed_at":"2022-09-07T14:51:48.116Z","closed_by":{"id":7921723,"username":"lthms","name":"Thomas Letan","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7921723/avatar.png","web_url":"https://gitlab.com/lthms"},"labels":["scoru"],"milestone":{"id":2725830,"iid":107,"project_id":3836952,"title":"(OKR 2022Q3 - 2.1) SCORU Wasm - Small Ticks","description":"\r\n# Goal\r\n\r\nCompletion of this milestone allows to enable SCORU + Wasm on mainnet.\r\n\r\n### Background\r\n\r\nThe goal of this milestone is to complete the implementation of the Wasm PVM and obtain confidence that:\r\n\r\n1. Layer 1 is safe: The WASM PVM cannot be used to attack the layer-1  by exploiting unbound computation time.\r\n2. Layer 2 is safe: The WASM PVM produces execution step within the SCORU size limit.\r\n3. Correctness: The WASM PVM implements WASM semantics. Limitations and restriction are documented.\r\n\r\n\r\n#### Stuck state\r\n\r\nCritical failure conditions in the PVM (\"assert false\" situations) is responded to by placing the PVM in a stuck state, where it no longer advances meaningfully, similar to a \"bluescreen of death\". \r\n\r\nTogether with #2198 and #3561, we enforce that the worst outcome of  stuck state is an asset-lockup situation, not an arbitrary-withdrawal situation.\r\n\r\n\r\n#### Breaking changes\r\n\r\nWe will need to prioritize carefully the remaining work, such that\r\n\r\n1. We have a WASM PVM working in mid-September.\r\n2. Missing features of the WASM PVM can be implemented without completely breaking originated rollup.\r\n3. Any breaking change needs to be backed-up by a migration plan.\r\n\r\nEstimate: 12pw\r\n\r\n\r\n# Current work/MRs\r\n- Gas metering for compute-step function #3548 @ole.kruger\r\n- Tickify module initialization #3076 @lthms \r\n- Non-recursive admin instructions #3606 @hans.hoglund \r\n- Nominal gast cost of proof verification #3164 @yrg \r\n\r\n# Breakdown\r\n\r\n\u003cdetails\u003e\r\n\u003csummary\u003eWork to be reevaluated\u003c/summary\u003e\r\n\r\n## L1 can control L2 semantics divergence\r\n\r\nThe goal of these tasks was to provide safe guard for ensuring a L2 tick cannot be underevaluated from the perspective of the L1 gas consumption.\r\n\r\nThe methods explored are not satisfactory, and we believe there are other means to achieve this goal, in particular the hardening of the L2 implementation.\r\n\r\n- [ ] Gas metering for compute-step function in WASM PVM #3548\r\n- [ ] Nominal gast cost of proof verification #3164 (handle in %\"Smart Contract Rollup Hardening?)\r\n\r\n## Test-suite conformance\r\n\r\nThis can be re-explore during the stabilization period, but if we have a large number of testing kernels, this is probably not necessary/of high priority.\r\n\r\n- [ ] Instrument the WASM test-suite to do a decode-eval-encode loop during parsing #3500 \r\n\r\n\u003c/details\u003e\r\n\r\n## PVM Life cycle and correctness\r\n- [x] Handling all inputs per commitment !6698\r\n\r\n\r\n## Small-step decode and initialization\r\n\r\n- [X] Add merkleized representation of parser state #3150 !5891 \r\n- [X] Add merkleized representation of the parsed AST #3149\r\n- [X] Scoru_wasm: Parser state encodings !5891 \r\n- [x] Merkleization of the parser's input #3224 \r\n- [x] Tickify module initialization #3076\r\n- [x] Tickify linking #3786 \r\n- [x] Non-recursive admin instructions #3606\r\n\r\nOnce this is all done, then we close this:\r\n\r\n- [x] Ensure \"unsafe\" functions are never used inside the PVM #3378\r\n\r\n\u003cdetails\u003e\r\n\u003csummary\u003eDone\u003c/summary\u003e\r\n\r\n## Error handling\r\n- [x] lib_lazy_containers + lib_webassembly: make exceptions distinguishable (improves error reporting) !6097\r\n- [X] **lib_scoru_wasm: disallow exceptions in entry-point functions #3448** !6101 !6097\r\n\r\n\u003c/details\u003e\r\n\r\n## Code quality (Critical)\r\n- [X] Factor out module-registry from AST func nodes #3492 Nice to have ðŸ‘¶\r\n- [X] Lib_webassembly: cleanup deadcode #3334 Code quality ðŸŒŸ Nice to have ðŸ‘¶\r\n- [x] WASM PVM: Simplify decoding logic for WASM PVM #3444\r\n\r\n## Documentation\r\n- [x] Document version of spec and subset/additions #3117 doc \r\n\r\n\u003cdetails\u003e\r\n\u003csummary\u003eTo be revisited when the remaining tasks are done\u003c/summary\u003e\r\n\r\n## Code quality (Nice-to-Have)\r\n- [ ] WASM: Follow up items for lazy-containers #3535 \r\n- [ ] Increase the message size limit for faster loading #3361 \r\n- [ ] Use ppx_deriving.show for AST pretty-printer #3456 \r\n- [ ] Lib_webassembly: fix unused variables #3304 \r\n- [ ] Single source of truth for function types #3396 \r\n- [ ] More compact output proofs #3237 \r\n- [ ] WASM Parser: refactoring of duplicated code #3120 \r\n- [ ] Wasm PVM: Remove duplication in input proofs #3091 \r\n- [ ] Binary parsing: Reuse a unique lazy stack #3569 \r\n- [ ] Drop locations from AST #3566 \r\n- [ ] Increase confidence in Interpreter_encodings boilerplate #3565 \r\n- [ ] SCORU WASM: Derive AST generators #3511 \r\n- [ ] Lib_scoru_wasm: Improve wasm encoding schema with named fields #3469 \r\n- [ ] Use library function for Assert.false and replicate #3532\r\n- [ ] Add generators for vector instructions #3455\r\n- [ ] Add tests for corner cases in Chunked_byte_vector #3085\r\n- [ ] Test tree encoding with official Wasm test suite #3570\r\n\r\n\u003c/details\u003e\r\n","state":"closed","created_at":"2022-08-04T17:13:44.166Z","updated_at":"2022-11-16T08:34:25.529Z","due_date":"2022-09-16","start_date":"2022-08-12","expired":true,"web_url":"https://gitlab.com/tezos/tezos/-/milestones/107"},"assignees":[{"id":7921723,"username":"lthms","name":"Thomas Letan","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7921723/avatar.png","web_url":"https://gitlab.com/lthms"}],"author":{"id":10768348,"username":"ole.kruger","name":"Ole KrÃ¼ger","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10768348/avatar.png","web_url":"https://gitlab.com/ole.kruger"},"type":"ISSUE","assignee":{"id":7921723,"username":"lthms","name":"Thomas Letan","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7921723/avatar.png","web_url":"https://gitlab.com/lthms"},"user_notes_count":5,"merge_requests_count":1,"upvotes":1,"downvotes":0,"due_date":"2022-08-24","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/tezos/tezos/-/issues/3076","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/3836952/issues/3076","notes":"https://gitlab.com/api/v4/projects/3836952/issues/3076/notes","award_emoji":"https://gitlab.com/api/v4/projects/3836952/issues/3076/award_emoji","project":"https://gitlab.com/api/v4/projects/3836952","closed_as_duplicate_of":null},"references":{"short":"#3076","relative":"#3076","full":"tezos/tezos#3076"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":95278232,"iid":1884,"project_id":3836952,"title":"Make tezos-proxy-server honor /chains/main/block/head/header","description":"`Tezos Commons` is willing to use `tezos-proxy-server` in their deployment. Their main target is to use it for `run_operations`, which works already :muscle:. However, they were surprised that it is not serving `/chains/main/block/head/header` too.\n\nIndeed `tezos-proxy-server` doesn't serve it, because it is registered in a resto `Directory` in `block_directory.ml` while the proxy server serves `Plugin.RPC.rpc_services`. If we were to do this, it would go something like:\n\n```diff\n--- a/src/proto_alpha/lib_client/proxy.ml\n+++ b/src/proto_alpha/lib_client/proxy.ml\n@@ -163,6 +163,28 @@ let init_env_rpc_context (_printer : Tezos_client_base.Client_context.printer)\n   initial_context proxy_builder rpc_context mode chain block \u003e\u003e= fun context -\u003e\n   return {Tezos_protocol_environment.block_hash; block_header = shell; context}\n \n+let block_services_dir (rpc_context : RPC_context.json) =\n+  let open Protocol in\n+  let module Directory = Resto_directory.Make (RPC_encoding) in\n+  let rpc_context = new Protocol_client_context.wrap_rpc_context rpc_context in\n+  let open Tezos_shell_services in\n+  let path =\n+    let open Tezos_rpc.RPC_path in\n+    prefix Block_services.chain_path Block_services.path\n+  in\n+  let service =\n+    Tezos_rpc.RPC_service.prefix path Block_services.Empty.S.header\n+  in\n+  Directory.register Directory.empty service (fun (((), chain), block) -\u003e\n+      let res =\n+        Protocol_client_context.Alpha_block_services.header\n+          rpc_context\n+          ~chain\n+          ~block\n+          ()\n+      in\n+      assert false)\n+\n```\n\nor exposing `proxy.ml`'s `proxy_block_header` function in some way.","state":"closed","created_at":"2021-10-12T11:54:14.627Z","updated_at":"2022-09-01T14:42:30.544Z","closed_at":"2022-09-01T14:42:30.517Z","closed_by":{"id":5738128,"username":"smelc","name":"ClÃ©ment Hurlin","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/5738128/avatar.png","web_url":"https://gitlab.com/smelc"},"labels":["Nice to have ðŸ‘¶","proxy"],"milestone":{"id":2244729,"iid":42,"project_id":3836952,"title":"(OKR 2022Q3 - 3.5) Light mode v2 + Proxy/Light pimping","description":"## Roadmap\r\n\r\n_In this roadmap, the _support people_ are devs that can help us on specific topics/are knowledgeable about what we do; so that I (@smelc) am not a bottleneck._\r\n\r\nAll 3 objectives have been completely implemented. For the record below; we have left how we proceeded.\r\n\r\n- Optional, for @smelc: #2380, requires sync with the cache people (@yrg, @Saroupille). Sync happened on January 27th. There seems to be no problem with the cache. Read-write control with !4300 seems fine.\r\n- Do #2385 - `Test Proxy_context's delegation` first, it's a nice onboarding test task, ongoing here by @LitchiPi: https://gitlab.com/tezos/tezos/-/commits/timcer@test_proxy_context. Support people: @sventimir \r\n- In parallel to #2385, #2391 - `Refactoring: pack args of functions of src/proto_*/lib_client/proxy.ml into a record` can be done. It's a small onboarding task that on the required path. Support people: @richard.bonichon done\r\n- Then possibly do #2381 - `test Proxy_context, fix Proxy_context.{list, fold}`, a more advanced test task that requires changing `Proxy_context`. Support people: @sventimir, @samoht \r\n- After #2391 above, do #2430 - `tezos-proxy-server: add --data-dir option` which prepares for the central piece this objective is about. done\r\n- The central MR is https://gitlab.com/tezos/tezos/-/merge_requests/4684. Once it is merged we can deem this objective finished.\r\n\r\nObjective 2 has been completely implemented:\r\n\r\n- We discussed with the Irmin people on January 24th, they explained us the new proof APIs from Irmin 2.10. These APIs seem to be more powerful than what we need, guidance is required to do the right thing :copyright:\r\n- We need https://gitlab.com/tezos/tezos/-/merge_requests/4086 merged\r\n- We also need https://gitlab.com/tezos/tezos/-/merge_requests/4307\r\n- And then ideally, we can reuse https://gitlab.com/tezos/tezos/-/merge_requests/4449 (which builds on top of the two previous ones)\r\n- Roughly half of the work has been done in this branch: [smelc@merkle-proofs-for-light-mode-v2](https://gitlab.com/nomadic-labs/tezos/-/commits/smelc@merkle-proofs-for-light-mode-v2). This PoC needs to be rebased and tests to be adapted. But the heavy lifting in `lib_context` and `lib_proxy` has been done.\r\n- Final version of the work is https://gitlab.com/tezos/tezos/-/merge_requests/5535\r\n\r\n## Objective 1: make [tezos-proxy-server](https://tezos.gitlab.io/user/proxy-server.html) capable of using a node's data-dir instead of RPCs done\r\n\r\nThis objective consists of:\r\n\r\n- Adding a new `--data-dir` option to `tezos-proxy-server`, exclusive with `--endpoint` (see `./tezos-proxy-server --help` at tezos/tezos root for doc). This will require changing `src/bin_proxy_server` and `src/lib_proxy_server_config`.\r\n- Implementing this flag means passing a different `M.proxy_delegate` to [Proxy_context.empty](https://gitlab.com/tezos/tezos/-/blob/934c9b97c847293f3cf08651c9b3b35514467505/src/lib_protocol_environment/proxy_context.ml#L272). This new implementation should be backed by a `Shell_context` that reads the `data-dir` like the baker does in [baking_simulator.ml](https://gitlab.com/tezos/tezos/-/blob/934c9b97c847293f3cf08651c9b3b35514467505/src/proto_alpha/lib_delegate/baking_simulator.ml#L68)\r\n\r\n## Objective 2: Light mode v2\r\n\r\nThe current version of `tezos-client` `--mode light` doesn't use true Merkle proofs. It uses shallow trees. However, since Irmin 2.8 in Fall 2021, shallow trees are barely working and hereby make the light mode rely on a dirty hack visible in [lib_proxy/local_context.ml](https://gitlab.com/tezos/tezos/-/blob/4af5c52fded819bf910dd02968be47fbf6650eb2/src/lib_proxy/local_context.ml#L48). The point of this project is to make this right again, hereby having a robust light mode again. The use of shallow trees is visible in:\r\n\r\n- The type of trees: [merkle_tree](https://gitlab.com/tezos/tezos/-/blob/1f091e90686aa74083b071e8a1ba36299cde9635/src/lib_shell_services/block_services.ml#L254)\r\n- The code that builds such trees: [merkle_tree t leaf_kind key](https://gitlab.com/tezos/tezos/-/blob/1f091e90686aa74083b071e8a1ba36299cde9635/src/lib_context/context.ml#L325)\r\n\r\nIn the latter function, if `leaf_kind` ([definition here](https://gitlab.com/tezos/tezos/-/blob/1f091e90686aa74083b071e8a1ba36299cde9635/src/lib_shell_services/block_services.ml#L257)) is `Hole`, a merkle tree like this will be returned when querying `/a/b2/c`:\r\n\r\n```\r\n    hash_a\r\n   /     \\\r\nhash_b1   hash_b2\r\n            \\\r\n           hash_c\r\n```\r\n\r\nIn this context, a true Merkle proof would be to return `hash(hash_a, hash(hash_b1, hash(hash_b2, hash_c)))`. In this new version of the light mode, the resulting hash would still be the same as the hash of the tree returned by `merkle_tree t leaf_kind key` with `leaf_kind` being `Raw_context`, which has this shape:\r\n\r\n```\r\n    hash_a\r\n   /     \\\r\nhash_b1   hash_b2\r\n            \\\r\n           raw_context containing data of c\r\n```\r\n\r\nwhere raw_context is [this type](https://gitlab.com/tezos/tezos/-/blob/1f091e90686aa74083b071e8a1ba36299cde9635/src/lib_shell_services/block_services.ml#L187).\r\n\r\nOnce true Merkle proofs are returned, the algorithm that checks that the tree obtained from one `tezos-node` with `leaf_kind=Raw_context` matches with the trees obtained from many `tezos-node` with `leaf_kind=Hole` can be simplified. This algorithm, that right now checks for [tree inclusion](https://gitlab.com/tezos/tezos/-/blob/1f091e90686aa74083b071e8a1ba36299cde9635/src/lib_proxy/light_internal.ml#L218), will have to compute the Merkle hash of the tree obtained with `leaf_kind=Raw_context` and check it matches the incoming Merkle hashes.\r\n\r\nTo do this, we will use the new `proofs` API that Irmin provided in [release 2.10](https://github.com/mirage/irmin/releases/tag/2.10.0) and which happens to have been merged recently in tezos/tezos: https://gitlab.com/tezos/tezos/-/merge_requests/4138. From afar, it looks like this will go as follows:\r\n\r\n1. Use the new proof producing facility of Irmin to implement function `merkle_tree` in [src/lib_context/context.ml](https://gitlab.com/tezos/tezos/-/blob/3e0b16f703abbbde091c1c30d1e9b25290607a52/src/lib_context/context.ml#L359).\r\n1. Update the light mode internal to use the new Irmin proofs starting [here in src/lib_proxy/light_core.ml](https://gitlab.com/tezos/tezos/-/blob/3e0b16f703abbbde091c1c30d1e9b25290607a52/src/lib_proxy/light_core.ml#L208). This will allow to replace the custom shallow tree validation algorithm with Irmin's own proof verification system.\r\n\r\n## Objective 3 (optional): Proxy/light mode pimping\r\n\r\nContext: the light mode is a specialized instance of the proxy mode. Hence, enhancements to the proxy mode below also affect the light mode.\r\n\r\n### Fix the proxy mode implementation\r\n\r\nDone in https://gitlab.com/tezos/tezos/-/merge_requests/4628\r\n\r\nThe proxy mode implementation is incorrect for enumerating functions like `list` and `fold` because the corresponding implementation does not query the distant endpoint. This is visible [here](https://gitlab.com/tezos/tezos/-/blob/1f091e90686aa74083b071e8a1ba36299cde9635/src/lib_protocol_environment/proxy_context.ml#L185). This function should use the available `t.proxy` value (of type `M.proxy_delegate option`) to query the distant endpoint.\r\n\r\nThis implementation was written wrong because it was written when an API was extended (and so the proxy mode had to provide it), but it was never tested in the context of the proxy mode.\r\n\r\nThere are tests witnessing this issue: https://gitlab.com/tezos/tezos/-/merge_requests/3438/diffs#4b8ec5237158a5810d201d05a82c8b7d9b292c4f. This was discovered in the context of https://gitlab.com/tezos/tezos/-/merge_requests/3421 (which wanted to make use of these new functions).\r\n\r\n## ~~Out of scope objective: Clarify when a RPC request uses the light mode or not~~ deemed irrelevant\r\n\r\n~~Even with `--mode light`, not all requests make use of the light mode capability, because the light mode intercepts the requests to the low-level storage. If a request does not use the low-level storage, then it won't benefit of the light mode. We should try to see whether we can rewrite some high-level commands so that they are more likely to go through the light mode when it is activated.~~","state":"closed","created_at":"2021-09-22T08:31:43.499Z","updated_at":"2022-10-03T14:32:45.581Z","due_date":"2022-10-03","start_date":"2022-01-17","expired":true,"web_url":"https://gitlab.com/tezos/tezos/-/milestones/42"},"assignees":[],"author":{"id":5738128,"username":"smelc","name":"ClÃ©ment Hurlin","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/5738128/avatar.png","web_url":"https://gitlab.com/smelc"},"type":"ISSUE","assignee":null,"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/tezos/tezos/-/issues/1884","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":24,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/3836952/issues/1884","notes":"https://gitlab.com/api/v4/projects/3836952/issues/1884/notes","award_emoji":"https://gitlab.com/api/v4/projects/3836952/issues/1884/award_emoji","project":"https://gitlab.com/api/v4/projects/3836952","closed_as_duplicate_of":null},"references":{"short":"#1884","relative":"#1884","full":"tezos/tezos#1884"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":95043610,"iid":1873,"project_id":3836952,"title":"Small merge requests are encouraged, but this is not documented","description":"There is consensus in the merge team to favor small merge requests. However, this is not stated in the documentation; and this caused confusion in the past. Also, it happened that small merge requests introducing dead code were rejected because this policy was not well known enough.","state":"closed","created_at":"2021-10-07T13:23:36.887Z","updated_at":"2021-10-12T10:02:59.331Z","closed_at":"2021-10-12T10:02:59.316Z","closed_by":{"id":8770486,"username":"nomadic-margebot","name":"Marge Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/8770486/avatar.png","web_url":"https://gitlab.com/nomadic-margebot"},"labels":["doc ðŸ“–"],"milestone":{"id":2239221,"iid":41,"project_id":3836952,"title":"Merge Stream Speedup","description":"# Mission\r\n\r\nCurate and coordinate the stream of merge requests coming into the repo. Help the community improve the MR process.\r\n\r\n- Provide assistance with the social and software engineering techniques required to accelerate progress of MRs.\r\n- Supervise the open (non-draft) MRs to ensure that the right actions are being taken; advise.\r\n- Educate the developer community about how to work faster by working better.\r\n- Assist with removing blockers.\r\n- Assist with notifying blocking persons that they are a bottleneck.\r\n- Improve and augment the documentation about the MR process for Tezos core.\r\n- ~~Regularly publish metrics and status ([example](https://docs.google.com/spreadsheets/d/1eMiIsBQ4J_U0dQpCLWADglQubCNKDQGQEnTQrILQ_Fw/edit?usp=sharing)) to the community so that it can respond and improve.~~ _This goal was removed since @smelc is assigned to this at 50% instead of the initial 100%._\r\n- Actually perform MR reviews/approvals where appropriate.\r\n- Coordinate with and alert personnel working on CI in the case of problems that affect the flow of MRs.\r\n- Help MR authors understand their responsibilities.\r\n\r\n# Crew members, Nov 15th 2021 -\u003e Dec 3rd (end)\r\n\r\n- ClÃ©ment Hurlin, [@smelc](https://gitlab.com/smelc), DRI, 50%\r\n  - Accelerate progress of MRs\r\n  - Identify blockers, ping people, prioritize MRs so that blockers are acted on first\r\n  - Augment the documentation regarding the MR process (see MR tab below)\r\n  - Perform reviews, approve, upgrade approvals\r\n  - Advice MR authors, citing a lot the documentation to spread knowledge\r\n\r\n# Crew members, from Sept 20th 2021 (start) to Nov 14th 2021\r\n\r\n- ClÃ©ment Hurlin, [@smelc](https://gitlab.com/smelc), DRI, 50%\r\n  - Accelerate progress of MRs\r\n  - Identify blockers, ping people, prioritize MRs so that blockers are acted on first\r\n  - Augment the documentation regarding the MR process (see MR tab below)\r\n  - Perform reviews, approve, upgrade approvals\r\n  - Advice MR authors, citing a lot the documentation to spread knowledge\r\n- RaphaÃ«l Cauderlier, [@rafoo_](https://gitlab.com/rafoo_)\r\n  - Perform reviews, approve\r\n  - Work on MRs that have languished for too long\r\n  - ~~Define metrics, implement them~~ (see above)\r\n  - Advice MR authors, citing a lot the documentation to spread knowledge\r\n- Victor Allombert, [@vect0r](https://gitlab.com/vect0r)\r\n  - Perform reviews, approve\r\n  - Advice MR authors, citing a lot the documentation to spread knowledge\r\n\r\n# Our activity\r\n\r\n* Our dispatching activity is tracked in [tezos-merge-statuses/-/commits](https://gitlab.com/smelc/tezos-merge-statuses/-/commits/main).\r\n* We wrote a script to drive our action: https://gitlab.com/smelc/tezos_merge_team_scripts\r\n\r\n# End of Mission\r\n\r\nThe initial project (with three members) lasted from September 20th 2021 to November 14th 2021. It was a time-boxed project with a fixed end date (since the acceptance criteria are subjective).\r\n\r\nStarting November 15th 2021, this project only member is @smelc and the objective is to maintain tezos/tezos good health MR-wise and continue spreading best practices.","state":"closed","created_at":"2021-09-18T19:24:14.805Z","updated_at":"2021-12-03T14:09:26.002Z","due_date":"2021-12-04","start_date":"2021-09-20","expired":true,"web_url":"https://gitlab.com/tezos/tezos/-/milestones/41"},"assignees":[],"author":{"id":5738128,"username":"smelc","name":"ClÃ©ment Hurlin","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/5738128/avatar.png","web_url":"https://gitlab.com/smelc"},"type":"ISSUE","assignee":null,"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/tezos/tezos/-/issues/1873","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/3836952/issues/1873","notes":"https://gitlab.com/api/v4/projects/3836952/issues/1873/notes","award_emoji":"https://gitlab.com/api/v4/projects/3836952/issues/1873/award_emoji","project":"https://gitlab.com/api/v4/projects/3836952","closed_as_duplicate_of":null},"references":{"short":"#1873","relative":"#1873","full":"tezos/tezos#1873"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null}]