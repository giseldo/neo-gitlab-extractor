[{"id":109014572,"iid":4347,"project_id":2670515,"title":"Namespace dropdown doesn't default to the namespace in the URL params","description":"Namespace dropdown doesn't default to the namespace in the URL params since its looking for namespace id on a non-existent order (`current_namespace_id: @order\u0026.gl_namespace_id` in `_new_gitlab_com_subscription.html.haml` but on new subscription purchase flow, the order is yet to be created).\n\nSince we're in related area, it's also worth removing non-applicable reference to subscription when creating a new SaaS subscription.\n\n![Screen_Shot_2022-05-24_at_6.40.35_PM](/uploads/5e37c52bb52f413fabced01e10453b13/Screen_Shot_2022-05-24_at_6.40.35_PM.png)\n\nCreated from [this note](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3242#note_653915057)\n\n\u003e In `app/views/subscriptions/_new_gitlab_com_subscription.html.haml`:\n\n\u003e * If we are creating a new subscription, there should be no `subscription_id` params, thus no `@subscription` and no `@order`.\n\u003e * `current_namespace_id` is required to set the default selected namespace, but should it be from `params[:gl_namespace_id]` instead of from `@order\u0026.gl_namespace_id`?\n\n\u003e ```\n\u003e #js-new-gitlab-com-subscription{ data: { subscriptions_path: subscriptions_path,\n\u003e   plan_id: @plan.id,\n\u003e   plan_name: @plan.name,\n\u003e   customer: CustomerPresenter.new(current_customer).present.to_json,\n\u003e   subscription: @subscription ? SubscriptionPresenter.new(@subscription, current_customer).present : nil,     \u003c---\n\u003e   namespaces: gitlab_namespaces_for_select.to_json,\n\u003e   namespaces_with_paid_plan: gitlab_namespaces_ineligible_for_purchase_ids,\n\u003e   current_namespace_id: @order\u0026.gl_namespace_id,                                                              \u003c---\n\u003e   seat_price: @plan.price,\n\u003e   payment_methods: @payment_methods.to_json } }\n\u003e ```\n\n \u003cbr/\u003e\n\n`init_new_gitlab_subscription.js` and `new_gitlab_subscription_form.vue` might need some cleanup with the above changes to remove `subscription` usage.\n\nA couple of things to make sure with the changes:\n\n1. The default selected namespace when visiting the new SaaS subscription page should be the one in the params (this is broken currently since its looking for namespace on non-existent order for yet to be purchased subscription)\n2. We're still able to preview transaction when selecting different namespaces with correct prices and purchasing new subscription still works as before","state":"closed","created_at":"2022-05-24T06:37:36.833Z","updated_at":"2022-07-15T13:11:30.349Z","closed_at":"2022-07-15T09:34:23.449Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","SUS::Impacting","UX","[deprecated] low hanging fruit","devops::fulfillment","frontend","group::purchase","section::fulfillment","severity::2","type::bug","workflow::production"],"milestone":{"id":2453024,"iid":74,"group_id":9970,"title":"15.2","description":"","state":"active","created_at":"2022-02-03T22:24:46.818Z","updated_at":"2022-02-03T22:26:32.010Z","due_date":"2022-07-17","start_date":"2022-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/74"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4347","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4347","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4347/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4347/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4347","relative":"#4347","full":"gitlab-org/customers-gitlab-com#4347"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108983087,"iid":4345,"project_id":2670515,"title":"CustomersDot \u003c\u003e GitLab.com Access Token Short Expiry","description":"## Summary\n\nUnsure if this is a \"bug\" per se, and [from slack discussions](https://gitlab.slack.com/archives/CMJ8JR0RH/p1653039025967549), nothing on cdot code has changed recently.  But multiple support engineers have noticed this as seemingly different from how it worked until now.\n\nRecently (within the last week as of 2022-05-23), Support team has noticed customer's cDot accounts no longer being linked to their GitLab.com users.  From admin point of view, \"GitLab Groups\" page shows `Customer has not linked their GitLab.com account.` even when the Customer record has a `uid` and `gitlab` provider.  This creates an extra challenge for us on the support side due to reduced visibility on customer's namespaces.\n\nFrom a customer POV, My Account \u003e Your GitLab.com account shows `No account linked.` _unless_ the view is loaded as a customer logging into cDot using their GitLab account.\n\nIn the history tab, very recent entries exist nullifying the access token.  For example, [my account on customers.staging](https://customers.staging.gitlab.com/admin/customer/59644): \n\n\u003e 2022-05-23 13:35 | khughes+test63@gitlab.com | update [updated_at = 2022-05-23 13:35:35 UTC, access_token = ] \n\nThe Provider is (and has been) `gitlab` and UID is `1688436` ([my staging account](https://staging.gitlab.com/khughes))\n\nThe question here is: what changed and is it worth investigating?\n\nIt seems like nothing on cDot side has changed recently, so perhaps GitLab.com side?\n\n### Support impact\n\nThere are a few services on cDot side which do rely on user-level access token when available, for example [Gitlab::HostedPlans::CreateTrialService](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/b3f20f2538d4da3bd016e19f86938e118f420f76/app/services/gitlab/hosted_plans/create_trial_service.rb#L115-121).  Support tooling [relies on that service](https://gitlab.com/gitlab-com/support/toolbox/console-training-wheels/-/blob/master/lib/support_team.rb#L143) for \"extending\" expired subscriptions; it doesn't currently supply an admin token so it fails to work otherwise.  Anecdotally speaking, this has worked fine up until very recently where we're now seeing accounts that had persisted access_tokens being invalidated.\n\n### Customer impact\n\nFor the customer purchasing perspective, it contributes to a bit of a confusing process when managing an existing subscription.  Again, using my staging account (which was previously linked), trying to add minutes into an existing sub:\n\n![screenshot-2022-05-23-10_29](/uploads/0961cc676bc8241044eaea608396cb72/screenshot-2022-05-23-10_29.png)\n\nSends me to the purchase URL (`https://customers.staging.gitlab.com/subscriptions/new?plan_id=2c92a0086a07f4a8016a2c0a1f7b4b4c\u0026subscription_id=A-S00082613\u0026transaction=ci_minutes`) now requiring an extra step to re-link: `https://customers.staging.gitlab.com/auth/gitlab?redirect_to=https%3A%2F%2Fcustomers.staging.gitlab.com%2Fsubscriptions%2Fnew%3Fplan_id%3D2c92a0086a07f4a8016a2c0a1f7b4b4c%26subscription_id%3DA-S00082613%26transaction%3Dci_minutes`\n\nwhich resulted in a 404\n\n![screenshot-2022-05-23-10_30](/uploads/2146394e4d2f48c58dfdaf04f790774c/screenshot-2022-05-23-10_30.png)\n\nRefreshed the page landed me back at the purchase workflow\n\n![screenshot-2022-05-23-10_31](/uploads/7c66b37a566044ccc83d97a40ed32e59/screenshot-2022-05-23-10_31.png)\n\n## Workarounds\n\n* Have the customer re-link their account, possibly every few hours?\n* Note for console users needing to workaround it: pass `is_admin=true` to [BaseTrialService](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/cc75943924e1874a37640dca3929d2ca023d29c5/app/services/gitlab/base_trial_service.rb#L11)\n\nExample:  https://gitlab.zendesk.com/agent/tickets/303004\n\u003c!---\nPlease add both severity and priority level according to: https://docs.gitlab.com/ee/development/contributing/issue_workflow.html#severity-labels\n---\u003e","state":"closed","created_at":"2022-05-23T14:33:45.721Z","updated_at":"2023-04-04T11:18:27.909Z","closed_at":"2022-08-02T06:30:26.657Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["Support Efficiency","Support Priority","[deprecated] Category:Fulfillment Platform","backend","customer","devops::fulfillment","group::fulfillment platform","priority::2","section::fulfillment","severity::2","type::bug","workflow::in dev"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":4447183,"username":"kevenhughes","name":"Keven Hughes","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4447183/avatar.png","web_url":"https://gitlab.com/kevenhughes"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":33,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4345","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4345","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4345/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4345/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4345","relative":"#4345","full":"gitlab-org/customers-gitlab-com#4345"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108813978,"iid":4331,"project_id":2670515,"title":"[BE] Emoji in Customer name causes errors interacting with Zuora","description":"### Problem\n\nCustomers are able to set emoji in their names in CustomersDot accounts. When we try to make a subscription purchase, we take the `bill_to_contact` details from the Customer record in the CustomersDot app. This results [in the following error from Zuora:](https://sentry.gitlab.net/gitlab/customersgitlabcom/issues/3267234/events/76539035/)\n\n```ruby\nBody: [{\"Success\"=\u003efalse, \"Errors\"=\u003e[{\"Code\"=\u003e\"UNKNOWN_ERROR\", \"Message\"=\u003e\"Operation failed due to an unknown error.\"}]}]\n```\n\n\u003cimg src=\"/uploads/97e77d6dcc65d008dc0e8d5144c528c4/CleanShot_2022-05-09_at_15.05.09.png\" width='500px' /\u003e\n\n### Steps to reproduce\n\n1. Create a new account on Gitlab\n3. Navigate to CustomersDot and select `sign in with Gitlab`\n4. Fill out the details to register for a customers dot account, and add an emoji to the first name\n5. Create a group on GitLab and navigate to billing\n6. Select a plan, fill out the details and submit the purchase\n7. There is an `UNKNOWN_ERROR` message\n\n\u003cimg src=\"/uploads/5901d4353e4af31417b9a499a1a3d103/CleanShot_2022-05-09_at_14.54.59.png\" width='500px' /\u003e\n\n#### Workaround\n\nOnce the emoji is removed from the name on the customers dot account, the purchase completes successfully.\n\n### Proposal\n\n1. Don't allow customers to create or edit their account to have emoji in their: `first_name, last_name, company`","state":"closed","created_at":"2022-05-19T14:16:02.959Z","updated_at":"2022-06-13T06:43:48.762Z","closed_at":"2022-06-03T13:22:53.323Z","closed_by":{"id":11257463,"username":"bhrai","name":"Bishwa Hang Rai","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11257463/avatar.png","web_url":"https://gitlab.com/bhrai"},"labels":["Category:Purchase","backend","devops::fulfillment","group::purchase","priority::2","section::fulfillment","severity::3","type::maintenance","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":11257463,"username":"bhrai","name":"Bishwa Hang Rai","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11257463/avatar.png","web_url":"https://gitlab.com/bhrai"}],"author":{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"},"type":"ISSUE","assignee":{"id":11257463,"username":"bhrai","name":"Bishwa Hang Rai","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11257463/avatar.png","web_url":"https://gitlab.com/bhrai"},"user_notes_count":7,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4331","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4331","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4331/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4331/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4331","relative":"#4331","full":"gitlab-org/customers-gitlab-com#4331"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108774546,"iid":4327,"project_id":2670515,"title":"Order actions: update a product in a subscription (amendment)","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nSimilar to [other amendment actions](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4323#problem), we need a service to that creates an `orderActions` object when a [product in a subscription is updated](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AC_Orders_Tutorials/C_Update_a_Product_in_a_Subscription?_gl=1%2A1udimk6%2A_ga%2AMzk3MTU1OTE4LjE2NDgwNjkzODE.%2A_ga_MY8CQ650DH%2AMTY1MjkxMjQ0OC41Ny4xLjE2NTI5MTM3NTAuMA..\u0026_ga=2.124943242.1673435247.1652906974-397155918.1648069381).\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nn the module `app/services/order_actions`, create a service class `UpdateProduct`.\n\nThe service implements the following:\n\n* inherits `OrderActions::BaseService`\n* defines `#execute` method that accepts `params`\n\nThe `#execute` method constructs `orderAction` object to add a product to a subscription, with the below parameters:\n| Parameter | Type | Description |\n|-----------|------|-------------|\n| `type` | String | Constant value: `UpdateProduct ` |\n| `triggerDates` | Array of Objects | Each object has the keys: `name` and `triggerDate`. Defines `ContractEffective`, `ServiceActivation` and `CustomerAcceptance` dates |\n|`updateProduct `|Object|Defines `ratePlanId ` and `chargeOverrides` (see example payload below)|\n\n\u003cdetails\u003e\n\u003csummary\u003e Example request \u003c/summary\u003e\n\n```\n{\n  \"type\": \"UpdateProduct\",\n  \"triggerDates\": [\n    {\n      \"name\": \"ContractEffective\",\n      \"triggerDate\": $Today\n    },\n    {\n      \"name\": \"ServiceActivation\",\n      \"triggerDate\": $Today\n    },\n    {\n      \"name\": \"CustomerAcceptance\",\n      \"triggerDate\": $Today\n    }\n  ],\n  \"updateProduct\": {\n    \"ratePlanId\": $RPId,\n    \"chargeUpdates\": [\n      {\n        \"chargeNumber\": $ChargeNum,\n        \"pricing\": {\n          \"recurringVolume\": {\n            \"quantity\": 50\n          }\n        }\n      }\n    ]\n  }\n}\n\n```\n\n\u003c/details\u003e\n\n### Result\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-18T22:49:29.348Z","updated_at":"2022-10-20T10:02:29.132Z","closed_at":"2022-08-22T07:04:26.371Z","closed_by":{"id":11217480,"username":"tvellishetty","name":"Tarun Vellishetty","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11217480/avatar.png","web_url":"https://gitlab.com/tvellishetty"},"labels":["[deprecated] Category:Fulfillment Platform","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::in review"],"milestone":{"id":2453026,"iid":76,"group_id":9970,"title":"15.4","description":"[GitLab 15.4 Release](https://gitlab.com/gitlab-org/gitlab/-/releases/v15.4.0-ee)","state":"active","created_at":"2022-02-03T22:29:22.015Z","updated_at":"2022-09-29T02:21:26.561Z","due_date":"2022-09-17","start_date":"2022-08-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/76"},"assignees":[{"id":11217480,"username":"tvellishetty","name":"Tarun Vellishetty","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11217480/avatar.png","web_url":"https://gitlab.com/tvellishetty"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":11217480,"username":"tvellishetty","name":"Tarun Vellishetty","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11217480/avatar.png","web_url":"https://gitlab.com/tvellishetty"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4327","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4327","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4327/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4327/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4327","relative":"#4327","full":"gitlab-org/customers-gitlab-com#4327"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9046,"epic":{"id":629648,"iid":9046,"title":"Transition Subscription Update workflow to use Orders API","url":"/groups/gitlab-org/-/epics/9046","group_id":9970,"human_readable_end_date":"Dec 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108774317,"iid":4326,"project_id":2670515,"title":"Order actions: renew subscription (amendment)","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nCDot portal currently supports ability to renew a subscription using the [amendment api](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/68a37d0799e631fd9430ad07cebd620fdd97a271/app/services/amend_subscription_service.rb#L156).\n\nIn the Orders API renewing a subscription can be done with `orderAction` of type `RenewSubscription`.\n\nSimilar to [other amendment actions](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4323#problem), we need a service to that creates an `orderActions` object when a [subscription is being renewed](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AC_Orders_Tutorials/C_Renew_a_Subscription?_ga=2.158945338.1673435247.1652906974-397155918.1648069381\u0026_gl=1%2A1yg5lba%2A_ga%2AMzk3MTU1OTE4LjE2NDgwNjkzODE.%2A_ga_MY8CQ650DH%2AMTY1MjkwNjk3Mi41Ni4xLjE2NTI5MDgyMDUuMA..).\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nOrder related services can be summarized in the following way:\n\n![Orders_architecture](/uploads/1283f86682dff3e6aa5aff82959502de/Orders_architecture.jpg)\n\nThe renewal order action can be supported with the below steps:\n\n- [ ] Create a `RenewSubscription` order action service in `app/services/zuora/orders/actions`. The service inherits `Zuora::Orders::Actions::BaseService`\n- [ ] Implement `#execute` method. The `#execute` method returns the hash required by `RenewSubscription` orderAction (`type` and `triggerDates`)\n- [ ] Since `CreateSubscription` service also implements `triggerDates` (see [source](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/68a37d0799e631fd9430ad07cebd620fdd97a271/app/services/zuora/orders/actions/create_subscription.rb#L42)), we can create an entity for `TriggerDates` in `app/services/zuora/orders/entities`. Use this entity in `RenewSubscription` and refactor `CreateSubscription` to use it. Example of an entity: [`NewAccount`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/services/zuora/orders/entities/new_account.rb).\n\n\n### References\n\n`RenewSubscription` orderAction attributes:\n\n| Parameter | Type | Description |\n|-----------|------|-------------|\n| `type` | String | Constant value: `RenewSubscription` |\n| `triggerDates` | Array of Objects | Each object has the keys: `name` and `triggerDate`. Defines `ContractEffective`, `ServiceActivation` and `CustomerAcceptance` dates \u003cbr/\u003e`ContractEffective`: $Subscription.term_end_date \u003cbr/\u003e`ServiceActivation`: current_date \u003cbr/\u003e`CustomerAcceptance`: Not present in existing payload. We can probably use current date.   \u003cbr/\u003eRefer example below for object construction. |\n\n\u003cdetails\u003e\n\u003csummary\u003e Example return object \u003c/summary\u003e\n\n```\n{\n  \"type\": \"RenewSubscription\",\n  \"triggerDates\": [\n    {\n      \"name\": \"ContractEffective\",\n      \"triggerDate\": \"$Subscription.term_end_date\"\n    },\n    {\n      \"name\": \"ServiceActivation\",\n      \"triggerDate\": \"$Today\"\n    },\n    {\n       \"name\": \"CustomerAcceptance\",\n       \"triggerDate\": \"$Today\"\n    }\n  ]\n}\n```\n\n\u003c/details\u003e\n\n### Result\n\nThe service constructs the `orderActions` object to renews a subscription.\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-18T22:37:24.130Z","updated_at":"2022-10-20T09:54:29.833Z","closed_at":"2022-08-09T11:06:53.019Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::start"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4326","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4326","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4326/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4326/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4326","relative":"#4326","full":"gitlab-org/customers-gitlab-com#4326"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9046,"epic":{"id":629648,"iid":9046,"title":"Transition Subscription Update workflow to use Orders API","url":"/groups/gitlab-org/-/epics/9046","group_id":9970,"human_readable_end_date":"Dec 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108774061,"iid":4325,"project_id":2670515,"title":"Order actions: service to remove a product from a subscription (amendment)","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nSimilar to [other amendment actions](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4323#problem), we need a service to that creates an `orderActions` object when a [product is being removed from a subscription](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AC_Orders_Tutorials/D_Remove_a_Product_from_a_Subscription?_ga=2.132862094.1673435247.1652906974-397155918.1648069381\u0026_gl=1%2Azr4393%2A_ga%2AMzk3MTU1OTE4LjE2NDgwNjkzODE.%2A_ga_MY8CQ650DH%2AMTY1MjkxMjQ0OC41Ny4wLjE2NTI5MTI0NDguMA..).\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nIn the module `app/services/order_actions`, create a service class `RemovedProduct`.\n\nThe service implements the following:\n\n* inherits `OrderActions::BaseService`\n* defines `#execute` method that accepts `params`\n\nThe `#execute` method constructs `orderAction` object to add a product to a subscription, with the below parameters:\n\n| Parameter | Type | Description |\n|-----------|------|-------------|\n| `type` | String | Constant value: `RemoveProduct ` |\n| `triggerDates` | Array of Objects | Each object has the keys: `name` and `triggerDate`. Defines `ContractEffective`, `ServiceActivation` and `CustomerAcceptance` dates |\n| `removeProduct ` | Object | Defines `ratePlanId`, the rate plan ID of the product being removed |\n\n\u003cdetails\u003e\n\n\u003csummary\u003e Example return object \u003c/summary\u003e\n{\n  \"orderDate\": \"$Today\",\n  \"existingAccountNumber\": \"$AccountNum\",\n  \"subscriptions\": [\n    {\n      \"subscriptionNumber\": \"$SubscriptionNum\",\n      \"orderActions\": [\n        {\n          \"type\": \"RemoveProduct\",\n          \"triggerDates\": [\n            {\n              \"name\": \"ContractEffective\",\n              \"triggerDate\": \"$Today\"\n            },\n            {\n              \"name\": \"ServiceActivation\",\n              \"triggerDate\": \"$Today\"\n            },\n            {\n              \"name\": \"CustomerAcceptance\",\n              \"triggerDate\": \"$Today\"\n            }\n          ],\n          \"removeProduct\": {\n            \"ratePlanId\": \"$RPId\"\n          }\n        }\n      ]\n    }\n  ],\n  \"processingOptions\": {\n    \"runBilling\": false,\n    \"collectPayment\": false\n  }\n}\n\u003c/details\u003e\n\n### Result\n\nThe service constructs the `orderActions` object to remove a product from a subscription.\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-18T22:22:36.431Z","updated_at":"2022-10-20T09:56:02.879Z","closed_at":"2022-08-16T22:26:29.354Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4325","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4325","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4325/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4325/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4325","relative":"#4325","full":"gitlab-org/customers-gitlab-com#4325"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9045,"epic":{"id":629636,"iid":9045,"title":"Transition Subscription Upgrade workflow to use Orders API","url":"/groups/gitlab-org/-/epics/9045","group_id":9970,"human_readable_end_date":"Jan 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108773221,"iid":4323,"project_id":2670515,"title":"Order actions: service to add a product to a subscription (amendment)","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nCDot uses the Zuora's amend subscription API for at least the following use cases:\n\n  - [remove a product](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c5b1db13d4af8db292118c2227c696c1ee8f61c2/app/services/amendment_base_service.rb#L39) ([downgrade main product](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/services/amend_subscription_service.rb#L30))\n  - [add a new product](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c5b1db13d4af8db292118c2227c696c1ee8f61c2/app/services/amendment_base_service.rb#L45) ([upgrade main product](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/services/amend_subscription_service.rb#L30))\n  - [renew subscription](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c5b1db13d4af8db292118c2227c696c1ee8f61c2/app/services/amend_subscription_service.rb#L139)\n  - [apply true ups](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c5b1db13d4af8db292118c2227c696c1ee8f61c2/app/services/amend_subscription_service.rb#L32) (add a new product)\n  - [update product](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c5b1db13d4af8db292118c2227c696c1ee8f61c2/app/services/amend_subscription_service.rb#L33)\n\nAlthough they are all amendment actions, in the Orders API each of it are **different** Order actions and their payload varies.\n\nIn this issue, we will focus on creating a service to [Add a Product to a subscription](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AC_Orders_Tutorials/A_Add_a_Product_to_a_Subscription?_ga=2.166350910.1673435247.1652906974-397155918.1648069381\u0026_gl=1%2A5yur29%2A_ga%2AMzk3MTU1OTE4LjE2NDgwNjkzODE.%2A_ga_MY8CQ650DH%2AMTY1MjkwNjk3Mi41Ni4xLjE2NTI5MDgyMjMuMA..).\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nIn the module `app/services/zuora/orders/actions`, create a service class `AddProduct`.\n\nThe service implements the following:\n  * inherits `Zuora::Orders::Actions::BaseService`\n  * defines `.execute` method that accepts `params` and instantiates an object of the class and invoked `#execute`\n  * defines `#execute` method\n\nThe `#execute` method constructs `orderAction` object to add a product to a subscription, with the below parameters:\n\n|Parameter|Type|Description|\n|---|---|---|\n|`type`|String|Constant value: `AddProduct`|\n|`triggerDates`|Array of Objects| Each object has the keys: `name` and `triggerDate`. \u003c/br\u003e Defines `ContractEffective`, `ServiceActivation` and `CustomerAcceptance` dates|\n|`addProduct`|Object|Defines `productRatePlanId` and `chargeOverrides` (see example payload below)|\n\nThe params are set in accordance to the current logic for adding a new product in `AmendSubscriptionService`\n\n\u003cdetails\u003e\n\u003csummary\u003e Example return object: \u003c/summary\u003e\n\n```json\n{\n  \"orderDate\": $Today,\n  \"existingAccountNumber\": $AccountNum,\n  \"subscriptions\": [\n    {\n      \"subscriptionNumber\": $SubscriptionNum,\n      \"orderActions\": [\n        {\n          \"type\": \"AddProduct\",\n          \"triggerDates\": [\n            {\n              \"name\": \"ContractEffective\",\n              \"triggerDate\": $Today\n            },\n            {\n              \"name\": \"ServiceActivation\",\n              \"triggerDate\": $Today\n            },\n            {\n              \"name\": \"CustomerAcceptance\",\n              \"triggerDate\": $Today\n            }\n          ],\n          \"addProduct\": {\n            \"productRatePlanId\": $ProductRPId,\n            \"chargeOverrides\": [\n              {\n                \"productRatePlanChargeId\": $ProductRPChargeId,\n                \"pricing\": {\n                  \"recurringFlatFee\": {\n                    \"listPrice\": 10\n                  }\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"processingOptions\": {\n    \"runBilling\": false,\n    \"collectPayment\": false\n  }\n}\n```\n\n\u003c/details\u003e\n\n\n### Result\n\nThe service constructs the `orderActions` object to add a new product to a subscription.\n\n### Next steps (if any)\n\nThe service is used in `OrderManagerService` to add a new product to a subscription.\n\n### How will we measure success?","state":"closed","created_at":"2022-05-18T21:38:03.463Z","updated_at":"2022-10-20T09:56:10.372Z","closed_at":"2022-08-31T19:24:47.604Z","closed_by":{"id":5667561,"username":"vshumilo","name":"Vladlena Shumilo","state":"active","avatar_url":"https://secure.gravatar.com/avatar/08dfa82785d130c151ab9e21caeab4e3?s=80\u0026d=identicon","web_url":"https://gitlab.com/vshumilo"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","feature::addition","group::fulfillment platform","section::fulfillment","type::feature","workflow::in review"],"milestone":{"id":2453026,"iid":76,"group_id":9970,"title":"15.4","description":"[GitLab 15.4 Release](https://gitlab.com/gitlab-org/gitlab/-/releases/v15.4.0-ee)","state":"active","created_at":"2022-02-03T22:29:22.015Z","updated_at":"2022-09-29T02:21:26.561Z","due_date":"2022-09-17","start_date":"2022-08-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/76"},"assignees":[{"id":5667561,"username":"vshumilo","name":"Vladlena Shumilo","state":"active","avatar_url":"https://secure.gravatar.com/avatar/08dfa82785d130c151ab9e21caeab4e3?s=80\u0026d=identicon","web_url":"https://gitlab.com/vshumilo"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":5667561,"username":"vshumilo","name":"Vladlena Shumilo","state":"active","avatar_url":"https://secure.gravatar.com/avatar/08dfa82785d130c151ab9e21caeab4e3?s=80\u0026d=identicon","web_url":"https://gitlab.com/vshumilo"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4323","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4323","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4323/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4323/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4323","relative":"#4323","full":"gitlab-org/customers-gitlab-com#4323"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9045,"epic":{"id":629636,"iid":9045,"title":"Transition Subscription Upgrade workflow to use Orders API","url":"/groups/gitlab-org/-/epics/9045","group_id":9970,"human_readable_end_date":"Jan 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108735850,"iid":4320,"project_id":2670515,"title":"Allow validating older licenses in Admin","description":"### Problem\n\nDuring a recent incident, a [license](https://customers.gitlab.com/admin/license/20343) that was created in 2017 was validated in `/admin/license/validate_license`. The validations for a license have changed over time and now require fields like expires at, zuora subscription id or zuora subscription name to be present. \n\nSince this wasn't the case when the mentioned license was created, the license can not be decrypted in `/admin/license/validate_license`.\n\n### Proposal\n\nAllow using `/admin/license/validate_license` with older licenses that aren't decrytable as of today because of validation changes. At the moment there are two display, a green alert for a successful validation and a red one for any issues with validating the license. Add a yellow alert for licenses that aren't considered valid anymore to differentiate between an actual valid license and a license that was once considered valid.\n\n### Result\n\nAbility to validate older license in `/admin/license/validate_license`.","state":"closed","created_at":"2022-05-18T10:19:08.979Z","updated_at":"2022-09-14T17:47:28.953Z","closed_at":"2022-05-24T09:25:41.649Z","closed_by":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"labels":["Support Efficiency","[deprecated] Category:Provision","backend","devops::fulfillment","feature::enhancement","group::provision","priority::3","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"}],"author":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"type":"ISSUE","assignee":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"user_notes_count":6,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4320","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4320","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4320/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4320/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4320","relative":"#4320","full":"gitlab-org/customers-gitlab-com#4320"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108703553,"iid":4319,"project_id":2670515,"title":"Use order manager service in subscription controller","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nOnce we have the elements to create an order, the next step is we use it to create a new subscription. This change should be feature flagged.\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nWhen feature flag is turned on, use  [`OrderManagerService`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4314) when creating a new subscription via the [`SubscriptionsController`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/66c2b5da4aa5a9d338c3bd2bbe1cee96933772b9/app/controllers/subscriptions_controller.rb#L80) workflow.\n\nMarketplace changes to be handled as part of https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4526\n\n:warning: Ensure the Subscription via Orders API workflow is enabled only when:\n\n- Feature flag is enabled\n- Not a marketplace request\n- Not a preview\n\n### Result\n\nOrders API is used to create subscription.\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-17T20:28:36.654Z","updated_at":"2022-08-31T17:45:55.939Z","closed_at":"2022-07-19T23:03:04.349Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4319","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4319","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4319/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4319/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4319","relative":"#4319","full":"gitlab-org/customers-gitlab-com#4319"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8664,"epic":{"id":594034,"iid":8664,"title":"Transition Subscribe() to the Zuora Orders API for new subscriptions","url":"/groups/gitlab-org/-/epics/8664","group_id":9970,"human_readable_end_date":"Feb 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108700526,"iid":4318,"project_id":2670515,"title":"Create job for Zuora Order client","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nIn CDot, Zuora actions are usually invoked as a [background job](https://gitlab.com/gitlab-org/customers-gitlab-com/-/tree/main/app/jobs/zuora/actions), as these actions make API calls to Zuora.\n\nOnce we have [Zuora::Order action](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4286) created, we can similarly add a background job that invokes the order action. \n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nCreate `Zuora::Actions::Order` job in `app/jobs/zuora/actions`. \n\nThe `#perform` method has supports the following:\n\n  - it accepts `params` argument. The argument supports keys that `IronBank::Actions::Order` accepts: `orderDate`, `existingAccountNumber`, `subscriptions` and `processingOptions`.\n  - It invokes IronBank Order action `IronBank::Actions::Order.call(params)`\n  - returns the result returned by IronBank Order action\n  - handles appropriate exceptions\n\n### Result\n\nThe `Zuora::Actions::Order` job is used to create orders in Zuora.\n\n### Next steps (if any)\n\n\n\n### How will we measure success?","state":"closed","created_at":"2022-05-17T19:02:55.175Z","updated_at":"2022-08-31T17:45:36.291Z","closed_at":"2022-06-02T15:29:47.870Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","feature::addition","group::fulfillment platform","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4318","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4318","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4318/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4318/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4318","relative":"#4318","full":"gitlab-org/customers-gitlab-com#4318"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8664,"epic":{"id":594034,"iid":8664,"title":"Transition Subscribe() to the Zuora Orders API for new subscriptions","url":"/groups/gitlab-org/-/epics/8664","group_id":9970,"human_readable_end_date":"Feb 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108642385,"iid":4314,"project_id":2670515,"title":"Order Manager Service","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nThe service module `Zuora::Orders` holds service class that generates `orderAction` object for each type ([create a subscription](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4310), renewing a subscription, and so on).\n\nThe purpose of Order Manager Service is to construct the payload for [Create Orders API](https://www.zuora.com/developer/api-reference/?_ga=2.234436310.991883880.1652218606-397155918.1648069381\u0026_gl=1*9e5pc3*_ga*Mzk3MTU1OTE4LjE2NDgwNjkzODE.*_ga_MY8CQ650DH*MTY1MjI5OTkwOS41MC4xLjE2NTIzMDAyNzYuMA..#operation/POST_Order).\n\nFor the `orderActions` object, it can invoke the individual order action services.\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nCreate `OrderManagerService` service under `Zuora::Orders` module in `app/services`.\n\nDefine `#execute` method constructs the payload object with params to create a new subscription (in the scope of this issue):\n\n| Parameter | Type | Description |\n|-----------|------|-------------|\n| `orderDate` | String | Current date |\n| `existingAccountNumber` | String | Account number |\n| `subscriptions` | Array of objects | In the scope of this issue, invoke the [service to create a subscription](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4310). It will return an `orderActions` object |\n| `processingOptions` | Object | Define `run_billing`, `collect_payment`. Refer example below. |\n\n\u003cdetails\u003e\n\u003csummary\u003e Example return object (click to expand) \u003c/summary\u003e\n\n```json\n          {\n            order_date: \"2022-05-23\",\n            existing_account_number: \"A00477295\",\n            subscriptions: [\n              {\n                \"order_actions\": [\n                  {\n                    \"type\": \"CreateSubscription\",\n                    \"trigger_dates\": [\n                      {\n                        \"name\": \"ContractEffective\",\n                        \"trigger_date\": \"2022-05-23\"\n                      },\n                      {\n                        \"name\": \"ServiceActivation\",\n                        \"trigger_date\": \"2022-05-23\"\n                      },\n                      {\n                        \"name\": \"CustomerAcceptance\",\n                        \"trigger_date\": \"2022-05-23\"\n                      }\n                    ],\n                    \"create_subscription\": {\n                      \"terms\": {\n                        \"initial_term\": {\n                          \"start_date\": \"2022-05-23\",\n                          \"period\": 12,\n                          \"period_type\": \"Month\",\n                          \"term_type\": \"TERMED\"\n                        },\n                        \"renewal_setting\": \"RENEW_WITH_SPECIFIC_TERM\",\n                        \"renewal_terms\": [\n                          {\n                            \"period\": 12,\n                            \"period_type\": \"Month\"\n                          }\n                        ]\n                      },\n                      \"subscribe_to_rate_plans\": [\n                        {\n                          \"product_rate_plan_id\": \"2c92c0f97700a4f70177060963d923c8\"\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }\n            ],\n            processing_options: {\n              \"run_billing\": false,\n              \"collect_payment\": false\n            }\n          }\n```\n\n\u003c/details\u003e\n\n### Result\n\nThe service creates the entire payload required to create a subscription using Orders API.\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-16T21:40:06.745Z","updated_at":"2022-08-31T17:45:15.863Z","closed_at":"2022-06-28T03:04:34.566Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453024,"iid":74,"group_id":9970,"title":"15.2","description":"","state":"active","created_at":"2022-02-03T22:24:46.818Z","updated_at":"2022-02-03T22:26:32.010Z","due_date":"2022-07-17","start_date":"2022-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/74"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4314","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4314","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4314/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4314/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4314","relative":"#4314","full":"gitlab-org/customers-gitlab-com#4314"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8664,"epic":{"id":594034,"iid":8664,"title":"Transition Subscribe() to the Zuora Orders API for new subscriptions","url":"/groups/gitlab-org/-/epics/8664","group_id":9970,"human_readable_end_date":"Feb 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108639963,"iid":4311,"project_id":2670515,"title":"Orders: Base service","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nThe [Create Order's API](https://www.zuora.com/developer/api-reference/?_ga=2.234436310.991883880.1652218606-397155918.1648069381\u0026_gl=1*9e5pc3*_ga*Mzk3MTU1OTE4LjE2NDgwNjkzODE.*_ga_MY8CQ650DH*MTY1MjI5OTkwOS41MC4xLjE2NTIzMDAyNzYuMA..#operation/POST_Order) supports multiple **Order operations** such as Creating a Subscription, Adding a product to a subscription, renewing a subscription and so on.\n\nEach operation can be a separate service under module `Zuora::Orders`. The purpose of the base class is to contain shared logic of the operations. \n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nCreate a module `Zuora::Orders` in `app/services`. The module will be used to hold all Order operations.\n\nDefine `BaseService` in the `Zuora::Orders` module. `Zuora::Orders::BaseService` service inherits [`BaseService`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/services/base_service.rb).\n\n`Zuora::Orders::BaseService` will not have any implementation code at this time however we can add logic as and when we introduce other order operations (e.g. https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4310).","state":"closed","created_at":"2022-05-16T20:19:47.492Z","updated_at":"2022-05-25T20:04:16.627Z","closed_at":"2022-05-25T20:04:16.611Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::ready for development"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":null,"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4311","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4311","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4311/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4311/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4311","relative":"#4311","full":"gitlab-org/customers-gitlab-com#4311"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108637489,"iid":4310,"project_id":2670515,"title":"Order action: service to create a subscription","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nThe [Create Order's API](https://www.zuora.com/developer/api-reference/?_ga=2.234436310.991883880.1652218606-397155918.1648069381\u0026_gl=1*9e5pc3*_ga*Mzk3MTU1OTE4LjE2NDgwNjkzODE.*_ga_MY8CQ650DH*MTY1MjI5OTkwOS41MC4xLjE2NTIzMDAyNzYuMA..#operation/POST_Order) supports multiple **Order actions** such as [Creating a Subscription](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AC_Orders_Tutorials/AA_Create_a_Subscription?_gl=1%2A17by380%2A_ga%2AMzk3MTU1OTE4LjE2NDgwNjkzODE.%2A_ga_MY8CQ650DH%2AMTY1MjkxMjQ0OC41Ny4xLjE2NTI5MTMyMDcuMA..\u0026_ga=2.174692130.1673435247.1652906974-397155918.1648069381), Adding a product to a subscription, renewing a subscription and so on. For the sake of this issue, we will focus on the order action to `Create a subscription`.\n\nThe Create Order's API has a `subscriptions` array that is responsible for determining all the actions that need to be performed in the Order.\n\nThe `subscriptions` array is a collection of `orderActions` objects. An `orderActions` object is an array of actions.\n\nWe need a dedicated service for each type of action that will be responsible for constructing an `orderActions` object  (e.g. a service each for `CreateSubscription`, `RenewSubscription`) .\n\nIn this issue, we create a service for `CreateSubscription` type and it is somewhat analogous to [`SubscribeService`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/f730068274d6d4a60615571539243c0c32bef935/app/services/subscribe_service.rb).\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nCreate module `Zuora::Orders` in `app/services`. This module can be used to services for all Order operations. \n\nThe purpose of each service is to process and return an `orderActions` object used in the [Create Order's API](https://www.zuora.com/developer/api-reference/?_ga=2.234436310.991883880.1652218606-397155918.1648069381\u0026_gl=1*9e5pc3*_ga*Mzk3MTU1OTE4LjE2NDgwNjkzODE.*_ga_MY8CQ650DH*MTY1MjI5OTkwOS41MC4xLjE2NTIzMDAyNzYuMA..#operation/POST_Order).\n\nCreate a service `CreateSubscription` in the `Zuora::Orders` module defined. The service implements the following:\n\n  - create and inherit `Zuora::Orders::BaseService`. This base service may not have any utility as of now, but as we create other order action services, we can refactor common code to this base class.\n  - defines `#execute` method that accepts `params`\n\nThe `#execute` method constructs `orderAction` object to create a new subscription, with the below parameters:\n\n|Parameter|Type|Description|\n|---|---|---|\n|`type`|String|Will always be `CreateSubscription`|\n|`triggerDates`|Array of objects|Each object has 2 keys: `name` and `triggerDate`. Defines the following dates: \u003cbr/\u003e [`ContractEffective`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/f730068274d6d4a60615571539243c0c32bef935/app/services/subscribe_service.rb#L162): current date \u003cbr/\u003e  [`ServiceActivation`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/f730068274d6d4a60615571539243c0c32bef935/app/services/subscribe_service.rb#L163): current date \u003cbr/\u003e `CustomerAcceptance`: Not present in existing payload. We can probably use current date. \u003cbr/\u003e Refer example below for object construction. |\n|`createSubscription`|Object|Define `terms`, `subscriptionNumber`, `subscribeToRatePlans`. Refer example below.|\n\n**Note:** Refer to [`SubscribeService`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/f730068274d6d4a60615571539243c0c32bef935/app/services/subscribe_service.rb#L163) to determine how the values are set currently.\n\n\u003cdetails\u003e\n\u003csummary\u003eExample return object\u003c/summary\u003e\n\n```json\n{\n  \"type\": \"CreateSubscription\",\n  \"triggerDates\": [\n    {\n      \"name\": \"ContractEffective\",\n      \"triggerDate\": \"$Today\"\n    },\n    {\n      \"name\": \"ServiceActivation\",\n      \"triggerDate\": \"$Today\"\n    },\n    {\n      \"name\": \"CustomerAcceptance\",\n      \"triggerDate\": \"$Today\"\n    }\n  ],\n  \"createSubscription\": {\n    \"terms\": {\n      \"initialTerm\": {\n        \"startDate\": \"$Today\",\n        \"period\": 12,\n        \"periodType\": \"Month\",\n        \"termType\": \"TERMED\"\n      },\n      \"renewalSetting\": \"RENEW_WITH_SPECIFIC_TERM\",\n      \"renewalTerms\": [\n        {\n          \"period\": 12,\n          \"periodType\": \"Month\"\n        }\n      ]\n    },\n    \"subscribeToRatePlans\": [\n      {\n        \"productRatePlanId\": \"$ProductRPId\"\n      }\n    ]\n  }\n}\n```\n\u003c/details\u003e\n\n\n### Result\n\nThe service creates the `orderActions` payload required to create a subscription using Orders API.\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-16T19:23:20.422Z","updated_at":"2022-08-31T17:45:38.134Z","closed_at":"2022-06-10T17:55:08.580Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4310","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4310","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4310/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4310/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4310","relative":"#4310","full":"gitlab-org/customers-gitlab-com#4310"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8664,"epic":{"id":594034,"iid":8664,"title":"Transition Subscribe() to the Zuora Orders API for new subscriptions","url":"/groups/gitlab-org/-/epics/8664","group_id":9970,"human_readable_end_date":"Feb 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108600336,"iid":4305,"project_id":2670515,"title":"Make sure Unleash errors do not bring the application down","description":"### Problem\n\nSee https://gitlab.com/gitlab-com/gl-infra/production/-/issues/7033#note_942314208 for full context\n\nPart of https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/703\n\n### Proposal\n\nMake sure Unleash has some sort of caching that allows us to avoid any downtime in the event the communication with GitLab.com is down.\n\nWe could also question the user of Unleash if this is given us problems and explore other options.\n\n### Result\n\nAvoid downtime in CustomersDot due to the feature flag system being down","state":"closed","created_at":"2022-05-16T09:40:12.601Z","updated_at":"2023-04-27T16:51:54.050Z","closed_at":"2023-04-27T16:51:54.030Z","closed_by":{"id":4192493,"username":"ebaque","name":"Etienne Baqué","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4192493/avatar.png","web_url":"https://gitlab.com/ebaque"},"labels":["Fulfillment::InfraDev","[deprecated] Category:Fulfillment Platform","backend","bug::availability","devops::fulfillment","group::fulfillment platform","missed:15.10","missed:15.11","priority::2","reliability","section::fulfillment","severity::3","type::bug","workflow::in review"],"milestone":{"id":2633524,"iid":80,"group_id":9970,"title":"16.0","description":"","state":"active","created_at":"2022-05-30T16:25:25.778Z","updated_at":"2022-05-30T16:25:25.778Z","due_date":"2023-05-17","start_date":"2023-04-18","expired":false,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/80"},"assignees":[{"id":4192493,"username":"ebaque","name":"Etienne Baqué","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4192493/avatar.png","web_url":"https://gitlab.com/ebaque"}],"author":{"id":273486,"username":"jameslopez","name":"James Lopez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/273486/avatar.png","web_url":"https://gitlab.com/jameslopez"},"type":"ISSUE","assignee":{"id":4192493,"username":"ebaque","name":"Etienne Baqué","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4192493/avatar.png","web_url":"https://gitlab.com/ebaque"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4305","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4305","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4305/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4305/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4305","relative":"#4305","full":"gitlab-org/customers-gitlab-com#4305"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108528662,"iid":4303,"project_id":2670515,"title":"Determine Ramp Id for a Zuora Subscription","description":"### Background\n\nIn [this thread](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968#note_913327995), we're discussing the best way to retrieve Ramp Id for a Subscription using the Zuora REST API.  We mainly need Ramp Id as a way to determine if a Subscription is ramp enabled.\n\nAs we've found out, Zuora doesn't make Ramp Id available in many of the Subscription-related API endpoints as mentioned in [the thread](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968#note_913327995).  It's missing from the following endpoints notably:\n\n\u003e * `https://rest.apisandbox.zuora.com/v1/describe/Subscription`: The [v1/describe/\\*](https://www.zuora.com/developer/api-reference/#operation/GET_Describe) endpoints are used to determine the schema for each Zuora resource. For Subscription, nothing related to ramps is included in the result.\n\u003e * `https://rest.apisandbox.zuora.com/v1/object/subscription/8ad09fc280042bf401801a2c4b1538ec`: The [v1/object/subscription/id](https://www.zuora.com/developer/api-reference/#operation/Object_GETSubscription) endpoint is used by CDot frequently to retrieve data for a particular subscription. It's a key endpoint utilized by the gem/library that CDot uses to interface with Zuora. No ramp information is returned in this API response either.\n\u003e * `https://rest.apisandbox.zuora.com/v1/action/query`: The [v1/action/query](https://www.zuora.com/developer/api-reference/#operation/Action_POSTquery) endpoint is used by CDot when filtering is required (e.g. get a list of active subscriptions for a given account id). Constructing a query that references ramp id leads to an error so it seems like Ramp data is not available here either.\n\nWe've engaged with Zuora Support to see if they could add this data to these endpoints.  Zuora's response [as noted here](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968#note_941398840) was:\n\n\u003e We are planning to add Ramp ID to this GET Subscription API and are targeting sprint 34, which will be completed by May 20, 2022 and available in production approx 2 weeks after that : https://www.zuora.com/developer/api-reference/#operation/GET_SubscriptionsByKey\n\u003e\n\u003e Note that it is not the same API that was referenced earlier by Mark (GET Subscription API (https://www.zuora.com/developer/api-reference/#operation/Object_GETSubscription). We are not planning to enhance the Object_GETSubscription API. You can use GET Subscription by Key instead.\n\n[My comment](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968#note_941422221) shown below, speaks to why this might be problematic:\n\n\u003e This is a little disappointing. It's nice that ramp id will be added to https://www.zuora.com/developer/api-reference/#operation/GET_SubscriptionsByKey but that endpoint isn't supported by IronBank (the gem used by CDot). We could write custom code to use this endpoint to get ramp id but at that point it doesn't seem that much different from using https://www.zuora.com/developer/api-reference/#operation/GET_RampsBySubscriptionKey ([mentioned above](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968#note_932690820)) which is already available for use.\n\nIn this issue, let's continue the thread [started here](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968#note_913327995) and determine the best path forward to determining if a Subscription is ramp enabled.  I'm breaking this off into its own issue as it will focus the topic and also allow us to close https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968 as this issue is [no longer relevant](https://gitlab.com/groups/gitlab-org/-/epics/7099#note_945251257).\n\n### Proposal\n\nMark Q, Jessica, and I met on 2022-05-24 and agreed on a plan for determining ramp ID for a subscription. For this issue, we will pursue a short-term solution of using the https://www.zuora.com/developer/api-reference/#operation/GET_RampsBySubscriptionKey API endpoint to get the ramp ID for a subscription.  Long-term, this solution will be replaced with using the ramp id from https://www.zuora.com/developer/api-reference/#operation/Object_GETSubscription when Zuora updates this endpoint in late June.  We will open a new issue for the long-term solution.","state":"closed","created_at":"2022-05-13T18:15:22.422Z","updated_at":"2022-06-09T19:42:11.326Z","closed_at":"2022-06-09T19:42:11.305Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":14,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4303","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4303","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4303/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4303/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4303","relative":"#4303","full":"gitlab-org/customers-gitlab-com#4303"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7099,"epic":{"id":381823,"iid":7099,"title":"Fulfillment Support for Sales-Assisted Zuora Ramps - Initial Ramps build","url":"/groups/gitlab-org/-/epics/7099","group_id":9970,"human_readable_end_date":"Nov 1, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108475574,"iid":4294,"project_id":2670515,"title":"Rename external id and source fields from Order to Subscription","description":"### Problem\n\nAs [described here](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4070#note_945175025), we need to modify the params and Zuora custom fields related to `External Order Id` and `External Order Source`.  It turns out an Order in Arrow is closer to what we know as a Subscription rather than Order.  This issue should cover updating the Marketplace API as well as the Ironbank schema files that reference these Zuora custom fields.\n\nI've already engaged with Ent Apps about adding the new custom fields so that we can begin updating the IronBank schema files.\n\n### Proposal\n\n- [x] Update the IronBank schema files for sandbox and staging. https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4769, https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4781\n   - Remove fields `ExternalOrderId__c` and `ExternalOrderSource__c`\n   - Add fields `ExternalSubscriptionId__c` and `ExternalSubscriptionSource__c`\n- [x] Update Marketplace API endpoint to reference new fields https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4782\n- [x] Once schemas are updated, notify Ent Apps in https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/628 that legacy custom fields can be removed from API Sandbox and Central Sandbox.\n   - Notified [here](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/628#note_954973121)","state":"closed","created_at":"2022-05-12T20:53:31.424Z","updated_at":"2023-02-06T19:17:39.793Z","closed_at":"2022-05-20T17:25:07.054Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4294","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":3},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4294","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4294/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4294/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4294","relative":"#4294","full":"gitlab-org/customers-gitlab-com#4294"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108454361,"iid":4292,"project_id":2670515,"title":"Remove set_super_sonics_aware_field_before_license_notification once Orders API is in use","description":"### Problem\n\nAs described in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4185, there was a race condition where license notification was delivered to customers before the super sonics aware flag could be set on `CloudActivation`.  This was addressed in https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4702 with some additional code [in `app/workers/zuora_callback_worker.rb`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4702/diffs#bdf5b9dac21f5beca61699558db5ec40ffde85ab_164_162), `set_super_sonics_aware_field_before_license_notification`.\n\nSomething similar happened in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4513 after the release on 2022-07-07 of Strict Cloud License (SCL). When renewing and the SCL flags were not set yet, a race condition led to sending out the wrong email (unified email instead of cloud activation email). This was fixed in https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/5053 with the same approach as above. To ensure this race condition isn't happening for subscriptions before the SCL release, the Super Sonics release date is used instead for the fix.\n\nHowever, once CDot transitions to fully using the Orders API, we should no longer need these extra codes because all actions will be associated with one order which yields one subscription version, whereas the Amend API leading to multiple amendments and subscription versions.  The race condition should not be an issue under Orders.\n\n### Proposal\n\nRemove the additional code introduced in introduced in https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4702 and https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/5053. In `app/workers/zuora_callback_worker.rb`, the methods [`set_super_sonics_aware_field_before_license_notification`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/workers/zuora_callback_worker.rb#L179) and [`set_super_sonics_flags_before_license_notification`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/workers/zuora_callback_worker.rb#L132) have to be removed. As well as the method [`renewed_after_super_sonics_released?`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/models/subscription.rb#L231) in the Subscription model.\n\nThis work cannot be done until CustomersDot transitions using Zuora Orders API ([epic](https://gitlab.com/groups/gitlab-org/-/epics/6438)) which is currently being planned in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4173.","state":"closed","created_at":"2022-05-12T14:51:49.712Z","updated_at":"2023-03-15T22:48:45.212Z","closed_at":"2023-03-15T22:48:43.711Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::maintenance","workflow::complete"],"milestone":{"id":2745651,"iid":85,"group_id":9970,"title":"15.10","description":"","state":"active","created_at":"2022-08-22T16:58:22.132Z","updated_at":"2022-08-22T16:58:22.132Z","due_date":"2023-03-17","start_date":"2023-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/85"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4292","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":1,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4292","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4292/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4292/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4292","relative":"#4292","full":"gitlab-org/customers-gitlab-com#4292"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9502,"epic":{"id":682911,"iid":9502,"title":"Cleanup Subscribe and Amend API workflows","url":"/groups/gitlab-org/-/epics/9502","group_id":9970,"human_readable_end_date":"Mar 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108444981,"iid":4290,"project_id":2670515,"title":"Update new logo in gitlab_login.haml","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\nNew GitLab logo was updated in CustomersDot portal in #4242. However we seemed to have missed to update the `app/views/devise/sessions/gitlab_login.haml` template. \n\n#### Steps to reproduce\n\n1. Create/find a user on GitLab that has not linked their account to customers-dot yet\n1. Navigate to `\u003cHOSTNAME\u003e/subscriptions/community_program/new?edition=saas\u0026product=oss`\n1. Observe logo on the button `Continue with your GitLab.com account` to be old logo.\n\n### Proposal\nUpdate new logo in the above mentioned template. Also check if the logo update has been missed in any other place in CustomersDot.\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\n### Result\nNew logo should be visible in `app/views/devise/sessions/gitlab_login.haml` template. \n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-12T12:31:21.417Z","updated_at":"2022-05-17T10:55:34.484Z","closed_at":"2022-05-17T10:55:20.366Z","closed_by":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"labels":["Category:Purchase","Unplanned","devops::fulfillment","feature::enhancement","frontend","group::purchase","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"}],"author":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"type":"ISSUE","assignee":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4290","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4290","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4290/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4290/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4290","relative":"#4290","full":"gitlab-org/customers-gitlab-com#4290"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108399802,"iid":4286,"project_id":2670515,"title":"Create IronBank Order API client","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nAs part of the plan to [upgrade to Orders API](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4173), we need a way for CDot to be able to create orders on Zuora.\nThe [recommended](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization/Orders_Migration_Guidance#Subscribe_and_Amend_REST_API_Migration) way to create orders is to invoke Zuora's [Create Order API](https://www.zuora.com/developer/api-reference/?_ga=2.234436310.991883880.1652218606-397155918.1648069381\u0026_gl=1*9e5pc3*_ga*Mzk3MTU1OTE4LjE2NDgwNjkzODE.*_ga_MY8CQ650DH*MTY1MjI5OTkwOS41MC4xLjE2NTIzMDAyNzYuMA..#operation/POST_Order).\n\nThe IronBank gem we use to interact with Zuora does [not](https://github.com/zendesk/iron_bank/issues/80) support Order object and its related actions. Please however note [`Zuora::Order`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/lib/zuora/order.rb) IronBank resource already exist in CDot.\n\nAlthough IronBank defines actions such as [Subscribe](https://github.com/zendesk/iron_bank/blob/5a6aae4bd75f74a0906b6256d0824c2e7412d282/lib/iron_bank/actions/subscribe.rb) and [Amend](https://github.com/zendesk/iron_bank/blob/5a6aae4bd75f74a0906b6256d0824c2e7412d282/lib/iron_bank/actions/amend.rb), `actions` are soon going to be deprecated. \n\nWe should therefore avoid creating action classes. Some common behavior from [`IronBank::Actions`](https://github.com/zendesk/iron_bank/blob/5a6aae4bd75f74a0906b6256d0824c2e7412d282/lib/iron_bank/action.rb) base class can be re used.\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nCreate an client for Orders that implements `#create` method that accepts the parameters defined below, and creates an Order in Zuora.\n\n[Create Order API](https://www.zuora.com/developer/api-reference/?_ga=2.234436310.991883880.1652218606-397155918.1648069381\u0026_gl=1*9e5pc3*_ga*Mzk3MTU1OTE4LjE2NDgwNjkzODE.*_ga_MY8CQ650DH*MTY1MjI5OTkwOS41MC4xLjE2NTIzMDAyNzYuMA..#operation/POST_Order) can be used for multitude of purposes such as creating a subscription, ramp deal, adding a product to a subscription, renewing and cancelling a subscription and so on.\n\nInstead of supporting all use cases in the initial iteration, we can iterate over this and start with the bare minimum functionality to create a subscription.\n\n[Creating a subscription through the Orders API](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AC_Orders_Tutorials/AA_Create_a_Subscription?_gl=1%2A2t5uja%2A_ga%2AMzk3MTU1OTE4LjE2NDgwNjkzODE.%2A_ga_MY8CQ650DH%2AMTY1MjMwODUyNC41MS4xLjE2NTIzMDg4NDIuMA..\u0026_ga=2.200168166.991883880.1652218606-397155918.1648069381) requires **at least** the following parameters:\n\n| Name | Type | Description |\n|---|---|---|\n|`orderDate` (**Required**) | string \u003cdate\u003e | The date when the order is signed. |\n|`existingAccountNumber`| string | `accountNumber` |\n|`subscriptions`| Array of object | Each item includes a set of order actions, which will be applied to the same base subscription |\n|`processingOptions`| object (processingOptionsOrders) | Invoice or Payment |\n\n\n\u003cdetails\u003e\n\u003csummary\u003eExample request \u003c/summary\u003e\n\n```json\n{\n  \"orderDate\": \"$Today\",\n  \"existingAccountNumber\": \"$AccountNum\",\n  \"subscriptions\": [\n    {\n      \"orderActions\": [\n        {\n          \"type\": \"CreateSubscription\",\n          \"triggerDates\": [\n            {\n              \"name\": \"ContractEffective\",\n              \"triggerDate\": \"$Today\"\n            },\n            {\n              \"name\": \"ServiceActivation\",\n              \"triggerDate\": \"$Today\"\n            },\n            {\n              \"name\": \"CustomerAcceptance\",\n              \"triggerDate\": \"$Today\"\n            }\n          ],\n          \"createSubscription\": {\n            \"terms\": {\n              \"initialTerm\": {\n                \"startDate\": \"$Today\",\n                \"period\": 12,\n                \"periodType\": \"Month\",\n                \"termType\": \"TERMED\"\n              },\n              \"renewalSetting\": \"RENEW_WITH_SPECIFIC_TERM\",\n              \"renewalTerms\": [\n                {\n                  \"period\": 12,\n                  \"periodType\": \"Month\"\n                }\n              ]\n            },\n            \"subscribeToRatePlans\": [\n              {\n                \"productRatePlanId\": \"$ProductRPId\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"processingOptions\": {\n    \"runBilling\": false,\n    \"collectPayment\": false\n  }\n}\n\n```\n\u003c/details\u003e\n\n### Technical Implementation\n\n1. Create `client` module in `lib/zuora`\n\n2. Implement Orders class in the `client` module. Create and inherit `IronBank::Client::Base` base class (incorporate common features from [`IronBank::Actions`](https://github.com/zendesk/iron_bank/blob/5a6aae4bd75f74a0906b6256d0824c2e7412d282/lib/iron_bank/action.rb) base class.\n\n3. Define `#create` method. It should invoke the Orders API with parameters required to create a subscription: `{ orderDate: orderDate, existingAccountNumber: existingAccountNumber, subscriptions: subscriptions, processingOptions: processingOptions }`\n\n4. Define a method for each of the parameter mentioned in the above pt; e.g. `subscriptions` should return `subscriptions` object `IronBank::Object.new(args.fetch(:subscribes)).deep_camelize`. Alternatively, consider implementing dynamic methods instead of defining one for each. Ref: [subscribe action](https://github.com/zendesk/iron_bank/blob/5a6aae4bd75f74a0906b6256d0824c2e7412d282/lib/iron_bank/actions/subscribe.rb)\n\n\n### Result\n\n`IronBank::Actions::Order.create(params)` successfully creates an order on Zuora.\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-11T20:55:26.793Z","updated_at":"2022-08-31T17:45:40.409Z","closed_at":"2022-05-25T16:57:18.417Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4286","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4286","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4286/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4286/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4286","relative":"#4286","full":"gitlab-org/customers-gitlab-com#4286"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8664,"epic":{"id":594034,"iid":8664,"title":"Transition Subscribe() to the Zuora Orders API for new subscriptions","url":"/groups/gitlab-org/-/epics/8664","group_id":9970,"human_readable_end_date":"Feb 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108335586,"iid":4284,"project_id":2670515,"title":"Configure bundle on CI to disallow any changes to Gemfile.lock","description":"This is a ~\"corrective action\" of sirt-2266.\n\nThis project (https://gitlab.com/gitlab-org/customers-gitlab-com) uses `bundle` or `bundle install` in CI. Per the Rubygems.org advisory, we should use either the `frozen` or `deployment` options as defense-in-depth to mitigate supply chain attacks. Most of these projects currently do not use the `frozen` or `deployment` options.\n\n## More background\n\nSee https://github.com/rubygems/rubygems.org/security/advisories/GHSA-hccv-rwq6-vh79:\n\n\u003e Using Bundler in --frozen or --deployment mode in CI and during deploys, as the Bundler team has always recommended, will guarantee that your application does not silently switch to versions created using this exploit.\n\nNote that the `deployment` option installs gems to `vendor`, which we may not want. So `frozen` will usually be the smaller change.\n\nNote that:\n\n\u003e \\[DEPRECATED\\] The `--frozen` flag is deprecated because it relies on being remembered across bundler invocations, which bundler will no longer do in future versions. Instead please use `bundle config set --local frozen 'true'`, and stop using this flag","state":"closed","created_at":"2022-05-10T22:36:32.386Z","updated_at":"2022-06-02T04:00:14.493Z","closed_at":"2022-06-02T04:00:14.480Z","closed_by":{"id":5211906,"username":"csouthard","name":"Chase Southard","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5e2adecb9fa1d32cf007754824aa358f?s=80\u0026d=identicon","web_url":"https://gitlab.com/csouthard"},"labels":["[deprecated] Category:Fulfillment Platform","corrective action","devops::fulfillment","feature::enhancement","group::fulfillment platform","section::fulfillment","security","severity::2","type::feature","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"}],"author":{"id":3753003,"username":"cdu1","name":"Chun Du","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3753003/avatar.png","web_url":"https://gitlab.com/cdu1"},"type":"ISSUE","assignee":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"user_notes_count":10,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4284","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4284","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4284/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4284/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4284","relative":"#4284","full":"gitlab-org/customers-gitlab-com#4284"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8028,"epic":{"id":518339,"iid":8028,"title":"Use `deployment` or `frozen` options with `bundle install` in CI on all Ruby projects and Chef cookbooks that use Ruby gems","url":"/groups/gitlab-org/-/epics/8028","group_id":9970,"human_readable_end_date":"Sep 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108276295,"iid":4279,"project_id":2670515,"title":"Update renewal link from GitLab for community program subscription","description":"The renewal link on group's billing page for community program subscription needs updating to redirect to community program renewal flow.\n\n![Screen_Shot_2022-05-10_at_8.49.53_AM](/uploads/2e0090e85ebafbaac0182bc78ae71815/Screen_Shot_2022-05-10_at_8.49.53_AM.png)\n\nThe namespace renewal link (`/gitlab/namespaces/{namespace_id}/renew`) currently redirects to `/subscriptions`.\n\nThis should redirect to (`/subscriptions/community_program/{subscription_id}/renew`) instead.","state":"closed","created_at":"2022-05-10T00:17:04.156Z","updated_at":"2022-05-25T21:55:19.887Z","closed_at":"2022-05-25T21:55:19.858Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","backend","devops::fulfillment","group::purchase","missed:15.0","section::fulfillment","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4279","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4279","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4279/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4279/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4279","relative":"#4279","full":"gitlab-org/customers-gitlab-com#4279"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5711,"epic":{"id":244557,"iid":5711,"title":"[Community Programs] Renewals","url":"/groups/gitlab-org/-/epics/5711","group_id":9970,"human_readable_end_date":"Nov 4, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108276292,"iid":4278,"project_id":2670515,"title":"Mark coupon code as redeemed only for new CP subscription purchase and renewal","description":"# Bug\n\n## Summary\n\nChanging namespace for a community subscription logs an error message `The coupon code '' was used to check out but it was unable to be marked redeemed`. This should only happen for new community program subscription and its renewal since we don't need coupon code for changing namespace or addon purchase.\n\n[Sentry issue](https://sentry.gitlab.net/gitlab/customersgitlabcom/issues/3291044)\n\n## Steps to reproduce\n\n* Change the linked namespace for an existing community program subscription with more than 1 seat in use or purchase an addon\n* Check logs locally / on Slack for Staging for the above mentioned error message\n\n## What is the current *bug* behavior?\n\nAn attempt to mark an empty coupon code is made.\n\n## What is the expected *correct* behavior?\n\nWe shouldn't mark coupon as redeemed when changing namespace.\n\n## Relevant logs and/or screenshots\n\n[Sentry issue](https://sentry.gitlab.net/gitlab/customersgitlabcom/issues/3291044)\n\n## Bug fix proposal\n\nAdd `renewing?` check when calling `mark_coupon_redeemed` in [`amend_subscription_service.rb`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/eb8385b30405922a26e613e43777a3cea3ee4a1c/app/services/amend_subscription_service.rb#L40)","state":"closed","created_at":"2022-05-10T00:16:44.400Z","updated_at":"2022-05-24T12:03:23.776Z","closed_at":"2022-05-20T02:44:17.986Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","backend","devops::fulfillment","frontend","group::purchase","missed:15.0","section::fulfillment","type::bug","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4278","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4278","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4278/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4278/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4278","relative":"#4278","full":"gitlab-org/customers-gitlab-com#4278"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5711,"epic":{"id":244557,"iid":5711,"title":"[Community Programs] Renewals","url":"/groups/gitlab-org/-/epics/5711","group_id":9970,"human_readable_end_date":"Nov 4, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":108213948,"iid":4274,"project_id":2670515,"title":"Frontend validation against emoji customers info during registration","description":"### Problem\n\nCustomers are able to set emoji in their names in CustomersDot accounts. When we try to make a subscription purchase, we take the `bill_to_contact` details from the Customer record in the CustomersDot app. This results [in the following error from Zuora:](https://sentry.gitlab.net/gitlab/customersgitlabcom/issues/3267234/events/76539035/)\n\n```ruby\nBody: [{\"Success\"=\u003efalse, \"Errors\"=\u003e[{\"Code\"=\u003e\"UNKNOWN_ERROR\", \"Message\"=\u003e\"Operation failed due to an unknown error.\"}]}]\n```\n\n\u003cimg src=\"/uploads/97e77d6dcc65d008dc0e8d5144c528c4/CleanShot_2022-05-09_at_15.05.09.png\" width='500px' /\u003e\n\n### Steps to reproduce\n\n1. Create a new account on Gitlab\n3. Navigate to CustomersDot and select `sign in with Gitlab`\n4. Fill out the details to register for a customers dot account, and add an emoji to the first name\n5. Create a group on GitLab and navigate to billing\n6. Select a plan, fill out the details and submit the purchase\n7. There is an `UNKNOWN_ERROR` message\n\n\u003cimg src=\"/uploads/5901d4353e4af31417b9a499a1a3d103/CleanShot_2022-05-09_at_14.54.59.png\" width='500px' /\u003e\n\n#### Workaround\n\nOnce the emoji is removed from the name on the CustomersDot account, the purchase completes successfully.\n\n### Proposal\n\nFor the [registration form](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/3096d7e4915b7e0f8450426fa0bcd352314a8677/app/frontend/javascripts/sessions/components/register_form.vue), it should be sufficient to use the `state` and `invalid-feedback` props for form/groups (see example [here](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/3096d7e4915b7e0f8450426fa0bcd352314a8677/app/frontend/javascripts/subscription/components/coupon_code_input.vue)).\n\nThe fields to validate against the presence of emoji are:\n\n- first_name\n- last_name\n- city\n- zip_code (postal_code)\n- company\n\n| Description | MR |\n|-|-|\n| Promote `emoji-regex` to a npm `dependency` | gitlab-org/customers-gitlab-com!4845 |\n| Add validation to customer registration form (first and last name) | gitlab-org/customers-gitlab-com!4852 |\n| Validate customer registration form (company and address fields) | gitlab-org/customers-gitlab-com!4887 |","state":"closed","created_at":"2022-05-09T03:19:06.114Z","updated_at":"2022-08-11T09:52:47.139Z","closed_at":"2022-07-01T13:10:48.202Z","closed_by":{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"},"labels":["Category:Purchase","devops::fulfillment","frontend","group::purchase","missed:15.1","priority::2","section::fulfillment","severity::3","type::bug","workflow::production"],"milestone":{"id":2453024,"iid":74,"group_id":9970,"title":"15.2","description":"","state":"active","created_at":"2022-02-03T22:24:46.818Z","updated_at":"2022-02-03T22:26:32.010Z","due_date":"2022-07-17","start_date":"2022-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/74"},"assignees":[{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"}],"author":{"id":4981524,"username":"jhyson","name":"Josianne Hyson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4981524/avatar.png","web_url":"https://gitlab.com/jhyson"},"type":"ISSUE","assignee":{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"},"user_notes_count":19,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4274","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4274","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4274/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4274/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4274","relative":"#4274","full":"gitlab-org/customers-gitlab-com#4274"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108136139,"iid":4273,"project_id":2670515,"title":"Flaky test: VCR::Errors::UnhandledHTTPRequestError","description":"### Problem\n\nThis spec, [introduced here](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/2599/diffs#bcb86af9495467f36c3dd1683988ef3798f91962_56_57), started to fail a bit more often (perhaps a coincidence):\n\n```\nrspec './spec/features/upgrade_subscriptions_spec.rb[1:3:2:1:2]' # upgrading subscriptions with eoa_starter_bronze disabled when ultimate plan selected behaves like an app without EoA banners does not show the alert about free upgrade\n```\n\n#### Example failures\n\n- https://gitlab.com/gitlab-org/customers-gitlab-com/-/jobs/2409005037\n- https://gitlab.com/gitlab-org/customers-gitlab-com/-/jobs/2406620513\n- https://gitlab.com/gitlab-org/customers-gitlab-com/-/jobs/2304577351\n\n\n### Proposal\n\nPerhaps this investigation can be of some guidance in terms of resolving the flake: https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/736#note_229553100.\n\n### Result\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-05-06T09:46:33.790Z","updated_at":"2022-06-15T07:42:56.675Z","closed_at":"2022-06-15T07:42:56.656Z","closed_by":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"labels":["[deprecated] Category:Fulfillment Platform","devops::fulfillment","frontend","group::fulfillment platform","section::fulfillment","tests","workflow::production"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"}],"author":{"id":4961018,"username":"mlunoe","name":"Michael Lunøe","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4961018/avatar.png","web_url":"https://gitlab.com/mlunoe"},"type":"ISSUE","assignee":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4273","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4273","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4273/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4273/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4273","relative":"#4273","full":"gitlab-org/customers-gitlab-com#4273"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108089750,"iid":4267,"project_id":2670515,"title":"Follow-up from \"Add mailer for Offline Cloud License\"","description":"The following discussion from !4690 should be addressed:\n\n- [ ] @fneill started a [discussion](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4690#note_935166630):  (+3 comments)\n\nWe want to update all the `or later` usages in our emails to refer to the GitLab version to be `and later` to be consistent with the [style guide](https://docs.gitlab.com/ee/development/documentation/styleguide/word_list.html#later)","state":"closed","created_at":"2022-05-05T15:01:22.054Z","updated_at":"2023-03-13T17:35:41.190Z","closed_at":"2022-05-11T18:40:56.978Z","closed_by":{"id":5667561,"username":"vshumilo","name":"Vladlena Shumilo","state":"active","avatar_url":"https://secure.gravatar.com/avatar/08dfa82785d130c151ab9e21caeab4e3?s=80\u0026d=identicon","web_url":"https://gitlab.com/vshumilo"},"labels":["Offline Provisioning","[deprecated] Category:Provision","backend","devops::fulfillment","group::provision","section::fulfillment","workflow::in review"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":5667561,"username":"vshumilo","name":"Vladlena Shumilo","state":"active","avatar_url":"https://secure.gravatar.com/avatar/08dfa82785d130c151ab9e21caeab4e3?s=80\u0026d=identicon","web_url":"https://gitlab.com/vshumilo"}],"author":{"id":5667561,"username":"vshumilo","name":"Vladlena Shumilo","state":"active","avatar_url":"https://secure.gravatar.com/avatar/08dfa82785d130c151ab9e21caeab4e3?s=80\u0026d=identicon","web_url":"https://gitlab.com/vshumilo"},"type":"ISSUE","assignee":{"id":5667561,"username":"vshumilo","name":"Vladlena Shumilo","state":"active","avatar_url":"https://secure.gravatar.com/avatar/08dfa82785d130c151ab9e21caeab4e3?s=80\u0026d=identicon","web_url":"https://gitlab.com/vshumilo"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4267","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4267","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4267/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4267/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4267","relative":"#4267","full":"gitlab-org/customers-gitlab-com#4267"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":108045994,"iid":4264,"project_id":2670515,"title":"Add marketplace API to CDot openAPI doc","description":"As suggested in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4253#note_935114380.\n\n\n\u003e 1. Is there some documentation on the API endpoints for Disty that I can refer to?\n\nI'm not aware of this documentation if it exists. @qzhaogitlab Perhaps we can add it to [openAPI docs for CDot](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/doc/api/openapi.yaml) (disclaimer: it's not a complete list of endpoints right now)? There's information about how to update the docs [here](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/main/doc/api/index.md).\n\n### How will we measure success?","state":"closed","created_at":"2022-05-05T04:48:56.040Z","updated_at":"2023-02-24T16:02:17.532Z","closed_at":"2022-10-20T00:26:02.065Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["Category:Fulfillment Integrations \u0026 Visibility","SUS::Non-impacting","backend","devops::fulfillment","docs-only","group::provision","maintenance::usability","missed:15.4","missed:15.5","quad-planning::complete-no-action","section::fulfillment","type::maintenance","workflow::in review"],"milestone":{"id":2687593,"iid":81,"group_id":9970,"title":"15.6","description":"","state":"active","created_at":"2022-07-06T19:22:27.893Z","updated_at":"2022-07-06T19:22:27.893Z","due_date":"2022-11-17","start_date":"2022-10-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/81"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":11,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4264","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4264","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4264/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4264/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4264","relative":"#4264","full":"gitlab-org/customers-gitlab-com#4264"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":107899303,"iid":4254,"project_id":2670515,"title":"Roll out of zuora_hpm_no_refresh","description":"\u003c!-- Title suggestion: [Feature flag] Enable description of feature --\u003e\n\n# Summary\n\n\u003c!-- Short description of what the feature is about and link to relevant other issues. --\u003e\n\nThis issue is to rollout [Static Zuora component](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4553) on CustomersDot production,\nthat is currently behind the [`zuora_hpm_no_refresh`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/feature_flags/126/edit) feature flag.\n\n## Owners\n\n- Team: ~\"group::purchase\" \n- Most appropriate Slack channel to reach out to: [#g_purchase](https://gitlab.slack.com/archives/C01BPTAP599)\n- Best individual to reach out to: @agulina or @lmeckley \n- PM: @tgolubeva \n\n## The Rollout Plan\n\n- Partial Rollout with specific Customers on CustomersDot, [via Unleash](https://docs.gitlab.com/ee/operations/feature_flags.html#user-ids)\n- Rollout on CustomersDot for a certain period (How long)\n- Percentage Rollout on CustomersDot\n- Rollout Feature for everyone as soon as it's ready\n\n\u003c!-- Which dashboards from https://dashboards.gitlab.net are most relevant? Sentry errors reports can also be useful to review --\u003e\n\n## Expectations\n\n### What are we expecting to happen?\n\nThe payment forms in CDot should use the new Zuora component but functionally behave the same as the old implementation in the happy path. The only difference is that errors will not cause the iframe to re-render.\n\n### What might happen if this goes wrong?\n\nAll CDot payment pages could be impacted and users could be preventing from making payments, renewing, etc. The iframe could also potentially not load. \n\n### What can we monitor to detect problems with this?\n\n\u003c!-- Which dashboards from https://dashboards.gitlab.net are most relevant? --\u003e\n\n## Rollout Steps\n\n### Rollout on non-production environments\n\n- [ ] Ensure that the feature MRs have been deployed to non-production environments, i.e. `customers-staging`.\n- [ ] Consider announcing that the flag will be enabled to potentially impacted groups, e.g. `#s_fulfillment_engineering`\n- [ ] Enable the feature globally on non-production environments by applying the appropriate environment, e.g. `customers-staging` and `customers-development`.\n- [ ] Verify that the feature works as expected. Posting the QA result in this issue is preferable.\n\n### Preparation before production rollout\n\n- [ ] Ensure that the feature MRs have been deployed to production\n- [ ] Check if the feature flag change needs to be accompanied with a\n  [change management issue](https://about.gitlab.com/handbook/engineering/infrastructure/change-management/#feature-flags-and-the-change-management-process).\n  Cross link the issue here if it does.\n- [ ] Ensure that you or a representative in Fulfillment can be available for at least 2 hours after feature flag updates in production.\n  If a different developer will be covering, or an exception is needed, please inform the Fulfillment team in #s_fulfillment_engineering\n- [ ] Ensure any documentation has been updated\n- [ ] Announce on [the feature issue](ISSUE LINK) an estimated time this will be enabled on production if applicable\n- [ ] If the feature might impact the user experience, notify `#s_fulfillment` and potentially `#support_gitlab-com`, as well as your team channel ([more guidance when this is necessary in the dev docs](https://docs.gitlab.com/ee/development/feature_flags/controls.html#communicate-the-change)).\n\n### Global rollout on CustomersDot production\n\n- [ ] Confirm the feature flag is enabled on `staging` without incident\n- [ ] Roll out the feature to targeted testing users first (if applicable)\n- [ ] If applicable, [incrementally roll out](https://docs.gitlab.com/ee/operations/feature_flags.html#percent-rollout) the feature.\n- [ ] Verify the change has the desired outcome with the limited rollout before enabling the feature globally on production.\n- [ ] Enable the feature globally on production environment \n- [ ] Announce on [the feature issue](ISSUE LINK) that the feature has been globally enabled.\n- [ ] Wait for [at least one day for the verification term](https://about.gitlab.com/handbook/product-development-flow/feature-flag-lifecycle/#including-a-feature-behind-feature-flag-in-the-final-release).\n\n### Release the feature\n\nAfter the feature has been [deemed stable](https://about.gitlab.com/handbook/product-development-flow/feature-flag-lifecycle/#including-a-feature-behind-feature-flag-in-the-final-release),\nthe clean up should be done as soon as possible to permanently enable the feature and reduce complexity in the codebase.\n\n\u003c!-- The checklist here is to help stakeholders keep track of the feature flag status --\u003e\n- [ ] Create a merge request to remove `\u003cfeature-flag-name\u003e` feature flag\n  - [ ] Remove all references to the feature flag from the codebase\n- [ ] Ensure that the cleanup MR has been deployed to both staging and production\n- [ ] Disable the feature flag via the [CustomersDot dashboard](https://gitlab.com/gitlab-org/customers-gitlab-com/-/feature_flags)\n- [ ] Ensure production environment is still working as expected\n- [ ] Remove the Unleash feature flag from the [CustomersDot dashboard](https://gitlab.com/gitlab-org/customers-gitlab-com/-/feature_flags)\n- [ ] Close this rollout issue.\n\n## Rollback Steps\n\n- [ ] This feature can be disabled by performing the following actions:\n  - [ ] Disable the Unleash flag on the [feature flag page](LINK TO THE FEATURE FLAG EDIT PAGE)","state":"closed","created_at":"2022-05-03T04:29:45.241Z","updated_at":"2022-09-02T17:07:01.717Z","closed_at":"2022-08-17T17:44:28.212Z","closed_by":{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"},"labels":["Category:Purchase","devops::fulfillment","feature flag","frontend","group::purchase","section::fulfillment","type::feature","won't do","workflow::blocked"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[],"author":{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"},"type":"ISSUE","assignee":null,"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4254","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":26,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4254","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4254/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4254/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4254","relative":"#4254","full":"gitlab-org/customers-gitlab-com#4254"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7969,"epic":{"id":511971,"iid":7969,"title":"Prevent Zuora HPM payment forms from refreshing when errors are thrown","url":"/groups/gitlab-org/-/epics/7969","group_id":9970,"human_readable_end_date":"Aug 22, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":110296543,"iid":4438,"project_id":2670515,"title":"[SaaS] Add messaging about user overage process to Renewal flow","description":"## Problem to solve\n\nSaaS customers are being surprised and taken off-guard by Quarterly Subscription reconciliations. Because self-service SaaS customers have not historically been charged true-ups, the QSR process and the fact that they have to pay for overages is totally new. See tickets from customers [here](https://gitlab.com/gitlab-org/fulfillment-meta/-/issues/337).\n\n## Intended users\n\n**This issue is just for SaaS customers.**\n\n* Group Owners who are **renewing a subscription** through our self-service renewal flow\n* See exactly which use cases we're solving for in the [Epic description](https://gitlab.com/groups/gitlab-org/-/epics/7229#saas-customers).\n\n## Proposal\n\nWhen a user is **renewing** GitLab, make sure that they are aware of the overage process. Show a message to all customers using the self-service renewal flow that notifies them about the overage process.\n\n[Purchase Design here](https://gitlab.com/gitlab-org/gitlab/-/issues/347267/designs/Option_2__Alert_during_checkout_informing_user_of_QSR.png), could we reuse for renewal flow?\n\nLink for `How does billing work?`: `https://docs.gitlab.com/ee/subscriptions/quarterly_reconciliation.html` (shared [here](https://gitlab.com/gitlab-org/gitlab/-/issues/347267/designs/Option_2__Alert_during_checkout_informing_user_of_QSR.png#note_828638740))","state":"closed","created_at":"2022-05-02T19:48:54.303Z","updated_at":"2022-11-28T20:06:49.542Z","closed_at":"2022-06-27T12:02:17.505Z","closed_by":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"labels":["[deprecated] Category:Billing and Subscription Management","auto updated","devops::fulfillment","feature::enhancement","frontend","group::billing and subscription management","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453024,"iid":74,"group_id":9970,"title":"15.2","description":"","state":"active","created_at":"2022-02-03T22:24:46.818Z","updated_at":"2022-02-03T22:26:32.010Z","due_date":"2022-07-17","start_date":"2022-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/74"},"assignees":[{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"}],"author":{"id":8110789,"username":"tgolubeva","name":"Tatyana Golubeva","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/8110789/avatar.png","web_url":"https://gitlab.com/tgolubeva"},"type":"ISSUE","assignee":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"user_notes_count":18,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4438","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4438","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4438/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4438/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4438","relative":"#4438","full":"gitlab-org/customers-gitlab-com#4438"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7229,"epic":{"id":401186,"iid":7229,"title":"[QSR] [SaaS] Create transparency about User Overage process at the time of purchase or renewal","url":"/groups/gitlab-org/-/epics/7229","group_id":9970,"human_readable_end_date":"Jul 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":107885691,"iid":4247,"project_id":2670515,"title":"Remove Customer dependency from Subscription model","description":"### Problem\n\n[The `Subscription` model](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/1d243289b208023d7437ce3d0fa363f8f38454b8/app/models/subscription.rb) is a wrapper model around a `Zuora::Subscription`.  A `Customer` object is required when instantiating a `Subscription` object ([see definition](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/1d243289b208023d7437ce3d0fa363f8f38454b8/app/models/subscription.rb#L68)).  In most places as it relates the model, the `Customer` object is used as a way to reference the `zuora_account_id`.  There are some exceptions to this rule though ([example1](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/1d243289b208023d7437ce3d0fa363f8f38454b8/app/models/subscription.rb#L265), [example2](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/1d243289b208023d7437ce3d0fa363f8f38454b8/app/models/subscription.rb#L384)).\n\nWe've seen where dependence on Customer records can be problematic (https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3837, https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/2880).  We should look into removing this dependency in Subscription which will help to simplify logic in this model, and also hopefully resolve some data inconsistency problems.\n\n### Proposal\n\nRemove `Customer` as a dependency when initializing a `Subscription` object.","state":"closed","created_at":"2022-05-02T18:00:06.073Z","updated_at":"2023-03-03T07:06:42.699Z","closed_at":"2023-01-10T18:02:11.409Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::maintenance","workflow::ready for development"],"milestone":null,"assignees":[],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4247","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4247","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4247/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4247/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":"https://gitlab.com/api/v4/projects/2670515/issues/4629"},"references":{"short":"#4247","relative":"#4247","full":"gitlab-org/customers-gitlab-com#4247"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":107866722,"iid":4242,"project_id":2670515,"title":"customersDot: Use new logo in headerbar and rest of interface","description":"The new logo should be rolled out in header bar and sign-in buttons (and everywhere else in the UI)\n\nAlso update the favicon","state":"closed","created_at":"2022-05-02T11:05:15.552Z","updated_at":"2022-05-12T12:31:21.707Z","closed_at":"2022-05-11T06:00:18.879Z","closed_by":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"labels":["Category:Purchase","UX","Unplanned","devops::fulfillment","frontend","group::purchase","section::fulfillment","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"}],"author":{"id":181229,"username":"leipert","name":"Lukas 'Eipi' Eipert","state":"active","avatar_url":"https://secure.gravatar.com/avatar/19a1f1260fa70323f35bc508927921a2?s=80\u0026d=identicon","web_url":"https://gitlab.com/leipert"},"type":"ISSUE","assignee":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"user_notes_count":16,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4242","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4242","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4242/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4242/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4242","relative":"#4242","full":"gitlab-org/customers-gitlab-com#4242"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7816,"epic":{"id":486234,"iid":7816,"title":"Product - new branding rollout (not time sensitive)","url":"/groups/gitlab-org/-/epics/7816","group_id":9970,"human_readable_end_date":"Apr 27, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":107362867,"iid":4238,"project_id":2670515,"title":"Rename Subscription#previous","description":"### Problem\n\nCurrently our Subscription#previous method is overriding IronBank::Subscription#previous method.\n\n* `Subscription#previous`: find the latest older version with an earlier term start date\n* `IronBank::Subscription#previous`: find the version before current version\n\nThis semantic differences can cause confusion, and can be a source of future bugs.\n\n### Proposal\n\nWe should rename the former with a more comprehensive name.\n\n### Result\n\nNo behavior change as this is a refactoring","state":"closed","created_at":"2022-04-28T08:01:56.027Z","updated_at":"2022-08-03T13:48:09.455Z","closed_at":"2022-07-27T22:44:35.858Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Fulfillment Platform","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::maintenance","workflow::production"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":1986039,"username":"lulalala","name":"Mark Chao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1986039/avatar.png","web_url":"https://gitlab.com/lulalala"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4238","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4238","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4238/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4238/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4238","relative":"#4238","full":"gitlab-org/customers-gitlab-com#4238"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8402,"epic":{"id":568437,"iid":8402,"title":"Improve accuracy of determining subscription state using the Zuora Subscription API","url":"/groups/gitlab-org/-/epics/8402","group_id":9970,"human_readable_end_date":"Sep 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":107355608,"iid":4236,"project_id":2670515,"title":"Update text on summary for invalid seat number","description":"The following discussion from !4554 should be addressed:\n\n- [ ] @lmeckley started a [discussion](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4554#note_921532958):  (+3 comments)\n\n    \u003e **question (non-blocking, UX)**: Should we remove the text below `Price` in the `Purchase Summary` when the user has an invalid input? Otherwise we're showing a specific seat number that doesn't necessarily relate to what the user typed in.\n    \u003e \n    \u003e ![Screen_Shot_2022-04-22_at_9.48.57_AM](/uploads/5cbafa197db858e0c0a37c49ccdbeeb4/Screen_Shot_2022-04-22_at_9.48.57_AM.png)\n\n## Proposal\n\nRemove the text entirely when the seats count is an invalid number","state":"closed","created_at":"2022-04-28T05:31:19.595Z","updated_at":"2022-05-03T13:04:07.993Z","closed_at":"2022-05-03T13:04:07.970Z","closed_by":{"id":9299375,"username":"dzubova","name":"Diana Zubova","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9299375/avatar.png","web_url":"https://gitlab.com/dzubova"},"labels":["Category:Purchase","Unplanned","devops::fulfillment","frontend","group::purchase","maintenance::usability","section::fulfillment","type::maintenance","workflow::staging"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":9299375,"username":"dzubova","name":"Diana Zubova","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9299375/avatar.png","web_url":"https://gitlab.com/dzubova"}],"author":{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"},"type":"ISSUE","assignee":{"id":9299375,"username":"dzubova","name":"Diana Zubova","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9299375/avatar.png","web_url":"https://gitlab.com/dzubova"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4236","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4236","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4236/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4236/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4236","relative":"#4236","full":"gitlab-org/customers-gitlab-com#4236"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":107138870,"iid":4228,"project_id":2670515,"title":"Maintenance mode - quiet all Sidekiq queues except zuora_health_check","description":"## Problem to solve and proposal\n\nWhen in maintenance mode, Sidekiq queues are still able to receive jobs. While this is unlikely to happen (as the CustomersDot app would not enqueue new jobs because of the maintenance mode), it would be still good practice to quiet all Sidekiq queues (except the `zuora_health_check` queue) upon having the maintenance mode on, and to have them to reaccept new jobs when the maintenance mode is off.\n\nThe `zuora_health_check` queue is the only queue not to quiet as it is tightly coupled to the app maintenance mode: it checks Zuora health periodically and gets the app into (or out of) maintenance mode depending on the Zuora health state.","state":"closed","created_at":"2022-04-25T13:19:16.571Z","updated_at":"2023-05-03T18:29:12.361Z","closed_at":"2023-05-03T18:29:12.342Z","closed_by":{"id":4192493,"username":"ebaque","name":"Etienne Baqué","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4192493/avatar.png","web_url":"https://gitlab.com/ebaque"},"labels":["[deprecated] Category:Fulfillment Platform","auto updated","automation:prevent-auto-close","backend","devops::fulfillment","group::fulfillment platform","maintenance::performance","missed:15.11","missed:15.5","missed:15.9","quad-planning::complete-no-action","section::fulfillment","type::maintenance","workflow::in review"],"milestone":{"id":2633524,"iid":80,"group_id":9970,"title":"16.0","description":"","state":"active","created_at":"2022-05-30T16:25:25.778Z","updated_at":"2022-05-30T16:25:25.778Z","due_date":"2023-05-17","start_date":"2023-04-18","expired":false,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/80"},"assignees":[{"id":4192493,"username":"ebaque","name":"Etienne Baqué","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4192493/avatar.png","web_url":"https://gitlab.com/ebaque"}],"author":{"id":4192493,"username":"ebaque","name":"Etienne Baqué","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4192493/avatar.png","web_url":"https://gitlab.com/ebaque"},"type":"ISSUE","assignee":{"id":4192493,"username":"ebaque","name":"Etienne Baqué","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4192493/avatar.png","web_url":"https://gitlab.com/ebaque"},"user_notes_count":18,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4228","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4228","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4228/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4228/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4228","relative":"#4228","full":"gitlab-org/customers-gitlab-com#4228"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":107050151,"iid":4222,"project_id":2670515,"title":"Gitlab.com Admin API token rotation","description":"\nA new admin token was generated in https://gitlab.com/gitlab-com/team-member-epics/access-requests/-/issues/20979#note_1297201378\n\nWe need to:\n- [x] [Update the secret to the new value in ansible](https://gitlab.com/gitlab-org/customersdot-ansible/-/blob/master/doc/readme.md#ansible-vaults-for-customersdot-secrets) before the old token expires (April 2023). Preferably with a couple weeks buffer.\n- [x] Create a new issue with a due date some time period (1 month?) before this new token expires.\n- [x] Create a new slack reminder with a link to the issue that is triggered before the due date and perhaps triggers multiple times?\n- [x] Update docs detailing this process.\n- [x] Handoff process to ~\"group::fulfillment platform\"","state":"closed","created_at":"2022-04-22T21:12:22.194Z","updated_at":"2023-04-19T15:55:52.932Z","closed_at":"2023-04-14T17:17:29.829Z","closed_by":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::billing and subscription management","section::fulfillment","type::maintenance","workflow::complete"],"milestone":{"id":2910456,"iid":86,"group_id":9970,"title":"15.11","description":"","state":"active","created_at":"2022-12-13T20:08:46.985Z","updated_at":"2022-12-13T20:08:46.985Z","due_date":"2023-04-17","start_date":"2023-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/86"},"assignees":[{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"}],"author":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"type":"ISSUE","assignee":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"user_notes_count":12,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2023-04-14","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4222","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":5,"completed_count":5},"weight":3,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4222","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4222/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4222/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4222","relative":"#4222","full":"gitlab-org/customers-gitlab-com#4222"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":107013125,"iid":4213,"project_id":2670515,"title":"Remove subscription name field from manually creating licenses form","description":"### Problem\n\nWhen manually creating licenses in the Admin area of CustomersDot, there are fields for the subscription name and ID. These fields are optional when creating a legacy license. Hence, the backend logic that checks if the subscription exists in Zuora works when both fields are field or when just one of them are filled. When only the subscription name is filled in, a wrong subscription version can be linked to the license. Whereas the filled in subscription ID will result in linking the correct subscription version is linked to the license.\n\nGathering some feedback from Support (see [this comment](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4601#note_919402242) and [this one](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4601#note_920060764)) shows that they have access to SFDC and Zuora and therefore access to the subscription ID AND name. Given this information, asking both the subscription name and ID in the form is obsolete since the subscription ID will be sufficient.\n\n### Proposal\n\nRemove the subscription name field from the form when manually creating licenses. The information can be pulled from the subscription found with the ID and automatically set on license create.\n\n### Result\n\nRemoving an obsolete field and ensuring that correct subscription version is linked to the created license.","state":"closed","created_at":"2022-04-22T07:32:13.638Z","updated_at":"2022-05-04T07:37:53.353Z","closed_at":"2022-05-04T07:37:53.336Z","closed_by":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","feature::enhancement","group::provision","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"}],"author":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"type":"ISSUE","assignee":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"user_notes_count":14,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4213","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4213","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4213/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4213/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4213","relative":"#4213","full":"gitlab-org/customers-gitlab-com#4213"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":106999089,"iid":4210,"project_id":2670515,"title":"Only allow eligible community program subscriptions for renewal","description":"Add restrictions to only allow eligible community program plans (listed below) to be renewed:\n\n```\nULTIMATE_SAAS_EDU_1_YEAR\nULTIMATE_SM_EDU_1_YEAR\nULTIMATE_SAAS_OSS_1_YEAR\nULTIMATE_SM_OSS_1_YEAR\n```\n\nAttempting to renew any other community program plan using URL (`/subscriptions/community-program/{subscription_id}/renew`) or by accessing renewal landing page (`/subscriptions/community-program/renew`) should redirect to home page.","state":"closed","created_at":"2022-04-21T22:57:10.063Z","updated_at":"2022-04-26T23:29:55.265Z","closed_at":"2022-04-26T23:29:49.903Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","backend","devops::fulfillment","group::purchase","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4210","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4210","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4210/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4210/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4210","relative":"#4210","full":"gitlab-org/customers-gitlab-com#4210"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5711,"epic":{"id":244557,"iid":5711,"title":"[Community Programs] Renewals","url":"/groups/gitlab-org/-/epics/5711","group_id":9970,"human_readable_end_date":"Nov 4, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":109058282,"iid":4351,"project_id":2670515,"title":"Up-to-the-minute license utilization data synced to Salesforce","description":"## Problem Statement\nThe current [License Utilization Salesforce app](https://about.gitlab.com/handbook/sales/field-operations/sales-systems/license-usage-app/) is a WONDERFUL improvement as we had nothing before. However, there are a few problems with it:\n1. Infrequently updated. Problem: not sufficient for quoting a customer, requiring another system for accurate, updated data\n2. Monthly trend data. Problem: monthly is not frequent enough to build trendlines for Q2C processes\n3. Lack of predictability. Problem: no guidance on where the customer may be at their next renewal (see trendlines above)\n\n### Desired Outcome\nA world where the sales rep can, in one system and one flow, review their list of accounts for upcoming renewals and customer check-ins to see license Utilization of their customer subscriptions for under, at, and over their purchased licenses to be better informed with how to serve them. Intentions include a better quote-to-cash process, license utilization visibility, and more efficient rep flow.\n\n**User stories:**\n1. As a rep I want to know how much to quote the customer for their current renewal. This may mean I need a trendline to forecast what their usage will be in 30, 60, 90, 120, 150 days. I want month-over-month trends.\n   1. More especially for larger, slower entities\n2. As a rep I want to see daily/weekly trends of my customers deployment of licenses (is it going up, down, flat? If so, by how much?)\n3. As Fulfillment, I want an established SLA for how long it takes for the customer to send data to it appearing in Salesforce for reps\n4. As an SA/TAM/SDR/renewal rep, I have visibility daily/weekly (i.e., Cloud License) license utilization data to track and support my customers and monitor how many licenses they've deployed\n5. BONUS: As a rep and to support Q2C, I have visibility into how many licenses are deployed (utilization) and are active (users who have logged in recently). \n   1. We've included the number of _active_ users in the last 28 days so I can contrast and compare how many licenses have been deployed vs. are in active use.\n\n\n\n## Proposal\n\nThe proposed initial iteration for this work is in https://gitlab.com/gitlab-com/sales-team/field-operations/systems/-/issues/3324#proposed-solution.\n\n### Reference \n\n1. Current code used to populate license utilization app in SFDC:\n\n\u003cdetails\u003e\u003csummary\u003eClick to expand\u003c/summary\u003e\n\n```\nWith prep as (\n    SELECT DISTINCT DIM_SUBSCRIPTION_ID_ORIGINAL\n                  ,max(DIM_SUBSCRIPTION_ID) AS dim_subscription_id\n                  ,MAX(SUBSCRIPTION_STATUS) AS subscription_status\n                  ,MAX(PING_CREATED_AT) AS ping_created_at\n                  ,MAX(CLEANED_VERSION) AS gitlab_version\n                  ,MAX(BILLABLE_USER_COUNT) AS billable_user_count\n                  ,MAX(MAX_HISTORICAL_USER_COUNT) AS max_historical_user_count\n                  ,CASE WHEN DIM_SUBSCRIPTION_ID_ORIGINAL IN ('2c92a00d6d714abc016d8424bc45583e', '2c92a0087468817001748c89205f0cf5') THEN SUM(LICENSE_USER_COUNT)\n                      ELSE MAX(LICENSE_USER_COUNT) END AS license_user_count\n                  ,MIN(DELIVERY_TYPE) AS delivery_type\n    FROM COMMON_MART_PRODUCT.MART_PRODUCT_USAGE_PAID_USER_METRICS_MONTHLY\n    where date_trunc('month',PING_CREATED_AT) = dateadd('month', -1, date_trunc('month', current_date))\n        AND PING_CREATED_AT is not null\n        AND INSTANCE_TYPE = 'Production'\n    group by 1\n    order by 1 desc\n)\nselect delivery_type\n    ,DIM_SUBSCRIPTION_ID_ORIGINAL\n    ,dim_subscription_id\n    ,subscription_status\n    ,ping_created_at\n    ,gitlab_version\n    ,billable_user_count\n    ,max_historical_user_count\n    ,license_user_count\nfrom prep\nWHERE license_user_count \u003e 0\n```\n\n\u003c/details\u003e\n\n2. License app HB page: https://about.gitlab.com/handbook/sales/field-operations/sales-systems/license-usage-app/","state":"closed","created_at":"2022-04-21T03:49:47.896Z","updated_at":"2023-04-19T22:43:06.307Z","closed_at":"2023-04-19T22:43:06.294Z","closed_by":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"labels":["Affects Salesforce","CSOps","Category:Fulfillment Integrations \u0026 Visibility","Track Health Status [DEPRECATED]","[deprecated] Category:Provision","backend","customer success","devops::fulfillment","group::provision","missed:15.6","missed:15.7","missed:15.8","priority::3","section::fulfillment","type::feature","workflow::blocked"],"milestone":null,"assignees":[{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"}],"author":{"id":4789331,"username":"jdbeaumont","name":"Jeff Beaumont","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4789331/avatar.png","web_url":"https://gitlab.com/jdbeaumont"},"type":"ISSUE","assignee":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"user_notes_count":44,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4351","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4351","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4351/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4351/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4351","relative":"#4351","full":"gitlab-org/customers-gitlab-com#4351"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8133,"epic":{"id":530380,"iid":8133,"title":"Sales Visibility into License Usage Data","url":"/groups/gitlab-org/-/epics/8133","group_id":9970,"human_readable_end_date":"May 31, 2023","human_readable_timestamp":"\u003cstrong\u003e25\u003c/strong\u003e days remaining"},"iteration":null,"health_status":"on_track"},{"id":106856921,"iid":4199,"project_id":2670515,"title":"Use HPM's own actions to adjust height","description":"The following discussion from !4553 should be addressed:\n\n- [ ] @agulina started a [discussion](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4553#note_910290229): \n\n    \u003e **question (non-blocking)**: would it be possible to leverage the iFrame's own action (example [here](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/84342/diffs#7f5d08a2fb96aaa436ea700da47c90a91d22b5d6_0_139))?\n    \u003e \n    \u003e _Edit_: we can also have it for a follow-up.","state":"closed","created_at":"2022-04-19T19:44:11.242Z","updated_at":"2022-08-17T17:48:54.683Z","closed_at":"2022-08-17T17:48:54.522Z","closed_by":{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"},"labels":["Category:Purchase","devops::fulfillment","frontend","group::purchase","maintenance::refactor","section::fulfillment","type::maintenance","won't do"],"milestone":null,"assignees":[],"author":{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"},"type":"ISSUE","assignee":null,"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4199","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4199","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4199/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4199/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4199","relative":"#4199","full":"gitlab-org/customers-gitlab-com#4199"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8295,"epic":{"id":552405,"iid":8295,"title":"[Post-prod] Prevent Zuora HPM payment forms from refreshing when errors are thrown","url":"/groups/gitlab-org/-/epics/8295","group_id":9970},"iteration":null,"health_status":null},{"id":106795040,"iid":4196,"project_id":2670515,"title":"Evaluate zuora client_id and client_secret env variables in iron bank config","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nWhen [exporting schema](https://gitlab.com/gitlab-org/customers-gitlab-com#ironbank) from Zuora for a particular environment, the commands rely on the presence of zuora `client_id` and `client_secret` env variables in the [iron bank config](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/config/initializers/iron_bank.rb#L9).\n\nThe [config](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/config/initializers/iron_bank.rb#L9) however checks only for secrets.\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nCheck for presence of zuora `client_id` and `client_secret` env variables in [iron bank config](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/config/initializers/iron_bank.rb#L9) before defaulting to secrets.\n\n### Result\n\nZuora environment specific operations such as exporting schema will not require resetting secrets.","state":"closed","created_at":"2022-04-18T20:36:27.508Z","updated_at":"2022-04-19T14:39:14.940Z","closed_at":"2022-04-19T14:39:14.919Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","section::fulfillment","type::maintenance","workflow::in review"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4196","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4196","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4196/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4196/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4196","relative":"#4196","full":"gitlab-org/customers-gitlab-com#4196"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":106757983,"iid":4194,"project_id":2670515,"title":"Configure CustomersDot password requirements for customers","description":"### Problem\n\nRight now the minimum password length and other requirements are fairly basic.\n\n### Proposal\n\nWe should follow: https://about.gitlab.com/handbook/security/password-procedure.html#system-password-requirements \n\nand configure CustomersDot as GitLab.","state":"closed","created_at":"2022-04-18T06:25:53.800Z","updated_at":"2022-04-19T14:31:14.536Z","closed_at":"2022-04-19T14:31:14.529Z","closed_by":{"id":273486,"username":"jameslopez","name":"James Lopez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/273486/avatar.png","web_url":"https://gitlab.com/jameslopez"},"labels":["backend","devops::fulfillment","group::fulfillment platform","section::fulfillment"],"milestone":null,"assignees":[],"author":{"id":273486,"username":"jameslopez","name":"James Lopez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/273486/avatar.png","web_url":"https://gitlab.com/jameslopez"},"type":"ISSUE","assignee":null,"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4194","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4194","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4194/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4194/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4194","relative":"#4194","full":"gitlab-org/customers-gitlab-com#4194"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":106576015,"iid":4190,"project_id":2670515,"title":"Always validate the presence of `expires_at` when creating license manually","description":"The following discussion from !4559 should be addressed:\n\n- [ ] @tyleramos started a [discussion](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4559#note_910451285):  (+1 comment)\n\n    \u003e **Question:** Now that this validation is being moved to a service that manages license creation only, I wonder if it makes sense to always validate the presence of `expires_at` now, for offline, legacy, or otherwise?  I know we have plenty of legacy licenses without `expires_at`, but didn't we talk about making sure that all new licenses had an expiration going forward?\n\n## Proposal\n\nAlways validate the presence of `expires_at` when creating license manually (via the `RailsAdmin::CreateLicenseService`).","state":"closed","created_at":"2022-04-13T10:23:04.045Z","updated_at":"2022-04-19T12:24:37.521Z","closed_at":"2022-04-19T12:24:37.506Z","closed_by":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","feature::enhancement","group::provision","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"}],"author":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"type":"ISSUE","assignee":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"user_notes_count":3,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4190","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4190","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4190/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4190/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4190","relative":"#4190","full":"gitlab-org/customers-gitlab-com#4190"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":106538039,"iid":4185,"project_id":2670515,"title":"Renewed subscriptions may not be receiving correct license notifications","description":"### Problem\n\nAs described in [this Slack thread](https://gitlab.slack.com/archives/C01BPM66KNE/p1649771693748099), a customer with a recently renewed subscription did not receive the license notification with activation code as expected.  Instead, the customer received the legacy license email.  Here's the original question posed in Slack:\n\n\u003e  It seems that this customer received a legacy email for the activation, not the new SCL Iteration 2 email (with just a cloud license activation code, no legacy license). Do we know what triggered them to get that legacy email with only a license file, and not the cloud activation code? \n\n- [Zuora Customer Account](https://www.zuora.com/apps/CustomerAccount.do?method=view\u0026id=2c92a0fe5b42d2b0015b5d5229a65433)\n- [Zuora Subscription](https://www.zuora.com/apps/Subscription.do?method=view\u0026id=8a128b5f7ffe331f0180182e91f02d66)\n\nOn Customer Account page, we can see 4 Zuora callouts sent at 04/11/2022 03:32:33 PDT relating to this renewal.\n\nI found the following statements in the logs (adjusted to remove the customer name) which point to the problem:\n```\n2022-04-11T10:32:31.736Z pid=3957127 tid=2hvbv class=ZuoraCallbackWorker jid=3bf1bddc773b0f81e865d7ad INFO: {\"message\"=\u003e\"ZuoraCallbackWorker: Sending license notification\", \"subscription_name\"=\u003e\"xxxx Renewal Opportunity 2019-04-12\"}\n2022-04-11T10:32:31.900Z pid=3957127 tid=2fvvz class=ZuoraCallbackWorker jid=3fc57f0fcc89c9432cee98ad INFO: {\"message\"=\u003e\"ZuoraCallbackWorker: Successfully updated the Super Sonics aware field during Subscription Renewal\", \"customer_id\"=\u003e3371, \"subscription_name\"=\u003e\"xxxx Renewal Opportunity 2019-04-12\", \"cloud_activation_id\"=\u003e4038, \"super_sonics_aware\"=\u003etrue}\n```\n\nIt looks like the license notification is sent before we update the `super_sonics_aware` field on the `CloudActivation`.  If that’s the case, the legacy license email would be [sent here](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/d3def14bb4d349b9877a7e141cf347f10639a2ef/app/services/license_notification_service.rb#L32) because the super sonics aware field is not set.\n\nThe fix isn’t as simple as just reordering logic in CDot.  This is likely a race condition problem because the super sonics aware field is [updated when processing the renewal amendment](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/8993c11361f2fd925f28c1049f24ae55176d7a49/app/workers/zuora_callback_worker.rb#L136) callout, whereas the license notification is sent when processing the last amendment callout (e.g. the callout for the “active” subscription) which in this case is [the RemoveProduct amendment](https://www.zuora.com/apps/Amendment.do?method=viewInfo\u0026id=8a128b5f7ffe331f0180182e91772d0a).  It looks like the  super sonics aware field just happened to be updated a fraction of a second too late, after the license notification.\n\nThe good news is when we fully embrace Zuora Orders, this isn’t a possibility as we process one callout for all actions in an order so no race condition.  I think we may need to make one change in the callout code to ensure the SS aware field is updated earlier.\n\nIn the meantime, we need to rethink when the SS aware is set.  Right now we only set the field when processing the renewal amendment, but we need to  assume amendments won’t be processed in order.\n\n### Proposal\n\nCustomersDot could check if a subscription has been renewed since X date (pick a date from last fall) and update the `super_sonics_aware` field when processing any of the callouts (not just the renewal amendment [as is the case here](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/8993c11361f2fd925f28c1049f24ae55176d7a49/app/workers/zuora_callback_worker.rb#L137)).  This way we can be sure that the `super_sonics_field` is up-to-date before delivering the license.","state":"closed","created_at":"2022-04-12T15:53:57.421Z","updated_at":"2023-03-13T17:23:24.207Z","closed_at":"2022-05-19T15:02:20.830Z","closed_by":{"id":1986039,"username":"lulalala","name":"Mark Chao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1986039/avatar.png","web_url":"https://gitlab.com/lulalala"},"labels":["Cloud License Sync - V2","Cloud Licensing","[deprecated] Category:Provision","backend","customer","devops::fulfillment","group::provision","section::fulfillment","severity::1","type::bug","workflow::verification"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":1986039,"username":"lulalala","name":"Mark Chao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1986039/avatar.png","web_url":"https://gitlab.com/lulalala"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":1986039,"username":"lulalala","name":"Mark Chao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1986039/avatar.png","web_url":"https://gitlab.com/lulalala"},"user_notes_count":10,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4185","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4185","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4185/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4185/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4185","relative":"#4185","full":"gitlab-org/customers-gitlab-com#4185"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8204,"epic":{"id":541648,"iid":8204,"title":"Customers Receiving Legacy License Mailer instead of Unified","url":"/groups/gitlab-org/-/epics/8204","group_id":9970},"iteration":null,"health_status":null},{"id":106496431,"iid":4183,"project_id":2670515,"title":"Incorrect term dates shown for community program subscription renewal","description":"## Summary\n\nSubscription renewal term is showing today's date plus a year as the new term period. It should instead be from subscription's current term end date until a year from term end date\n\nBoth SaaS and SM renewal are affected by this, example below is of SM renewal\n\n![Screen_Shot_2022-04-12_at_4.06.48_PM](/uploads/053093ad1236348358d45f71ef050dd0/Screen_Shot_2022-04-12_at_4.06.48_PM.png)\n\n![Screen_Shot_2022-04-12_at_4.07.26_PM](/uploads/c1c35f1a39767afbb475ea57e2c8d0ba/Screen_Shot_2022-04-12_at_4.07.26_PM.png)\n\n## Steps to reproduce\n\n[Steps to setup community program subscription which is up for renewal](https://gitlab.com/groups/gitlab-org/-/epics/5711#steps-to-setup)\n\n* Visit `/subscriptions/community_program/{subscription_id}/renew` \n\n## What is the current *bug* behavior?\n\nRenewal term shown is from todays date until a year\n\n## What is the expected *correct* behavior?\n\nRenewal term should be from subscription's current term end date until a year from term end date\n\n\n## Implementation notes\n\nWe can use [`renewal_term`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c0e53a8b27eec8fce4b4c405cb0d22929f7f23fe/app/helpers/subscription_helper.rb#L14) helper to get the renewal period and wire it up to use from the components.","state":"closed","created_at":"2022-04-12T04:11:05.189Z","updated_at":"2022-04-25T22:56:33.712Z","closed_at":"2022-04-25T22:56:33.617Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","devops::fulfillment","frontend","group::purchase","section::fulfillment","type::bug","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":3,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4183","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4183","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4183/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4183/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4183","relative":"#4183","full":"gitlab-org/customers-gitlab-com#4183"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5711,"epic":{"id":244557,"iid":5711,"title":"[Community Programs] Renewals","url":"/groups/gitlab-org/-/epics/5711","group_id":9970,"human_readable_end_date":"Nov 4, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":106286236,"iid":4173,"project_id":2670515,"title":"Create a plan for upgrading to Orders APIs, create issues","description":"## Summary\n\nWe need to identify all of the code that utilizes Subscribe / Amend APIs, and create a plan for how we will move to Orders API.\n\n### Documentation\n\nZuora has the following documentation to guide clients through the migration from Subscribe/Amend APIs to Orders API: https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization/Orders_Migration_Guidance#Orders_API_Migration_Guidance\n\nAdditional documentation can be found here https://gitlab.com/gitlab-org/fulfillment-meta/-/issues/462+\n\n## Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\n## Result\n\nAll issues are created, added to the [epic](https://gitlab.com/groups/gitlab-org/-/epics/6438), and are ~\"workflow::ready for development\".\n\nWe should also be able to estimate how long the work will take, so that it can inform our progress towards completing project Matterhorn.\n\n## Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-04-07T23:29:00.974Z","updated_at":"2022-12-13T07:16:24.902Z","closed_at":"2022-06-21T14:47:30.025Z","closed_by":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","section::fulfillment","type::feature","workflow::planning breakdown"],"milestone":{"id":2453024,"iid":74,"group_id":9970,"title":"15.2","description":"","state":"active","created_at":"2022-02-03T22:24:46.818Z","updated_at":"2022-02-03T22:26:32.010Z","due_date":"2022-07-17","start_date":"2022-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/74"},"assignees":[{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"}],"author":{"id":8110789,"username":"tgolubeva","name":"Tatyana Golubeva","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/8110789/avatar.png","web_url":"https://gitlab.com/tgolubeva"},"type":"ISSUE","assignee":{"id":11167007,"username":"aish.sub","name":"Aishwarya Subramanian","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11167007/avatar.png","web_url":"https://gitlab.com/aish.sub"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4173","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4173","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4173/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4173/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4173","relative":"#4173","full":"gitlab-org/customers-gitlab-com#4173"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6438,"epic":{"id":313961,"iid":6438,"title":"Upgrade CustomersDot to Zuora Orders API","url":"/groups/gitlab-org/-/epics/6438","group_id":9970,"human_readable_end_date":"Jan 31, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":106270766,"iid":4172,"project_id":2670515,"title":"Update method name for to differentiate midterm and renewal upgrades","description":"### Description\nFor the MR here https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4563, we have introduced a new method `available_gitlab_renewal_upgrades` and renamed `available_gitlab_upgrades` to `available_gitlab_midterm_upgrades`\n\nWe check if the order belongs to Saas or EE before providing plans for renewal. If order belongs to Saas plans then `available_gitlab_com_renewal_upgrades` is called and `available_gitlab_ee_renewal_upgrades` if order belongs to SM.\n\nDuring midterm upgrade we call `available_gitlab_midterm_upgrades` and depending on SaaS and SM order we make calls to `available_gitlab_com_upgrades` and `available_gitlab_ee_upgrades` respectively.\n\n\n### Proposal\n\nWe can update the names `available_gitlab_com_upgrades` to `available_gitlab_com_midterm_upgrades` and update `available_gitlab_ee_upgrades` to `available_gitlab_ee_midterm_upgrades` to have a better nomenclature.","state":"closed","created_at":"2022-04-07T17:59:56.720Z","updated_at":"2022-05-09T06:15:57.992Z","closed_at":"2022-05-09T06:15:57.955Z","closed_by":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"labels":["Category:Purchase","backend","devops::fulfillment","group::purchase","maintenance::refactor","missed:14.10","section::fulfillment","type::maintenance","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"}],"author":{"id":5667561,"username":"vshumilo","name":"Vladlena Shumilo","state":"active","avatar_url":"https://secure.gravatar.com/avatar/08dfa82785d130c151ab9e21caeab4e3?s=80\u0026d=identicon","web_url":"https://gitlab.com/vshumilo"},"type":"ISSUE","assignee":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"user_notes_count":6,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4172","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4172","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4172/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4172/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4172","relative":"#4172","full":"gitlab-org/customers-gitlab-com#4172"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":106225780,"iid":4169,"project_id":2670515,"title":"CI rspec job consistently fails with payment method related errors","description":"### Problem\n\nOur Ci pipelines rspec job consistently started to fail on `2022-04-01` with payment method related errors. This prevents us from merging merge requests or sending merge requests into review.\n\nErrors from a pipeline:\n\n\u003cdetails\u003e\n\n```\n1) purchase new cloud subscriptions without payment methods successfully purchase a GitLab.com subscription\n     Failure/Error: objects = IronBank::Actions::Create.call(type: 'PaymentMethod', objects: [instance.remote])\n     IronBank::BadRequestError:\n       Body: [{\"Success\"=\u003efalse, \"Errors\"=\u003e[{\"Code\"=\u003e\"INVALID_VALUE\", \"Message\"=\u003e\"Expiration date must be a future date.\"}]}]\n     # ./spec/factories/z/payment_methods.rb:20:in `block (3 levels) in \u003ctop (required)\u003e'\n     # ./spec/factories/z/accounts.rb:27:in `block (4 levels) in \u003ctop (required)\u003e'\n     # ./spec/factories/customers.rb:23:in `block (4 levels) in \u003ctop (required)\u003e'\n     # ./spec/features/new_gitlab_subscription_spec.rb:22:in `block (2 levels) in \u003ctop (required)\u003e'\n     # ./spec/features/new_gitlab_subscription_spec.rb:26:in `block (2 levels) in \u003ctop (required)\u003e'\n  2) Payment Methods with payment methods removes the payment method\n     Failure/Error: objects = IronBank::Actions::Create.call(type: 'PaymentMethod', objects: [instance.remote])\n     IronBank::BadRequestError:\n       Body: [{\"Success\"=\u003efalse, \"Errors\"=\u003e[{\"Code\"=\u003e\"INVALID_VALUE\", \"Message\"=\u003e\"Expiration date must be a future date.\"}]}]\n     # ./spec/factories/z/payment_methods.rb:20:in `block (3 levels) in \u003ctop (required)\u003e'\n     # ./spec/factories/z/accounts.rb:27:in `block (4 levels) in \u003ctop (required)\u003e'\n     # ./spec/factories/customers.rb:23:in `block (4 levels) in \u003ctop (required)\u003e'\n     # ./spec/features/payment_methods_spec.rb:89:in `block (3 levels) in \u003ctop (required)\u003e'\n     # ./spec/features/payment_methods_spec.rb:36:in `block (2 levels) in \u003ctop (required)\u003e'\n  3) purchase new EE Subscriptions when payment method does not exist successfully purchase an EE subscription\n     Failure/Error: objects = IronBank::Actions::Create.call(type: 'PaymentMethod', objects: [instance.remote])\n     IronBank::BadRequestError:\n       Body: [{\"Errors\"=\u003e[{\"Message\"=\u003e\"Expiration date must be a future date.\", \"Code\"=\u003e\"INVALID_VALUE\"}], \"Success\"=\u003efalse}]\n     # ./spec/factories/z/payment_methods.rb:20:in `block (3 levels) in \u003ctop (required)\u003e'\n     # ./spec/factories/z/accounts.rb:27:in `block (4 levels) in \u003ctop (required)\u003e'\n     # ./spec/factories/customers.rb:23:in `block (4 levels) in \u003ctop (required)\u003e'\n     # ./spec/features/new_ee_subscription_spec.rb:6:in `block (2 levels) in \u003ctop (required)\u003e'\n     # ./spec/features/new_ee_subscription_spec.rb:11:in `block (2 levels) in \u003ctop (required)\u003e'\n\n6324 examples, 3 failures, 1 pending\nFailed examples:\nrspec ./spec/features/new_gitlab_subscription_spec.rb:57 # purchase new cloud subscriptions without payment methods successfully purchase a GitLab.com subscription\nrspec ./spec/features/payment_methods_spec.rb:99 # Payment Methods with payment methods removes the payment method\nrspec ./spec/features/new_ee_subscription_spec.rb:39 # purchase new EE Subscriptions when payment method does not exist successfully purchase an EE subscription\n```\n\n\u003c/details\u003e\n\n**Note:** This issue was created afterwards. Investigation happened in this [Slack thread](https://gitlab.slack.com/archives/C029YFPUA6M/p1648805872934929).\n\n### Proposal\n\nInvestigate the root cause and work on a fix.\n\n### Result\n\nFixed CI pipelines and unblock merge request merges and merge requests in general.\n\n### Next steps (if any)\n\nInvestigate the failure.\n\n### How will we measure success?\n\nGreen pipeline results for the `rspec` job","state":"closed","created_at":"2022-04-07T08:08:56.448Z","updated_at":"2022-04-07T08:10:07.500Z","closed_at":"2022-04-07T08:10:07.482Z","closed_by":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","group::provision","maintenance::pipelines","section::fulfillment","type::maintenance","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"}],"author":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"type":"ISSUE","assignee":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4169","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4169","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4169/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4169/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4169","relative":"#4169","full":"gitlab-org/customers-gitlab-com#4169"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":106142354,"iid":4164,"project_id":2670515,"title":"CreateAccountWorker does not retry when SFDC credentials are wrong","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nWhile checking the logs for https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4154, we noticed that our [`Salesforce::CreateAccountWorker`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/workers/salesforce/create_account_worker.rb) didn't retry the jobs that failed while production was using the outdated credentials.\n\nAll the workers enqueued during that window encountered a `Restforce::AuthenticationError: invalid_grant: authentication failure (400)` which made them fail while attempting to create the account object for new customers. \n\nWe have error handling code in [`Salesforce::CreateAccountWorker`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/46edc01d6ac41b279668c10a15f06a4aef6e5edc/app/workers/salesforce/create_account_worker.rb#L25-29) but because the error rescued by the worker (`Salesforce::AccountCreationError`) doesn't match any of the [rescuable codes](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/46edc01d6ac41b279668c10a15f06a4aef6e5edc/lib/errors.rb#L43-50), then it isn't re-raised to be retried later. We only see the error logged and the job is 'done'.\n\nIdeally, these jobs could have been retried by Sidekiq the same way we have retries on opportunity creation so the accounts could be created when the integration user's credentials were updated in production.\n\n**Why does the [`CreateOpportunityWorker`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c14f55f61a1b7e58962cd046378e3c4f2cb3638d/app/workers/salesforce/create_opportunity_worker.rb) retry these errors?**\n \nWhen there is an error during the `Salesforce::CreateOpportunityObjectsService` execution (in this case the invalid grant) there is a `Salesforce::OpportunityNotCreated` error [raised](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c14f55f61a1b7e58962cd046378e3c4f2cb3638d/app/services/salesforce/create_opportunity_objects_service.rb#L134). Since [`Errors.rescuable_classes`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c14f55f61a1b7e58962cd046378e3c4f2cb3638d/lib/errors.rb#L59-61) contains `Salesforce::OpportunityNotCreated`, this error is seen as [retryable](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/c14f55f61a1b7e58962cd046378e3c4f2cb3638d/app/workers/concerns/integration_worker.rb#L23).\n\nOn the other hand, the error raised by the `Salesforce::CreateAccountWorker` - [`Salesforce::AccountCreationError`](app/workers/salesforce/create_account_worker.rb) - is not seen as retryable.\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nSurface the errors rescued in services like [`CreateSalesforceAccountService`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/46edc01d6ac41b279668c10a15f06a4aef6e5edc/app/services/create_salesforce_account_service.rb#L15) and [`CreateSalesforceAccountWithPlaceholderEmailService`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/46edc01d6ac41b279668c10a15f06a4aef6e5edc/app/services/create_salesforce_account_with_placeholder_email_service.rb) through their response hash. \n\nIf we send the error message of the error rescued along with `success: true|false` we could pass that information as the error message for the [`Salesforce::AccountCreationError`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/46edc01d6ac41b279668c10a15f06a4aef6e5edc/app/workers/salesforce/create_account_worker.rb#L48) in this example. This would give us more insight into the actual error that happened and also allow us to check that message against the list of rescuable codes. \n\n:pushpin: Even if we didn't want to retry `invalid_grant` issues, we could still use that information when encountering other rescuable  errors inside other services. With the current way we raise the `Salesforce::AccountCreationError` we don't pass any message so it really isn't matching the error codes anyway.\n\n### Result\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-04-06T05:51:31.044Z","updated_at":"2023-05-04T18:12:16.909Z","closed_at":"2023-04-29T01:26:02.518Z","closed_by":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"labels":["Affects Salesforce","Category:Fulfillment Integrations \u0026 Visibility","auto updated","automation:prevent-auto-close","devops::fulfillment","group::provision","missed:15.10","missed:15.11","past due","section::fulfillment","severity::4","type::bug","workflow::in dev"],"milestone":{"id":2633524,"iid":80,"group_id":9970,"title":"16.0","description":"","state":"active","created_at":"2022-05-30T16:25:25.778Z","updated_at":"2022-05-30T16:25:25.778Z","due_date":"2023-05-17","start_date":"2023-04-18","expired":false,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/80"},"assignees":[{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"}],"author":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"type":"ISSUE","assignee":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"user_notes_count":13,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4164","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4164","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4164/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4164/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4164","relative":"#4164","full":"gitlab-org/customers-gitlab-com#4164"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":106044484,"iid":4157,"project_id":2670515,"title":"Fulfillment Orders UAT 3 (sales-engaged use cases missed from Orders UAT 2)","description":"### Problem\nSales-engaged [end-to-end Orders UAT](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/intake/-/issues/554) is not yet completed for the estimated 2022.05 go-live. \n\n### Proposal\n\nhttps://gitlab.com/groups/gitlab-com/business-technology/enterprise-apps/-/epics/80#note_887981775\n\n- Fulfillment to define Fulfillment Purchasing and Licensing expected behavior (current state behavior) for the following sales-engaged use cases\n- Fulfillment to observe sales-engaged use cases and provide approval for the deploy of Orders Harmonization to production\n\n| TC #      | Business Line | Business Type | Type of Sale | Term        | Ramping  | Ramp Segment | License Type                       |\n|-----------|---------------|---------------|--------------|-------------|----------|--------------|------------------------------------|\n| TC-OH-F01 | Sales-Engaged | 1 - New       | Partner      | Standard 12 | Non-Ramp | N/A          | SaaS + Add On (Storage)            |\n| TC-OH-F02 | Sales-Engaged | 1 - New       | Direct       | MY          | Ramp     | 1            | SaaS + Add On (CI Minutes) |\n| TC-OH-F03 | Sales-Engaged | 1 - New       | Direct       | MY          | Ramp     | 2            | SaaS + Add On (CI Minutes) |\n| TC-OH-F04 | Sales-Engaged | 1 - New       | Direct       | Standard 12 | Non-Ramp | N/A          | Add On (Professional Service)      |\n| TC-OH-F05 | Sales-Engaged | 1 - New       | Direct       | Standard 12 | Non-Ramp | N/A          | Self-Managed |\n| TC-OH-F06 | Sales-Engaged | 2 - Add On    | Partner      | Standard 12 | Non-Ramp | N/A          | SaaS + Add On (Storage) |\n| TC-OH-F07 | Sales-Engaged | 2 - Add On    | Direct       | MY          | Ramp     | 1            | SaaS + Add On (CI Minutes) |\n| TC-OH-F08 | Sales-Engaged | 2 - Add On    | Direct       | Standard 12 | Non-Ramp | N/A          | Self-Managed |\n| TC-OH-F09 | Sales-Engaged | 3 - Renewal   | Partner      | MY          | Non-Ramp | N/A          | SaaS + Add On (TrueUp) |\n| TC-OH-F10 | Sales-Engaged | 3 - Renewal   | Direct       | Standard 12 | Non-Ramp | N/A          | Self-Managed + Add On (TrueUp) |\n| TC-OH-F11 | Sales-Engaged | 3 - Renewal   | Partner      | Standard 12 | Non-Ramp | N/A          | SaaS |\n\n#### Test Case Steps\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F01\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should have a SaaS product, plus a storage add-on. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592).| The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive namespace instructions email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot instructing the customer to link their new subscription with a GL.com namespace. | Verify the email was received with instructions to link the subscription with a namespace. | Y | |\n| T-2     | Register a GL.com User | Navigate to https://staging.gitlab.com/ and register a new user with the testing email address.  Create a new group with this user.  This will be used later to link to the subscription. | The Billing page for this new Group shows a Group is able to be upgraded to Premium or Ultimate.  | Y | |\n| T-3     | Complete the provision through Support | Since this is a subscription purchased from a reseller, the customer is not supposed to be able to log in to CustomersDot to link their subscription. The email instructs to contact Support so we should go through the steps detailed in the [Provisioning subscriptions for reseller customers](https://about.gitlab.com/handbook/support/license-and-renewals/workflows/saas/associate_subscription_and_namespace.html#provisioning-subscriptions-for-reseller-customers) guide. | Purchased subscription should be linked to the correct namespace | Y |\n| T-4     | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should be shown as \"currently using the Premium SaaS Plan (Formerly Silver)\". The subscription details table should show  \"Seats in subscription\" as 1 (unless more were purchased in the order). | Y | |\n| T-5     | View Storage on Usage Quotas page | Navigate to Group's Usage Quotas page in staging.gitlab.com, then click the Storage tab. | Verify the purchased storage synced and the amount shown is correct based on the order. | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F02\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should have a SaaS product, plus a CI Minutes add-on. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592). This subscription will be setup as a sales-assisted ramps workaround, where this subscription represents the first ramp year. | The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive welcome email | The email address referenced in the UAT spreadsheet should have received a welcome email from CustomersDot instructing the customer to reset their password. | Reset the password for this customer account and you should be able to login to CustomersDot.  | Y | |\n| T-2     | Receive namespace instructions email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot instructing the customer to link their new subscription with a GL.com namespace. | Verify the email was received with instructions to link the subscription with a namespace. | Y | |\n| T-3     | View the subscription | Login to CustomersDot after resetting your password.  You should see the subscription with valid information listed on the \"Manage Subscriptions\" page in CustomersDot.  There should be an option to link the subscription with a namespace. | The Manage Subscriptions page shows the subscription.  | Y | |\n| T-4     | Register a GL.com User | Navigate to https://staging.gitlab.com/ and register a new user with the testing email address.  Create a new group with this user.  This will be used later to link to the subscription. | The Billing page for this new Group shows a Group is able to be upgraded to Premium or Ultimate.  | Y | |\n| T-5     | Link the CustomersDot Customer with the GL.com User account | Back in CustomersDot, you should be able to link your CustomersDot Customer Account with your newly created GL.com User (staging).  Click the \"My Account\" button in the top nav bar, then click the \"Account details\" option.  Expand the \"Your GitLab.com account\" section and follow the steps for linking the account. | The CDot customer account should be linked with the GL.com user account. | Y | |\n| T-6     | Link the Subscription with a namespace | Navigate to the \"Manage Subscription\" page in CustomersDot staging and find the subscription. Click the \"Change linked namespace\" button.  Select the group created on step T-4 and confirm the changes. | The subscription should now be linked to the group.  You should see the group name listed on the Manage Subscriptions page. | Y | |\n| T-7     | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should be shown as \"currently using the Premium SaaS Plan (Formerly Silver)\". The subscription details table should show  \"Seats in subscription\" as 1 (unless more were purchased in the order). | Y | |\n| T-8     | View Pipeline Minutes on Usage Quotas page | Navigate to Group's Usage Quotas page in staging.gitlab.com, then click the Pipelines tab. | Verify the purchased minutes synced and the amount shown is correct based on the order. | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F03\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should have a SaaS product, plus a CI Minutes add-on. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592). This subscription will be setup as a sales-assisted ramps workaround, where this subscription represents the second ramp year. | The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive welcome email | The email address referenced in the UAT spreadsheet should have received a welcome email from CustomersDot instructing the customer to reset their password. | Reset the password for this customer account and you should be able to login to CustomersDot.  | Y | |\n| T-2     | Receive namespace instructions email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot instructing the customer to link their new subscription with a GL.com namespace. | Verify the email was received with instructions to link the subscription with a namespace. | Y | |\n| T-3     | View the subscription | Login to CustomersDot after resetting your password.  You should see the subscription with valid information listed on the \"Manage Subscriptions\" page in CustomersDot.  There should be an option to link the subscription with a namespace. | The Manage Subscriptions page shows the subscription.  | Y | |\n| T-4     | Register a GL.com User | Navigate to https://staging.gitlab.com/ and register a new user with the testing email address.  Create a new group with this user.  This will be used later to link to the subscription. | The Billing page for this new Group shows a Group is able to be upgraded to Premium or Ultimate.  | Y | |\n| T-5     | Link the CustomersDot Customer with the GL.com User account | Back in CustomersDot, you should be able to link your CustomersDot Customer Account with your newly created GL.com User (staging).  Click the \"My Account\" button in the top nav bar, then click the \"Account details\" option.  Expand the \"Your GitLab.com account\" section and follow the steps for linking the account. | The CDot customer account should be linked with the GL.com user account. | Y | |\n| T-6     | Link the Subscription with a namespace | Navigate to the \"Manage Subscription\" page in CustomersDot staging and find the subscription. Click the \"Change linked namespace\" button.  Select the group created on step T-4 and confirm the changes. | The subscription should now be linked to the group.  You should see the group name listed on the Manage Subscriptions page. | Y | |\n| T-7     | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should be shown as \"currently using the Premium SaaS Plan (Formerly Silver)\". The subscription details table should show  \"Seats in subscription\" as 1 (unless more were purchased in the order). | Y | |\n| T-8     | View Pipeline Minutes on Usage Quotas page | Navigate to Group's Usage Quotas page in staging.gitlab.com, then click the Pipelines tab. | Verify the purchased minutes synced and the amount shown is correct based on the order. | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F04\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should only have a profesional service add-on. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592).| The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive welcome email | The email address referenced in the UAT spreadsheet should have received a welcome email from CustomersDot instructing the customer to reset their password.  You should not receive any other emails from CDot related to this purchase. | Reset the password for this customer account and you should be able to login to CustomersDot.  | Y | |\n| T-2     | View the subscription | Login to CustomersDot after resetting your password.  You should see the subscription with valid information listed on the \"Manage Subscriptions\" page in CustomersDot.  The subscription should not show an option for linking the subscription with a namespace since it is a professional service. | The Manage Subscriptions page shows the subscription.  | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F05\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should have a Self-Managed product. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592). | The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive welcome email | The email address referenced in the UAT spreadsheet should have received a welcome email from CustomersDot instructing the customer to reset their password. | Reset the password for this customer account and you should be able to login to CustomersDot.  | Y | |\n| T-2     | Receive license email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot with activation instructions (e.g. activation code unless cloud licensing is disabled). | Verify the email was received with instructions on how to activate. | Y | |\n| T-3     | View the subscription | Login to CustomersDot after resetting your password.  You should see the subscription with valid information listed on the \"Manage Subscriptions\" page in CustomersDot.  You should see the activation code (unless cloud licensing is disabled). | The Manage Subscriptions page shows the subscription with correct information and license activation code and/or license file. | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F06\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should start with a SaaS product, and a storage add-on as well (confirm with Mark). The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592). | The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive namespace instructions email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot instructing the customer to link their new subscription with a GL.com namespace. | Verify the email was received with instructions to link the subscription with a namespace. | Y | |\n| T-2     | Register a GL.com User | Navigate to https://staging.gitlab.com/ and register a new user with the testing email address.  Create a new group with this user.  This will be used later to link to the subscription. | The Billing page for this new Group shows a Group is able to be upgraded to Premium or Ultimate.  | Y | |\n| T-3     | Complete the provision through Support | Since this is a subscription purchased from a reseller, the customer is not supposed to be able to log in to CustomersDot to link their subscription. The email instructs to contact Support so we should go through the steps detailed in the [Provisioning subscriptions for reseller customers](https://about.gitlab.com/handbook/support/license-and-renewals/workflows/saas/associate_subscription_and_namespace.html#provisioning-subscriptions-for-reseller-customers) guide. | Purchased subscription should be linked to the correct namespace | Y |\n| T-4     | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should be shown as \"currently using the Premium SaaS Plan (Formerly Silver)\". The subscription details table should show  \"Seats in subscription\" as 1 (unless more were purchased in the order). | Y | |\n| T-5     | View Storage on Usage Quotas page | Navigate to Group's Usage Quotas page in staging.gitlab.com, then click the Storage tab. | Verify the purchased storage synced and the amount shown is correct based on the order. At this point, we should reach out to Ent Apps to inform them we are ready for the sales-assisted add-on order. | Y | |\n| T-6     | Sales-assisted add-on deal created | Ent Apps to create a sales-assisted add-on deal to add seats to the subscription in the staging environment (Zuora Central Sandbox). | Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-7    | View Billing page | Refresh the Group's Billing page in staging.gitlab.com. | The Group should still show \"currently using the Premium SaaS Plan (Formerly Silver)\" but with additional seats in the subscription. | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F07\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should start with a SaaS product, and a CI Minutes add-on as well (confirm with Mark). The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592). This subscription will be setup as a sales-assisted ramps workaround, where this subscription represents the first ramp year. | The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive welcome email | The email address referenced in the UAT spreadsheet should have received a welcome email from CustomersDot instructing the customer to reset their password. | Reset the password for this customer account and you should be able to login to CustomersDot.  | Y | |\n| T-2     | Receive namespace instructions email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot instructing the customer to link their new subscription with a GL.com namespace. | Verify the email was received with instructions to link the subscription with a namespace. | Y | |\n| T-3     | View the subscription | Login to CustomersDot after resetting your password.  You should see the subscription with valid information listed on the \"Manage Subscriptions\" page in CustomersDot.  There should be an option to link the subscription with a namespace. | The Manage Subscriptions page shows the subscription.  | Y | |\n| T-4     | Register a GL.com User | Navigate to https://staging.gitlab.com/ and register a new user with the testing email address.  Create a new group with this user.  This will be used later to link to the subscription. | The Billing page for this new Group shows a Group is able to be upgraded to Premium or Ultimate.  | Y | |\n| T-5     | Link the CustomersDot Customer with the GL.com User account | Back in CustomersDot, you should be able to link your CustomersDot Customer Account with your newly created GL.com User (staging).  Click the \"My Account\" button in the top nav bar, then click the \"Account details\" option.  Expand the \"Your GitLab.com account\" section and follow the steps for linking the account. | The CDot customer account should be linked with the GL.com user account. | Y | |\n| T-6     | Link the Subscription with a namespace | Navigate to the \"Manage Subscription\" page in CustomersDot staging and find the subscription. Click the \"Change linked namespace\" button.  Select the group created on step T-4 and confirm the changes. | The subscription should now be linked to the group.  You should see the group name listed on the Manage Subscriptions page. | Y | |\n| T-7     | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should be shown as \"currently using the Premium SaaS Plan (Formerly Silver)\". The subscription details table should show  \"Seats in subscription\" as 1 (unless more were purchased in the order). | Y | |\n| T-8     | View Pipeline Minutes on Usage Quotas page | Navigate to Group's Usage Quotas page in staging.gitlab.com, then click the Pipelines tab. | Verify the purchased minutes synced and the amount shown is correct based on the order. At this point, we should reach out to Ent Apps to inform them we are ready for the sales-assisted add-on order. | Y | |\n| T-9     | Sales-assisted add-on deal created | Ent Apps to create a sales-assisted add-on deal to add seats to the subscription in the staging environment (Zuora Central Sandbox). | Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-10    | View the subscription | Refresh the \"Manage Purchases\" page in CDot.  You should see the subscription with valid product and quantity listed. | The Manage Subscriptions page shows the subscription with correct product and quantity.  | Y | |\n| T-11    | View Billing page | Refresh the Group's Billing page in staging.gitlab.com. | The Group should still show \"currently using the Premium SaaS Plan (Formerly Silver)\" but with additional seats in the subscription. | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F08\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should have a Self-Managed product. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592).| The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive welcome email | The email address referenced in the UAT spreadsheet should have received a welcome email from CustomersDot instructing the customer to reset their password. | Reset the password for this customer account and you should be able to login to CustomersDot.  | Y | |\n| T-2     | Receive license email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot with activation instructions (e.g. activation code unless cloud licensing is disabled). | Verify the email was received with instructions on how to activate. | Y | |\n| T-3     | View the subscription | Login to CustomersDot after resetting your password.  You should see the subscription with valid information listed on the \"Manage Subscriptions\" page in CustomersDot.  You should see the activation code (unless cloud licensing is disabled). | The Manage Subscriptions page shows the subscription. At this point, we should reach out to Ent Apps to inform them we are ready for the sales-assisted add on order.  | Y | |\n| T-4     | Sales-assisted add on created | Ent Apps to create a sales-assisted add on order to add seats to the subscription in the staging environment (Zuora Central Sandbox). | Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-5    | View the subscription | Refresh the \"Manage Purchases\" page in CDot.  You should see the subscription with valid product information listed with correct quantity. | The Manage Subscriptions page shows the subscription with correct product and quantity. | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F09\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should have a SaaS product. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592).| The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive namespace instructions email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot instructing the customer to link their new subscription with a GL.com namespace. | Verify the email was received with instructions to link the subscription with a namespace. | Y | |\n| T-2     | Register a GL.com User | Navigate to https://staging.gitlab.com/ and register a new user with the testing email address.  Create a new group with this user.  This will be used later to link to the subscription. | The Billing page for this new Group shows a Group is able to be upgraded to Premium or Ultimate.  | Y | |\n| T-3     | Complete the provision through Support | Since this is a subscription purchased from a reseller, the customer is not able to log in to CustomersDot to link their subscription. The email instructs to contact Support so we should go through the steps detailed in the [Provisioning subscriptions for reseller customers](https://about.gitlab.com/handbook/support/license-and-renewals/workflows/saas/associate_subscription_and_namespace.html#provisioning-subscriptions-for-reseller-customers) guide. | Purchased subscription should be linked to the correct namespace | Y |\n| T-4     | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should be shown as \"currently using the Premium SaaS Plan (Formerly Silver)\". The subscription details table should show  \"Seats in subscription\" as 1 (unless more were purchased in the order). At this point, we should reach out to Ent Apps to inform them we are ready for the sales-assisted renewal order. | Y | |\n| T-5     | Sales-assisted renewal created | Ent Apps to create a sales-assisted renewal in the staging environment (Zuora Central Sandbox).  The subscription will now have renewed term along with a true up product. | Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-6    | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should still show \"currently using the Premium SaaS Plan (Formerly Silver)\". Depending on when the renewed term starts, the subscription start and end date may not be updated yet.  If the renewal date is in the future, CDot would wait to sync this on the term start date. | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F10\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should have a Self-Managed product. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592).| The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive welcome email | The email address referenced in the UAT spreadsheet should have received a welcome email from CustomersDot instructing the customer to reset their password. | Reset the password for this customer account and you should be able to login to CustomersDot.  | Y | |\n| T-2     | Receive license email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot with activation instructions (e.g. activation code unless cloud licensing is disabled). | Verify the email was received with instructions on how to activate. | Y | |\n| T-3     | View the subscription | Login to CustomersDot after resetting your password.  You should see the subscription with valid information listed on the \"Manage Subscriptions\" page in CustomersDot.  You should see the activation code (unless cloud licensing is disabled). | The Manage Subscriptions page shows the subscription. At this point, we should reach out to Ent Apps to inform them we are ready for the sales-assisted renewal order.  | Y | |\n| T-4     | Sales-assisted renewal created | Ent Apps to create a sales-assisted renewal in the staging environment (Zuora Central Sandbox).  The subscription will now have renewed term along with a true up product. | Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-5    | View the subscription | Refresh the \"Manage Purchases\" page in CDot.  You should see the subscription with valid product information listed.  The term start and end dates should reflect the renewed term. | The Manage Subscriptions page shows the subscription with updated terms.  | Y | |\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003eTC-OH-F11\u003c/summary\u003e\n\n| Step ID | Test Step   | Description | Expected Outcome | Testable? | Pass/Fail |\n|---------|--------|----|----------|:---:|:---:|\n| T-0     | Sales-assisted deal created | Ent Apps to create a new sales-assisted deal in the staging environment (Zuora Central Sandbox).  The subscription should have a SaaS product. The Sold To Contact for the subscription will use an alias of @a_luna's email which you can reference in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NDtGfwqOOpZN534RHJjG9vrAMxM9jfY8ilgMklr0FQ4/edit#gid=326551592).| The subscription and customer can be found in Zuora Central Sandbox.  Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-1     | Receive namespace instructions email | The email address referenced in the UAT spreadsheet should have received an email from CustomersDot instructing the customer to link their new subscription with a GL.com namespace. | Verify the email was received with instructions to link the subscription with a namespace. | Y | |\n| T-2     | Register a GL.com User | Navigate to https://staging.gitlab.com/ and register a new user with the testing email address.  Create a new group with this user.  This will be used later to link to the subscription. | The Billing page for this new Group shows a Group is able to be upgraded to Premium or Ultimate.  | Y | |\n| T-3     | Complete the provision through Support | Since this is a subscription purchased from a reseller, the customer is not supposed to be able to log in to CustomersDot to link their subscription. The email instructs to contact Support so we should go through the steps detailed in the [Provisioning subscriptions for reseller customers](https://about.gitlab.com/handbook/support/license-and-renewals/workflows/saas/associate_subscription_and_namespace.html#provisioning-subscriptions-for-reseller-customers) guide. | Purchased subscription should be linked to the correct namespace | Y |\n| T-4     | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should be shown as \"currently using the Premium SaaS Plan (Formerly Silver)\". The subscription details table should show  \"Seats in subscription\" as 1 (unless more were purchased in the order). At this point, we should reach out to Ent Apps to inform them we are ready for the sales-assisted renewal order. | Y | |\n| T-5     | Sales-assisted renewal created | Ent Apps to create a sales-assisted renewal in the staging environment (Zuora Central Sandbox).  The subscription will now have renewed term. | Verify the Order callout was triggered and successful from the Customer Account page in Zuora. | Y | |\n| T-6    | View Billing page | Navigate to Group's Billing page in staging.gitlab.com. | The Group should still show \"currently using the Premium SaaS Plan (Formerly Silver)\". Depending on when the renewed term starts, the subscription start and end date may not be updated yet.  If the renewal date is in the future, CDot would wait to sync this on the term start date. | Y | |\n\n\u003c/details\u003e\n\n### Testing Status\n\nUpdate the table below with the testing status (see legend below) as you progress through your use cases.\n\n| Use Case ID | Tester | Status | Test Results |                                                                                       \n|-------------|--------------|-----|-----|\n| TC-OH-F01 | `@a_luna` | :white_check_mark:  | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_916077786 | \n| TC-OH-F02 | `@a_luna` | :white_check_mark: | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_916112125 |\n| TC-OH-F03 | `@a_luna` | :white_check_mark: | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_919077837 |\n| TC-OH-F04 | `@a_luna` | :white_check_mark:| https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_917240828 |\n| TC-OH-F05 | `@a_luna` | :white_check_mark: | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_917368701 |\n| TC-OH-F06 | `@a_luna` | :x: | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_918876662 \u003cbr\u003e Failure explained [here](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_923108372) and not related to OH specifically |\n| TC-OH-F07 | `@a_luna` | :x: | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_918942014 \u003cbr\u003e Failure explained [here](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_923108372) and not related to OH specifically |\n| TC-OH-F08 | `@a_luna` | :white_check_mark: | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_919089342 |\n| TC-OH-F09 | `@a_luna` | :white_check_mark: | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_919090475 |\n| TC-OH-F10 | `@a_luna` | :white_check_mark: | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_921481406 |\n| TC-OH-F11 | `@a_luna` | :white_check_mark:  | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157#note_921511297 |\n\n\u003cdetails\u003e\u003csummary\u003eTesting Status Legend\u003c/summary\u003e\n\n| Emoji | Status |\n| ------ | ------ |\n| :white_check_mark: | Completed \u0026 Passed |\n| :x: | Completed with some failures |\n| :no_entry: | Blocked |\n| :hourglass: | In progress |\n| :white_large_square: | Not started |\n\n\u003c/details\u003e\n\n### Documenting Testing Results\n\nEach test case should have a single comment in this issue to document the results. \n\n- Create issues for anything noticed during testing.\n- In the comment cell, add a link for each object created during the test (e.g. salesforce account, opportunity, subscription, group, etc.)\n\nUtilize the following template for your comment:\n\n| Step ID | Comments | Pass/Fail | Issues Created |\n|---|---|---|---|\n| T-7 | Followed steps as described | Fail | `#12345` \u003cbr\u003e \u003cbr\u003e `#98765` |","state":"closed","created_at":"2022-04-04T15:27:56.634Z","updated_at":"2022-05-18T20:00:41.855Z","closed_at":"2022-04-26T18:26:11.859Z","closed_by":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"labels":["backend","devops::fulfillment","group::provision","section::fulfillment","workflow::in dev"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"}],"author":{"id":7200051,"username":"mquitevis","name":"Mark Quitevis","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7200051/avatar.png","web_url":"https://gitlab.com/mquitevis"},"type":"ISSUE","assignee":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"user_notes_count":69,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4157","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4157","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4157/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4157/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4157","relative":"#4157","full":"gitlab-org/customers-gitlab-com#4157"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":106020076,"iid":4155,"project_id":2670515,"title":"Remove reconciliations feature flag","description":"### Problem\n\nIn https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4545#note_898092068, it came up that the [`reconciliations` feature flag](https://gitlab.com/gitlab-org/customers-gitlab-com/-/feature_flags/60/edit) is quite old and could probably be removed.\n\nThe feature flag has been enabled in production for a couple of months now (can't find a comment for a specific date). There are about 8 places in the code that are using the feature flag.\n\n### Proposal\n\nRemove the `reconciliations` feature flag and all related code places from the code. After removing it from the code, delete the feature flag config https://gitlab.com/gitlab-org/customers-gitlab-com/-/feature_flags/60/edit.\n\n### Result\n\nRemoving a feature flag and technical debt.\n\nOnce removed, we can update the feature flag cleanup epic: https://gitlab.com/groups/gitlab-org/-/epics/8672.","state":"closed","created_at":"2022-04-04T09:57:08.608Z","updated_at":"2023-01-10T17:04:10.263Z","closed_at":"2023-01-10T17:04:10.237Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Billing and Subscription Management","backend","devops::fulfillment","group::billing and subscription management","maintenance::refactor","section::fulfillment","type::maintenance","workflow::production"],"milestone":{"id":2745648,"iid":83,"group_id":9970,"title":"15.8","description":"","state":"active","created_at":"2022-08-22T16:57:34.875Z","updated_at":"2022-08-22T16:57:34.875Z","due_date":"2023-01-17","start_date":"2022-12-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/83"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":10,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4155","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4155","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4155/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4155/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4155","relative":"#4155","full":"gitlab-org/customers-gitlab-com#4155"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":105852849,"iid":4150,"project_id":2670515,"title":"User with Maintainer role can start trial for a Group","description":"\u003c!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"bug\" label in relevant trackers:\n\n- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=bug\n- https://gitlab.com/gitlab-org/customers-gitlab-com/issues?label_name%5B%5D=bug\n\nand verify the issue you're about to submit isn't a duplicate.\n\nDo not include confidential information!\n---\u003e\n\n# Bug\n\n## Summary\n\nNormally, only group Owner should be able to start a trial for a group. There's a loophole that allow users with `Maintainer` role to take out a trial for the group without having access to Group Billing page.\n\n## Steps to reproduce\n\n1. User A create a new group ABC\n1. User A invite User B as a member of group ABC with `Maintainer` role\n\nAs User B\n\n1. Signed into GitLab.com in the browser\n1. Navigate to https://about.gitlab.com/free-trial/\n1. Click on the `Continue with SaaS` button\n1. Fill in the form and click `Continue`\n1. See the Ultimate trial provisioned for the group\n\n## What is the current *bug* behavior?\n\nUsers with Maintainer role can take out trial for a group.\n\n## What is the expected *correct* behavior?\n\nOnly group Owner should be able to take out trial. \n\n## Relevant logs and/or screenshots\n\n(Paste any relevant logs - please use code blocks (```) to format console output,\nlogs, and code as it's tough to read otherwise.)\n\n## Workarounds\n\n(Ways to get around the issue)\n\n## Reported examples\n\n1. https://gitlab.zendesk.com/agent/tickets/279237\n1.\n1.\n\n\u003c!---\nPlease add both severity and priority level according to: https://docs.gitlab.com/ee/development/contributing/issue_workflow.html#severity-labels\n---\u003e","state":"closed","created_at":"2022-04-01T03:19:09.881Z","updated_at":"2022-07-21T14:48:21.089Z","closed_at":"2022-07-21T09:37:28.772Z","closed_by":{"id":9877149,"username":"sam.figueroa","name":"Sam Figueroa","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9877149/avatar.png","web_url":"https://gitlab.com/sam.figueroa"},"labels":["customer","devops::growth","group::acquisition","priority::3","section::growth","severity::3","type::bug","workflow::in review"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[{"id":9877149,"username":"sam.figueroa","name":"Sam Figueroa","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9877149/avatar.png","web_url":"https://gitlab.com/sam.figueroa"}],"author":{"id":786864,"username":"rotanak","name":"Sokunrotanak Srey (Rotanak)","state":"active","avatar_url":"https://secure.gravatar.com/avatar/9e138f6598fa362b95f725febc80087e?s=80\u0026d=identicon","web_url":"https://gitlab.com/rotanak"},"type":"ISSUE","assignee":{"id":9877149,"username":"sam.figueroa","name":"Sam Figueroa","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9877149/avatar.png","web_url":"https://gitlab.com/sam.figueroa"},"user_notes_count":24,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4150","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4150","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4150/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4150/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4150","relative":"#4150","full":"gitlab-org/customers-gitlab-com#4150"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":105836163,"iid":4148,"project_id":2670515,"title":"All SFDC Quotes should be marked as Primary","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nThe current Quote [attributes](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/6601a127323e7fb3826d1a906f369015ef12b814/app/services/salesforce/create_quote_service.rb#L59-75) we send to SFDC do not include the `zqu__Primary__c` field. \n\nThis field is required for an automation to be able to mark Opportunities as `IS EDU / OSS` and since it's currently not set, the automation doesn't update that field for the expected opportunities.\n\nMore details in https://gitlab.com/gitlab-com/sales-team/field-operations/systems/-/issues/1976#note_896371050.\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\nAdd `zqu__Primary__c: true` to the Quote [attributes](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/6601a127323e7fb3826d1a906f369015ef12b814/app/services/salesforce/create_quote_service.rb#L59-75).\n\n### Result\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-03-31T18:04:23.020Z","updated_at":"2022-03-31T20:57:53.855Z","closed_at":"2022-03-31T20:57:53.848Z","closed_by":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"labels":["Affects Salesforce","[deprecated] Category:Provision","devops::fulfillment","group::provision","section::fulfillment"],"milestone":null,"assignees":[{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"}],"author":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"type":"ISSUE","assignee":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"user_notes_count":4,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4148","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4148","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4148/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4148/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4148","relative":"#4148","full":"gitlab-org/customers-gitlab-com#4148"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":105828851,"iid":4147,"project_id":2670515,"title":"Follow-up from \"Use customer object from order subscription name\"","description":"The following discussion from !4452 should be addressed:\n\n- [ ] @ddavison started a [discussion](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4452#note_885897739):  (+7 comments)\n\n    \u003e Shortening this seems confusing to me. What do you think about using the full word `customer`? \n    \u003e \n    \u003e ```suggestion:-0+0\n    \u003e   def subscription(reload: false, customer: customer)\n    \u003e ```","state":"closed","created_at":"2022-03-31T15:03:43.705Z","updated_at":"2023-01-16T13:13:51.823Z","closed_at":"2023-01-16T13:13:51.766Z","closed_by":{"id":13250778,"username":"mtimoustafa","name":"Mohamed Moustafa","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/13250778/avatar.png","web_url":"https://gitlab.com/mtimoustafa"},"labels":["ARM::Consider for 15.8","Category:Purchase","Unplanned","backend","devops::fulfillment","group::purchase","quick win","section::fulfillment","type::maintenance"],"milestone":{"id":2745648,"iid":83,"group_id":9970,"title":"15.8","description":"","state":"active","created_at":"2022-08-22T16:57:34.875Z","updated_at":"2022-08-22T16:57:34.875Z","due_date":"2023-01-17","start_date":"2022-12-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/83"},"assignees":[{"id":13250778,"username":"mtimoustafa","name":"Mohamed Moustafa","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/13250778/avatar.png","web_url":"https://gitlab.com/mtimoustafa"}],"author":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"type":"ISSUE","assignee":{"id":13250778,"username":"mtimoustafa","name":"Mohamed Moustafa","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/13250778/avatar.png","web_url":"https://gitlab.com/mtimoustafa"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4147","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4147","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4147/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4147/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4147","relative":"#4147","full":"gitlab-org/customers-gitlab-com#4147"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":105651226,"iid":4128,"project_id":2670515,"title":"[Community Programs Renewal] API changes to renew community program subscriptions","description":"Update subscription API currently doesn't accept coupon codes, therefore can't renew community subscriptions\n\n# Requirements\n\nThe API should:\n\n   * Accept coupon code\n   * Validate coupon code\n       - Should be active\n       - Should be one of the generated coupons (should exist in the database) \n       - Shouldn't have been already redeemed\n   * Raise a validation error for invalid coupons\n   * Renew a community program subscription with a coupon code\n   * Mark the coupon code as redeemed once used\n\nWe need to make sure standard subscription renewal behaviour is unchanged since the code changes for standard and community program renewals are in the same area","state":"closed","created_at":"2022-03-29T01:58:41.292Z","updated_at":"2022-04-19T05:43:58.779Z","closed_at":"2022-04-19T04:04:59.747Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","backend","devops::fulfillment","group::purchase","section::fulfillment","type::api","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4128","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4128","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4128/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4128/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4128","relative":"#4128","full":"gitlab-org/customers-gitlab-com#4128"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5711,"epic":{"id":244557,"iid":5711,"title":"[Community Programs] Renewals","url":"/groups/gitlab-org/-/epics/5711","group_id":9970,"human_readable_end_date":"Nov 4, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":105589181,"iid":4124,"project_id":2670515,"title":"Seat overage notification cannot find subscription when account ID is missing","description":"### Problem\n\nThis is a follow up from https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4120+ and is likely dependent on https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4452+.\n\nCurrently, for some `Order` records, when we call `order.current_subscription` we get `nil` returned as the `account_id` is blank. \n\nQingyu has already done an investigation of this here (https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4120#note_889020095):\n\n\u003e Yes this is a known data integrity issue:\n\u003e \n\u003e * `order.customer.zuora_account_id` is `nil`, OR,\n\u003e * `order.customer.zuora_account_id` does not match `zuora_subscription.account_id`\n\u003e   * NOTE: `zuora_subscription` should purely calculated by `order.subscription_name/subscription_id`. Such as `Zuora::Subscription.find_by(name: order.subscription_name)`.\n\u003e   * BTW: We have `order.zuora_account_id` to speed up some queries in certain scenarios. But sadly, I've seen `order.zuora_account_id` is also not maintained correctly sometimes.\n\u003e \n\u003e This is a subset of the issue https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/1874+.\n\u003e \n\u003e AFAIK, the first area we start to fix this problem is: in reconciliation https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3865+\n\u003e \n\u003e * this is limited to reconciliation, and,\n\u003e * this is just the first iteration in the reconciliation area.\n\u003e \n\u003e We believe we can detach `Order` and `Customer` in QSR. For other areas(outside of QSR), we still need to evaluate the impact \u003e as part of https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/1874+.\n\n\n### Proposal\n\nhttps://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4452+ is already being worked on to address this for reconciliation.\n\nOnce this is completed, we should be able to call `reconciliation.subscription` rather than [`order.current_subscription`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/3f4a30f72962aa0dbda3dd8f0eed05681262116d/app/services/reconciliations/send_seat_overage_notification_service.rb#L45) in the notification service and benefit from that work here too.","state":"closed","created_at":"2022-03-28T04:25:33.675Z","updated_at":"2022-04-05T08:19:16.877Z","closed_at":"2022-04-05T08:19:16.849Z","closed_by":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"labels":["Category:Purchase","Unplanned","backend","devops::fulfillment","group::purchase","section::fulfillment","type::bug","workflow::in review"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"}],"author":{"id":4981524,"username":"jhyson","name":"Josianne Hyson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4981524/avatar.png","web_url":"https://gitlab.com/jhyson"},"type":"ISSUE","assignee":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4124","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4124","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4124/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4124/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4124","relative":"#4124","full":"gitlab-org/customers-gitlab-com#4124"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":105489281,"iid":4120,"project_id":2670515,"title":"Handle seat overage notification unable to find subscription","description":"See https://sentry.gitlab.net/gitlab/customersgitlabcom/issues/3239505/?referrer=gitlab_plugin\n\n## Summary\n\nWhen seat overage notification is triggered, a small number of these causes error because subscription cannot be found.\n\nTaking subscription `A-S00010110` as an example, due to its `order.customer.zuora_account_id` being nil, the `order.current_subscription` will also return nil. This caused the exception. (p.s. `order.zuora_account_id` is present though).\n\nWe will need to investigate\n\n1. if this is a purely random data integrity\n1. if this can be recovered, or should be properly ignored\n\nThis is currently not severe, because mailing operation is new and is stopped half-way through, therefore no customer is being affected.","state":"closed","created_at":"2022-03-25T10:30:54.098Z","updated_at":"2022-03-30T06:53:52.417Z","closed_at":"2022-03-29T22:26:24.689Z","closed_by":{"id":4981524,"username":"jhyson","name":"Josianne Hyson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4981524/avatar.png","web_url":"https://gitlab.com/jhyson"},"labels":["Category:Purchase","Unplanned","devops::fulfillment","group::purchase","section::fulfillment","type::bug","workflow::verification"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":4981524,"username":"jhyson","name":"Josianne Hyson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4981524/avatar.png","web_url":"https://gitlab.com/jhyson"}],"author":{"id":402401,"username":"jobbot","name":"Bot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/aaa6738f1ebf25404010884af511b0e7?s=80\u0026d=identicon","web_url":"https://gitlab.com/jobbot"},"type":"ISSUE","assignee":{"id":4981524,"username":"jhyson","name":"Josianne Hyson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4981524/avatar.png","web_url":"https://gitlab.com/jhyson"},"user_notes_count":16,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4120","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4120","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4120/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4120/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4120","relative":"#4120","full":"gitlab-org/customers-gitlab-com#4120"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":105445692,"iid":4118,"project_id":2670515,"title":"Create CloudActivation record immediately as part of web direct purchase","description":"### Problem\n\nAn activation code for SM subscriptions are found in the `CloudActivation` model with a matching `subscription_name`.  These records much be created in order for the activation code to be shown in CustomersDot for a cloud licensing capable SM subscription.  \n\nCurrently, the `CloudActivation` record is created [when processing the Zuora callout](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/16e4f22fab6a4dfddfcff6f318241c2e67281b8d/app/workers/zuora_callback_worker.rb#L24) after a purchase/update is processed in Zuora. We've found at times there is a noticeable delay between the time of purchase and the time the callout is processed.  This could be because of a delay in Zuora sending the callout or a delay in CustomersDot processing it.  \n\nWhen this happens, the customer sees the license file as the only method for activating their subscription, until the callout can be processed.\n\n### Proposal\n\nIt would be better to create the `CloudActivation` as part of the initial purchase in the `SubscriptionsController`, [similar to how an order is created](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/343aa1c9ae880946b2aff53ed8c3a71628d0318a/app/controllers/subscriptions_controller.rb#L260).  This will ensure the activation code is present immediately after purchase.","state":"closed","created_at":"2022-03-24T17:29:22.458Z","updated_at":"2022-04-14T13:36:24.139Z","closed_at":"2022-04-14T13:36:24.121Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","group::provision","section::fulfillment","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":3,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4118","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4118","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4118/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4118/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4118","relative":"#4118","full":"gitlab-org/customers-gitlab-com#4118"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":105383704,"iid":4116,"project_id":2670515,"title":"Errors on Contact and OpportunityContactRole creation enqueue unnecessary retries of Opportunity creation","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nCurrent logic in [`Salesforce::CreateOpportunityService`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/create_opportunity_service.rb) creates the [`OpportunityContactRole` object](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/create_opportunity_service.rb#L118) right after creating the opportunity. Additionally, when creating the `OpportunityContactRole`, a [new Contact is created](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/contact_finding.rb#L14) if there isn't an existing one. This approach works for the most part but creates problems when an error is raised _**after**_ the opportunity is already created.\n\nWhen there's an error during the creation of the `Contact` or `OpportunityContactRole`, the error is [rescued](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/create_opportunity_service.rb#L26) and an unsuccessful response is returned to the `Salesforce::CreateOpportunityObjectsService`. This service then raises a [`Salesforce::OpportunityNotCreated`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/create_opportunity_objects_service.rb#L103) error and re-raises it so the job is retried. But since the creation of the opportunity is not failing, each retry of the job will then create **another opportunity**.\n\nAnother thing to note is that our opportunities are created in `Closed/Won` status [from the beginning](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/create_opportunity_objects_service.rb#L98),  which doesn't allow us to find them in a subsequent retry because we expect to find an opportunity object with the same data (account_id, amount, type) **that is not Closed** in this [query](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/create_opportunity_service.rb#L60-62). \n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\n:pushpin: We should be able to retry the job **only** when the opportunity creation fails. \n\nIntroduce a new `Salesforce::OpportunityContactRoleNotCreated` error and raise it if  [`Salesforce::CreateOpportunityService#create_opportunity_contact_role`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/create_opportunity_service.rb#L134) fails. With this we can surface the actual object causing the error and have better visibility on the causes. Then, the error could be [rescued in `Salesforce::CreateOpportunityObjectsService`](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/9ab555ef21be6742f2e58706db7037ee6e8dee52/app/services/salesforce/create_opportunity_objects_service.rb#L63) and given it is not `Salesforce::OpportunityNotCreated`, no retry should happen. \n\n:pushpin: Other things to explore\n\n- Could we create the opportunity in a non-closed stage so a retry we could find that opportunity and attempt to complete it? \n- Should we handle the `OpportunityContactRole` and `Contact` creation in a different service so the `CreateOpportunityService` only handles the creation of the opportunity?\n\n### Result\n\n### Next steps (if any)\n\n### How will we measure success?\n\nWe'll have less reports","state":"closed","created_at":"2022-03-23T23:26:20.908Z","updated_at":"2022-04-08T04:17:33.078Z","closed_at":"2022-04-08T04:17:33.069Z","closed_by":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"labels":["[deprecated] Category:Provision","devops::fulfillment","group::provision","section::fulfillment","workflow::production"],"milestone":null,"assignees":[{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"}],"author":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"type":"ISSUE","assignee":{"id":4717243,"username":"a_luna","name":"Amparo Luna","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4717243/avatar.png","web_url":"https://gitlab.com/a_luna"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4116","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4116","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4116/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4116/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4116","relative":"#4116","full":"gitlab-org/customers-gitlab-com#4116"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":105122001,"iid":4110,"project_id":2670515,"title":"Revise unified license voucher mailer","description":"## Ask\nUpdate the [unified license voucher email](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/mailers/unified_license_voucher_mailer.rb) templates to match the designs outlined in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4388.","state":"closed","created_at":"2022-03-19T07:07:47.029Z","updated_at":"2023-01-18T19:44:44.481Z","closed_at":"2023-01-18T19:44:44.463Z","closed_by":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"labels":["Customers Portal Pajamas Update","UX","[deprecated] Category:Provision","devops::fulfillment","frontend","group::provision","priority::4","section::fulfillment","type::feature"],"milestone":null,"assignees":[],"author":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"type":"ISSUE","assignee":null,"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4110","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4110","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4110/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4110/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4110","relative":"#4110","full":"gitlab-org/customers-gitlab-com#4110"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9439,"epic":{"id":676516,"iid":9439,"title":"Apply new template to Provision emails \u0026 deprecate old mailer","url":"/groups/gitlab-org/-/epics/9439","group_id":9970,"human_readable_end_date":"Apr 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":105103789,"iid":4100,"project_id":2670515,"title":"Create new feature flag for Community Program Renewals","description":"Currently we use `community_program_coupons` for both new purchase and renewal flows for community program subscription.\n\nWith new flow going live on March 21st, we should create a new feature flag so we can make these 2 features go live independently.\n\nWe could create a flag called something like `community_program_renewals` for renewals flow.\n\n[Feature flags](https://docs.gitlab.com/ee/operations/feature_flags.html)\n\nWe should also update the renewal routes to [check](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/controllers/subscriptions/community_program_controller.rb#L5) for this new feature flag instead. We should make sure we check for `community_program_coupons` for new flow as it is now.","state":"closed","created_at":"2022-03-18T19:29:35.028Z","updated_at":"2022-09-02T17:07:02.061Z","closed_at":"2022-03-23T22:35:42.121Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","backend","devops::fulfillment","frontend","group::purchase","section::fulfillment","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4100","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4100","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4100/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4100/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4100","relative":"#4100","full":"gitlab-org/customers-gitlab-com#4100"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5711,"epic":{"id":244557,"iid":5711,"title":"[Community Programs] Renewals","url":"/groups/gitlab-org/-/epics/5711","group_id":9970,"human_readable_end_date":"Nov 4, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104644978,"iid":4083,"project_id":2670515,"title":"Customizations to SFDC services for E-Disty","description":"### Background\n\nProvide the ability for GitLab authorized resellers to leverage Distribution e-marketplaces (like Arrowsphere) to purchase GitLab subscriptions in order to accelerate channel business and enable low/no touch orders.\n\nThis will be accomplished by building an automated end-to-end solution where a partner can purchase GitLab from our authorized distributors using an e-marketplace and receive the product “immediately” after submitting their order. In doing so, ensure data is captured and tracked accurately through all relevant GitLab systems/applications (Salesforce, Zuora, CustomersDot, Stripe, etc.).\n\nIssues in this epic are focused on building the new API endpoint to support:\n- Customer creation\n- Zuora Subscription creation\n- Creation of SFDC Account, Opportunity, etc\n- License provisioning\n\nReferences:\n- [E-Disty: Data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0)\n- [Disty E-Marketplace: Field Mapping by Ent Apps](https://docs.google.com/spreadsheets/d/1Ay6uhAcOhnuhh8-RGjYKkq_ytSUWOV-c5wqdhgQWaR8/edit#gid=0)\n\n### Proposal\n\nIn https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4079+, a new service was created that will create a customer (via `FindOrCreateCustomerService`) and a Zuora subscription (via `SubscriptionManagerService`).  These services must be customized to create these objects as desired for the E-Disty workflow.  For context, the `SubscriptionManagerService` is responsible for creating the SFDC account and other related objects [here](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/49d0aeae5ed9b8066078bc8ab2ae31fd629eefcf/app/services/subscription_manager_service.rb#L67) by using the `Salesforce::CreateAccountWorker`.\n\nIn this issue, the `Salesforce::CreateAccountWorker` and related classes, may need to be modified to support creating a customer from an E-Disty marketplace (Arrowsphere) order.  The existing classes were built with the web-direct scenario in mind, but these may need to be extended to support E-Disty marketplace.  \n\nWe are still working on the data mapping between Platypus payload and SFDC so the details of the changes to these classes isn't known just yet.  This mapping will be added to [the data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0).\n\n## Field Changes\n### Update (Logic Changes)\n| Object      | Field Name  | API Name        | Field Type     | Web Direct Value    | Disty Value |\n| ----------- | ----------- | --------------- | ------------- | ----- |----|\n| Opportunity |  [Opportunity Name](https://gitlab.lightning.force.com/lightning/setup/ObjectManager/Opportunity/FieldsAndRelationships/Name/view)    | Name      | Text | \"{customer.company} - Web Direct\" | \"{customer.company} - Channel Marketplace\" |\n| Opportunity |  [Web Portal Purchase ](https://gitlab.lightning.force.com/lightning/setup/ObjectManager/Opportunity/FieldsAndRelationships/00N6100000HJmTK/view)     |  Web_Portal_Purchase__c      | Checkbox | TRUE | FALSE |\n| Opportunity | [Initial Source](https://gitlab.lightning.force.com/lightning/setup/ObjectManager/Opportunity/FieldsAndRelationships/LeadSource/view)  | LeadSource  | Picklist | \"Web Direct\" | \"Channel Marketplace\" |\n| Contact    | [Initial Source](https://gitlab.lightning.force.com/lightning/setup/ObjectManager/Contact/FieldsAndRelationships/LeadSource/view) | LeadSource  | Picklist |  \"Web Direct\" | \"Channel Marketplace\" |\n\n### Add (Net New Fields)\n| Object      | Field Name  | API Name        | Field Type     | Value    |\n| ----------- | ----------- | --------------- | ------------- | ----- |\n| zqu__Quote__c | [Resale Partner](https://gitlab.lightning.force.com/lightning/setup/ObjectManager/zqu__Quote__c/FieldsAndRelationships/00N4M00000IbAzf/view) | Fulfillment_Partner__c | Lookup(Account) | ['tradingPartnerId'] |\n| zqu__Quote__c | [Distributor](https://gitlab.lightning.force.com/lightning/setup/ObjectManager/01I61000001QLnw/FieldsAndRelationships/00N4M00000Ib2eI/view) | Distributor__c |  Lookup(Account) | `a0u4M000006IZCl` |\n| Opportunity |  | Fulfillment_Partner__c | Lookup(Account) | ['tradingPartnerId'] |\n| Opportunity |  | Fulfillment_Distributor__c |  Lookup(Account) | `a0u4M000006IZCl` |\n\n**Update**: per [this comment](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4083#note_1009463714) we need 4 fields:\n\n```\nOpportunity.Fulfillment_Partner__c = zqu__Quote__c.Fulfillment_Partner__c;\nOpportunity.Fulfillment_Distributor__c = zqu__Quote__c.Distributor__c;\n```\n\n\n\u003cdetails\u003e\u003csummary\u003eDetails\u003c/summary\u003e\n\n##### Update (i.e. adjust current integration)\n- [`Contact.leadsource`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/6ab621a3b33a3e6a6524aaf4c40a7df666561399/app/services/create_salesforce_account_service.rb#L75): Needs to be set as `\"Channel Marketplace\"`.  This is hardcoded as `\"Web Direct\"` currently.\n- [`Opportunity.LeadSource`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/67dde2e92dae40c539fe25c8e99f4c0fc96c4a2e/app/services/salesforce/create_opportunity_service.rb#L106): Needs to be set as `\"Channel Marketplace\"`.  This is hardcoded as `\"Web Direct\"` currently.\n- [`Opportunity.Name`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/e4d71682774ce95d9c565c4dd56f5f28ff2fd002/app/services/salesforce/create_opportunity_objects_service.rb#L97): Needs to be updated to `\"#{customer.company} - Channel Marketplace\"`. \n- `Opportunity.Web_Portal_Purchase__c` ([reference 1](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/67dde2e92dae40c539fe25c8e99f4c0fc96c4a2e/app/services/salesforce/create_opportunity_service.rb#L107) and [reference 2](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/869764e69d2e69119afa811632b7cbe81eb20027/app/services/salesforce/close_opportunity_service.rb#L52)): These references should likely be updated to set the value as `false` for the E-Disty context. \n\n\n##### Add (i.e. does not exist in current integration)\n- `Opportunity.Fulfillment_Partner__c` and `zqu__Quote__c.Fulfillment_Partner__c`: These fields are not currently set for web direct, but is requested for E-Disty.  The value should be set as SFDC ID of the Reseller ($['tradingPartnerId'] in data mapping sheet.\n- `Opportunity.Fulfillment_Distributor__c` and `zqu__Quote__c.Distributor__c`: These fields are not currently set for web direct, but is requested for E-Disty.  The value should be set as `~~a0u4M000006IZCl~~` which is the SFDC ID of the relevant Arrow account, who will be the distributor for all orders.\n   - **2022.07.04 Update**: The \"standard Account\" should be used and not the Billing Account. So the value for `fulfillmentDistributor` should be `0014M00001pePen` for both Staging and Production\n\n\u003c/details\u003e","state":"closed","created_at":"2022-03-11T21:47:52.873Z","updated_at":"2023-02-16T22:28:23.054Z","closed_at":"2022-06-30T04:05:18.106Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","eDisty","group::fulfillment platform","section::fulfillment","type::feature","workflow::in review"],"milestone":{"id":2453024,"iid":74,"group_id":9970,"title":"15.2","description":"","state":"active","created_at":"2022-02-03T22:24:46.818Z","updated_at":"2022-02-03T22:26:32.010Z","due_date":"2022-07-17","start_date":"2022-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/74"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":17,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4083","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4083","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4083/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4083/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4083","relative":"#4083","full":"gitlab-org/customers-gitlab-com#4083"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104644682,"iid":4082,"project_id":2670515,"title":"Customizations to FindOrCreateCustomerService for E-Disty","description":"### Background\n\nProvide the ability for GitLab authorized resellers to leverage Distribution e-marketplaces (like Arrowsphere) to purchase GitLab subscriptions in order to accelerate channel business and enable low/no touch orders.\n\nThis will be accomplished by building an automated end-to-end solution where a partner can purchase GitLab from our authorized distributors using an e-marketplace and receive the product “immediately” after submitting their order. In doing so, ensure data is captured and tracked accurately through all relevant GitLab systems/applications (Salesforce, Zuora, CustomersDot, Stripe, etc.).\n\nIssues in this epic are focused on building the new API endpoint to support:\n- Customer creation\n- Zuora Subscription creation\n- Creation of SFDC Account, Opportunity, etc\n- License provisioning\n\nReferences:\n- [E-Disty: Data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0)\n\n### Proposal\n\nIn https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4079+, a new service was created that will create a customer (via `FindOrCreateCustomerService`) and a Zuora subscription (via `SubscriptionManagerService`).  These services must be customized to create these objects as desired for the E-Disty workflow.\n\nIn this issue, the `FindOrCreateCustomerService`, may need to be modified to support creating a customer from an E-Disty marketplace (Arrowsphere) order.  The existing classes were built with only the web-direct scenario in mind, but these will need to be extended to support E-Disty marketplace.  \n\nFor example, we know that customers created through this workflow do not need login access to CustomersDot and should not receive a welcome email.  This service created in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4079 should be able to call the `FindOrCreateCustomerService` such that it creates a customer with customer where `login_activated` and `billable` attributes are false.\n\nReference [the data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0) to see the full list of fields from Platypus and how they should map to the Customer Model in CDot.","state":"closed","created_at":"2022-03-11T21:34:49.572Z","updated_at":"2023-02-06T19:17:39.554Z","closed_at":"2022-05-03T13:55:21.521Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","eDisty","group::fulfillment platform","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4082","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4082","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4082/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4082/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4082","relative":"#4082","full":"gitlab-org/customers-gitlab-com#4082"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104644317,"iid":4081,"project_id":2670515,"title":"Customizations to SubscriptionManagerService for E-Disty","description":"### Background\n\nProvide the ability for GitLab authorized resellers to leverage Distribution e-marketplaces (like Arrowsphere) to purchase GitLab subscriptions in order to accelerate channel business and enable low/no touch orders.\n\nThis will be accomplished by building an automated end-to-end solution where a partner can purchase GitLab from our authorized distributors using an e-marketplace and receive the product “immediately” after submitting their order. In doing so, ensure data is captured and tracked accurately through all relevant GitLab systems/applications (Salesforce, Zuora, CustomersDot, Stripe, etc.).\n\nIssues in this epic are focused on building the new API endpoint to support:\n- Customer creation\n- Zuora Subscription creation\n- Creation of SFDC Account, Opportunity, etc\n- License provisioning\n\nReferences:\n- [E-Disty: Data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0)\n\n### Proposal\n\nIn https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4079+, a new service was created that will create a customer (via `FindOrCreateCustomerService`) and a Zuora subscription (via `SubscriptionManagerService`).  These services must be customized to create these objects as desired for the E-Disty workflow.\n\nIn this issue, the `SubscriptionManagerService`, and related classes, will need to be modified to support creating a subscription from an E-Disty marketplace (Arrowsphere) order.  The existing classes were built with only the web-direct scenario in mind, but these will need to be extended to support E-Disty marketplace.  For example, the `SubscribeService` uses some constants that only apply to web-direct use cases like [`TERM_DURATION_IN_MONTHS`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/dd52c9e8d03de2d44cdf87725d3c7564f98c8625/app/services/subscribe_service.rb#L8) and [`DEFAULT_BILLING_BATCH`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/dd52c9e8d03de2d44cdf87725d3c7564f98c8625/app/services/subscribe_service.rb#L10).\n\nHere are some of the other areas that will need to be modified:\n  - External Order Source\n  - External Order Id\n  - Payment Term\n  - Billing Batch\n  - Subscribe Options -\u003e Process Payments\n  - Payment Method Id (not needed)\n  - Subscription Custom Fields (Super Sonics fields)\n  - Invoice Owner Id\n\nReference the [data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0) to ensure we capture all the required customizations.","state":"closed","created_at":"2022-03-11T21:24:13.960Z","updated_at":"2023-02-06T19:17:39.602Z","closed_at":"2022-06-16T10:59:04.205Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","eDisty","group::fulfillment platform","section::fulfillment","type::feature","workflow::in review"],"milestone":{"id":2453022,"iid":73,"group_id":9970,"title":"15.1","description":"","state":"active","created_at":"2022-02-03T22:23:29.335Z","updated_at":"2022-02-03T22:23:29.335Z","due_date":"2022-06-17","start_date":"2022-05-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/73"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":15,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4081","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4081","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4081/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4081/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4081","relative":"#4081","full":"gitlab-org/customers-gitlab-com#4081"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104643653,"iid":4080,"project_id":2670515,"title":"Incorporate customer/subscription service into new API controller","description":"### Background\n\nProvide the ability for GitLab authorized resellers to leverage Distribution e-marketplaces (like Arrowsphere) to purchase GitLab subscriptions in order to accelerate channel business and enable low/no touch orders.\n\nThis will be accomplished by building an automated end-to-end solution where a partner can purchase GitLab from our authorized distributors using an e-marketplace and receive the product “immediately” after submitting their order. In doing so, ensure data is captured and tracked accurately through all relevant GitLab systems/applications (Salesforce, Zuora, CustomersDot, Stripe, etc.).\n\nIssues in this epic are focused on building the new API endpoint to support:\n- Customer creation\n- Zuora Subscription creation\n- Creation of SFDC Account, Opportunity, etc\n- License provisioning\n\nReferences:\n- [E-Disty: Data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0)\n\n### Proposal\n\nCall the service that creates the customer and subscription (introduced in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4079) from the new marketplace subscription create API endpoint (introduced in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4078).  ~~This will likely involve transforming the request params in the action into the form that the service expects. Reference the data mapping spreadsheet to determine how parameters map to the CustomersDot data model and Zuora Subscribe API request.~~\n\nWe should confirm with Ent Apps what kind of response code and body are expected for both success and error.","state":"closed","created_at":"2022-03-11T20:59:31.186Z","updated_at":"2023-02-06T19:17:39.508Z","closed_at":"2022-05-09T05:13:38.885Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["backend","devops::fulfillment","eDisty","section::fulfillment","type::feature","workflow::in review"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4080","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4080","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4080/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4080/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4080","relative":"#4080","full":"gitlab-org/customers-gitlab-com#4080"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104640289,"iid":4079,"project_id":2670515,"title":"Build service to invoke other services (create customer, subscription, and salesforce objects)","description":"### Background\n\nProvide the ability for GitLab authorized resellers to leverage Distribution e-marketplaces (like Arrowsphere) to purchase GitLab subscriptions in order to accelerate channel business and enable low/no touch orders.\n\nThis will be accomplished by building an automated end-to-end solution where a partner can purchase GitLab from our authorized distributors using an e-marketplace and receive the product “immediately” after submitting their order. In doing so, ensure data is captured and tracked accurately through all relevant GitLab systems/applications (Salesforce, Zuora, CustomersDot, Stripe, etc.).\n\nIssues in this epic are focused on building the new API endpoint to support:\n- Customer creation\n- Zuora Subscription creation\n- Creation of SFDC Account, Opportunity, etc\n- License provisioning\n\nReferences:\n- [E-Disty: Data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0)\n\n### Proposal\n\nBuild a new service that is responsible for:\n- Creating a customer record, likely utilizing [the existing `FindOrCreateCustomerService`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/0abb2c47962048af373ccec20cdf74b55252dce4/app/services/find_or_create_customer_service.rb#L3)\n- Calling [the `SubscriptionManagerService`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/49d0aeae5ed9b8066078bc8ab2ae31fd629eefcf/app/services/subscription_manager_service.rb#L3) to create the Zuora subscription and SFDC objects\n\nThis issue can focus on a simple approach where the service accepts a quantity, plan_id, and other parameters that are already supported by the underlying Customer and Subscription services.  This issue should not cover the customizations which will be necessary for the full E-Disty workflow.  We can look at [the `SubscriptionsController#create` action](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/343aa1c9ae880946b2aff53ed8c3a71628d0318a/app/controllers/subscriptions_controller.rb#L80) for examples of the parameters that can be passed to the `SubscriptionManagerService` currently.  We should consider wrapping the elements of this new service into a transaction so that transactions can be atomic.\n\nThis service will eventually be called from the new API endpoint introduced in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4078+.","state":"closed","created_at":"2022-03-11T19:51:49.095Z","updated_at":"2023-02-06T19:17:39.450Z","closed_at":"2022-05-09T05:11:53.631Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["backend","devops::fulfillment","eDisty","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4079","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4079","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4079/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4079/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4079","relative":"#4079","full":"gitlab-org/customers-gitlab-com#4079"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104639445,"iid":4078,"project_id":2670515,"title":"Build marketplace subscription creation API skeleton","description":"### Background\n\nProvide the ability for GitLab authorized resellers to leverage Distribution e-marketplaces (like Arrowsphere) to purchase GitLab subscriptions in order to accelerate channel business and enable low/no touch orders.\n\nThis will be accomplished by building an automated end-to-end solution where a partner can purchase GitLab from our authorized distributors using an e-marketplace and receive the product “immediately” after submitting their order. In doing so, ensure data is captured and tracked accurately through all relevant GitLab systems/applications (Salesforce, Zuora, CustomersDot, Stripe, etc.).\n\nIssues in this epic are focused on building the new API endpoint to support:\n- Customer creation\n- Zuora Subscription creation\n- Creation of SFDC Account, Opportunity, etc\n- License provisioning\n\nReferences:\n- [E-Disty: Data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0)\n\n### Proposal\n\nBuild the skeleton for the new, RESTful API endpoint that will eventually support creation of objects mentioned above.  This endpoint will be used by distribution e-marketplaces, the first example being Arrowsphere.  \n\nWe could build this new endpoint similar to existing controllers that use admin token authentication like [`Api::V1::LicensesController`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/11fe580936f339405a14254ea1fd4131f3fb6561/app/controllers/api/v1/licenses_controller.rb#L6) and [`Api::CustomersController`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/114b87e77e1529f7f6d25bea4b72096463e57f96/app/controllers/api/customers_controller.rb#L5).  Since this endpoint is intended to be consumed by e-marketplaces via Platypus, the controller could be named something like `Api::V1::Marketplace::SubscriptionsController` or `Api::V1::Platypus::SubscriptionsController`?\n\nFor this issue, we can focus on permitting the request params and returning an empty, successful response.","state":"closed","created_at":"2022-03-11T19:31:36.259Z","updated_at":"2023-02-06T19:17:39.394Z","closed_at":"2022-05-03T13:57:58.757Z","closed_by":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"labels":["backend","devops::fulfillment","eDisty","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4098809,"username":"qzhaogitlab","name":"Qingyu Zhao","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4098809/avatar.png","web_url":"https://gitlab.com/qzhaogitlab"},"user_notes_count":1,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4078","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4078","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4078/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4078/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4078","relative":"#4078","full":"gitlab-org/customers-gitlab-com#4078"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104573412,"iid":4075,"project_id":2670515,"title":"Account in Orders Callout is the Invoice owner instead of the Subscription Owner","description":"### Problem\n\nAs [reported in the Orders UAT Issue](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/intake/-/issues/554#note_867674777), a change was discovered in Zuora callout behavior when the Invoice Owner of a Subscription is different from the Subscription Owner.  Orders callouts are triggered from `Subscription.InvoiceOwnerId` rather than `Subscription.AccountId` as is today’s current state with the Subscribe/Amend API.  A [Zuora support ticket](https://support.zuora.com/hc/en-us/requests/346080) has been opened to understand if there are any solutions that Zuora can provide.\n\nZuora is looking into adding an additional callout parameter so that both InvoiceOwnerId and AccountId are included in Orders callouts but we don't know an ETA on that at this point.  In the meantime, we should explore other solutions on our side. UPDATE: Zuora has responded that this behavior is the desired behavior and don't intend to change it in this case.  We will need to update our callout code to accommodate this new behavior.\n\n/cc @gitlab-com/business-technology/enterprise-apps/zuora-architects\n\n### Proposal\n\nWe understand that this behavior affects Orders callouts only.\n\nThis could be solved by adjusting [the `OrderProcessedWorker`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/f9743a3e2eb5fbfe183daa15c76406dc28fbc23d/app/workers/zuora_callout/order_processed_worker.rb) to pull the actual `account_id` directly from the Zuora Subscription instead of relying on the params from the callout body.  There is already a natural spot for this operation in the worker, before the worker enqueues the `ZuoraCallbackWorker` for each subscription in the Order in [the `process_order_subscription` method](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/f9743a3e2eb5fbfe183daa15c76406dc28fbc23d/app/workers/zuora_callout/order_processed_worker.rb#L67). This method already [prepares the worker attributes](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/f9743a3e2eb5fbfe183daa15c76406dc28fbc23d/app/workers/zuora_callout/order_processed_worker.rb#L71) by including the `subscription_id`, `subscription_status`, and `amendment_types`.  This logic could be updated to also set the `account_id` using `zuora_subscription.account_id`.  This would ensure the correct account is passed to the worker that processes the subscription.\n\n_Note:_ We should check if any other attributes are negatively affected by this behavior change (e.g. `account_name`).\n\n### Availability \u0026 Testing\n\n\u003c!-- This section needs to be retained and filled in during the workflow planning breakdown phase of this feature proposal, if not earlier.\n\nWhat risks does this change pose to our availability? How might it affect the quality of the product? What additional test coverage or changes to tests will be needed? Will it require cross-browser testing?\n\nPlease list the test areas (unit, integration and end-to-end) that needs to be added or updated to ensure that this feature will work as intended. Please use the list below as guidance.\n* Unit test changes\n* Integration test changes\n* End-to-end test change\n\nSee the test engineering planning process and reach out to your counterpart Software Engineer in Test for assistance: https://about.gitlab.com/handbook/engineering/quality/test-engineering/#test-planning --\u003e\n\nTo account for this logic change, associated tests should also be updated.  If there are no tests, we should expect that an integration test between CustomersDot and Zuora exists to ensure that these fields remain in sync.","state":"closed","created_at":"2022-03-10T19:47:23.893Z","updated_at":"2022-10-10T13:43:26.408Z","closed_at":"2022-04-04T16:20:04.977Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["Zuora Orders Harmonization","[deprecated] Category:Provision","backend","devops::fulfillment","group::provision","quad-planning::complete-action","section::fulfillment","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":34,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4075","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4075","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4075/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4075/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4075","relative":"#4075","full":"gitlab-org/customers-gitlab-com#4075"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6641,"epic":{"id":336961,"iid":6641,"title":"[License Group] Order Harmonization","url":"/groups/gitlab-org/-/epics/6641","group_id":9970,"human_readable_end_date":"Nov 17, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104504736,"iid":4070,"project_id":2670515,"title":"Zuora Configuration for Arrowsphere orders","description":"### Summary\n\nThis issue will capture the configuration changes required to support Arrow orders. Once approved, the changes will be done by EntApps team.\n\n### Proposed changes\n\n\u003e [Distributor e-Marketplace: FinSys Requests](https://gitlab.com/groups/gitlab-com/business-technology/enterprise-apps/financeops/-/epics/16) epic\n\n- [x] Create custom fields on Zuora Subscription to track Arrow order ([FinSys issue](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/628#note_911837751))\n   - [x] ~~`External Order Source`~~\n   - [x] ~~`External Order Id`~~\n   - [x] `External Subscription Source`\n   - [x] `External Subscription Id`\n- [x] Create `Net 30 EOM` Payment Term ([FinSys Issue](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/675))\n- [x] New Billing Batch + Automated Bill Run for Arrowsphere Orders ([FinSys Issue](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/676))\n- [x] Create new Arrow invoice template ([FinSys issue](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/774))\n- [x] Send Arrow invoices in bulk ([FinSys issue](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/777))\n- [ ] New Arrow communication profile ([FinSys issue](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/783))","state":"closed","created_at":"2022-03-09T19:40:11.454Z","updated_at":"2023-02-06T19:17:39.279Z","closed_at":"2022-10-11T20:24:10.329Z","closed_by":{"id":8110789,"username":"tgolubeva","name":"Tatyana Golubeva","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/8110789/avatar.png","web_url":"https://gitlab.com/tgolubeva"},"labels":["devops::fulfillment","feature::addition","missed:15.4","section::fulfillment","type::feature","workflow::in dev"],"milestone":{"id":2453027,"iid":77,"group_id":9970,"title":"15.5","description":"","state":"active","created_at":"2022-02-03T22:29:56.909Z","updated_at":"2022-02-03T22:29:56.909Z","due_date":"2022-10-17","start_date":"2022-09-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/77"},"assignees":[{"id":5214642,"username":"broncato","name":"Barbara Roncato","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/5214642/avatar.png","web_url":"https://gitlab.com/broncato"},{"id":8864576,"username":"jesssalcido","name":"Jessica Salcido","state":"active","avatar_url":"https://secure.gravatar.com/avatar/81ad1945ef65f18ac03916e4124b37ae?s=80\u0026d=identicon","web_url":"https://gitlab.com/jesssalcido"}],"author":{"id":8110789,"username":"tgolubeva","name":"Tatyana Golubeva","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/8110789/avatar.png","web_url":"https://gitlab.com/tgolubeva"},"type":"ISSUE","assignee":{"id":5214642,"username":"broncato","name":"Barbara Roncato","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/5214642/avatar.png","web_url":"https://gitlab.com/broncato"},"user_notes_count":19,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4070","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":10,"completed_count":9},"weight":0,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4070","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4070/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4070/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4070","relative":"#4070","full":"gitlab-org/customers-gitlab-com#4070"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":104362015,"iid":4066,"project_id":2670515,"title":"Move user count logic from haml template to helper","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n### Current Status\nCode was moved to a [presenter](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/5840), but introduced a [bug with Renewals](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/5245). Before merging the [follow up MR](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/6015) that un-reverts [the initial MR](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/5840), we need solid reproduction steps of the [500 bug](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/5245) to validate that the bug is not reintroduced.\n\n### Previous Description\n\u003e #### Problem\n\u003e As suggested in this [comment](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4372#note_865226482), it would be a good idea to move the logic block in `subscriptions/community_program/renew_subscription.html.haml` into a helper. With this we would get the additional advantage of being tested. The same helper could be used for `subscriptions/renew.html.haml`(https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/views/subscriptions/renew.html.haml#L1-17) too as it has similar logic.\n\u003e  \n\u003e #### Proposal\n\u003e Move the logic block as suggested in this [comment](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4372#note_865226482) in `subscriptions/community_program/renew_subscription.html.haml` to a helper. Use this helper for `subscriptions/renew.html.haml`(https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/views/subscriptions/renew.html.haml#L1-17) too as it has similar logic.\n\u003e \n\u003e \u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\u003e \n\u003e ### Result\n\u003e \n\u003e ### Next steps (if any)\n\u003e - Create helper.\n\u003e - Use helper in `subscriptions/community_program/renew_subscription.html.haml` and `subscriptions/renew.html.haml`(https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/main/app/views/subscriptions/renew.html.haml#L1-17).\n\u003e - Add relevant tests. \n\n### How will we measure success?\nUsers are able to successfully renew subscriptions","state":"closed","created_at":"2022-03-08T07:42:06.861Z","updated_at":"2022-12-21T13:34:35.774Z","closed_at":"2022-12-21T13:34:35.748Z","closed_by":{"id":9299375,"username":"dzubova","name":"Diana Zubova","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9299375/avatar.png","web_url":"https://gitlab.com/dzubova"},"labels":["Category:Subscription Management","Track Health Status [DEPRECATED]","backend","devops::fulfillment","frontend","group::billing and subscription management","maintenance::refactor","missed:15.1","missed:15.6","missed:15.7","section::fulfillment","type::maintenance","workflow::production"],"milestone":{"id":2745648,"iid":83,"group_id":9970,"title":"15.8","description":"","state":"active","created_at":"2022-08-22T16:57:34.875Z","updated_at":"2022-08-22T16:57:34.875Z","due_date":"2023-01-17","start_date":"2022-12-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/83"},"assignees":[{"id":9299375,"username":"dzubova","name":"Diana Zubova","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9299375/avatar.png","web_url":"https://gitlab.com/dzubova"},{"id":10770603,"username":"lmeckley","name":"Laura Meckley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10770603/avatar.png","web_url":"https://gitlab.com/lmeckley"}],"author":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"type":"ISSUE","assignee":{"id":9299375,"username":"dzubova","name":"Diana Zubova","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/9299375/avatar.png","web_url":"https://gitlab.com/dzubova"},"user_notes_count":22,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4066","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4066","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4066/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4066/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4066","relative":"#4066","full":"gitlab-org/customers-gitlab-com#4066"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":8646,"epic":{"id":590951,"iid":8646,"title":"[Community Programs] Renewals (follow-ups)","url":"/groups/gitlab-org/-/epics/8646","group_id":9970,"human_readable_end_date":"Mar 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":"on_track"},{"id":104335264,"iid":4064,"project_id":2670515,"title":"Extend vue wrapper to have findByTestId helper","description":"Currently to be able to find an element using `data-testid` for assertions, we declare `findByTestId` helper in each spec file and use it in tests.\n\nCreated as a [follow up](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4414#note_864946955)\n\n**Proposal**\n\nWe can extend the wrapper to have `findByTestId` similar to how we do it in [`gitlab`](https://gitlab.com/gitlab-org/gitlab/-/blob/master/spec/frontend/__helpers__/vue_test_utils_helper.js), make `shallowMountExtended` and `mountExtended` helpers that use the `extendedWrapper`. We can then replace all `findByTestId` declarations with `shallowMountExtended` or `mountExtended` or just `extendedWrapper` in spec files","state":"closed","created_at":"2022-03-07T20:59:51.935Z","updated_at":"2023-05-01T13:15:17.255Z","closed_at":"2022-07-20T01:36:21.155Z","closed_by":{"id":10769415,"username":"minahilnichols","name":"Minahil Nichols","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10769415/avatar.png","web_url":"https://gitlab.com/minahilnichols"},"labels":["[deprecated] Category:Billing and Subscription Management","devops::fulfillment","frontend","group::billing and subscription management","maintenance::refactor","missed:15.2","onboarding","section::fulfillment","type::maintenance","workflow::in dev"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[{"id":10769415,"username":"minahilnichols","name":"Minahil Nichols","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10769415/avatar.png","web_url":"https://gitlab.com/minahilnichols"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10769415,"username":"minahilnichols","name":"Minahil Nichols","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10769415/avatar.png","web_url":"https://gitlab.com/minahilnichols"},"user_notes_count":11,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4064","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4064","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4064/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4064/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4064","relative":"#4064","full":"gitlab-org/customers-gitlab-com#4064"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":104266812,"iid":4061,"project_id":2670515,"title":"Add presence validation for activated_at in SelfManagedInstanceActivation","description":"### Problem\n\nIn https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4418#note_862077160, a discussion about the possibility of the `activated_at` timestamp for `SelfManagedInstanceActivation` being `nil`. Looking at the current code, the value will always be present (code when [creating](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/dded5fcb0654a9af94b78c3153b4acadb1e5e60d/app/services/cloud_activations/activate_service.rb#L43) and [updating](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/dded5fcb0654a9af94b78c3153b4acadb1e5e60d/app/services/cloud_activations/activate_service.rb#L19) the `SelfManagedInstanceActivation`). Despite of that, in https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4418#note_863466271, the suggestion was made to add a presence validation for `activated_at`.\n\n### Proposal\n\nAdd a presence validation for `activated_at` in the `SelfManagedInstanceActivation` model to ensure the field always has a value.\n\n### Result\n\nAdditional safety to ensure the field will always have a value.\n\n### Availability \u0026 Testing\n\n\u003c!-- This section needs to be retained and filled in during the workflow planning breakdown phase of this feature proposal, if not earlier.\n\nWhat risks does this change pose to our availability? How might it affect the quality of the product? What additional test coverage or changes to tests will be needed? Will it require cross-browser testing?\n\nPlease list the test areas (unit, integration and end-to-end) that needs to be added or updated to ensure that this feature will work as intended. Please use the list below as guidance.\n* Unit test changes\n* Integration test changes\n* End-to-end test change\n\nSee the test engineering planning process and reach out to your counterpart Software Engineer in Test for assistance: https://about.gitlab.com/handbook/engineering/quality/test-engineering/#test-planning --\u003e\n\nAssociated with this change, should be a model spec update of `self_managed_instance_activation_spec.rb` to accommodate the new presence validation.  (`it { is_expected.to validate_presence_of(:activated_at) }`)","state":"closed","created_at":"2022-03-07T08:21:12.659Z","updated_at":"2022-05-03T12:22:39.708Z","closed_at":"2022-05-03T12:22:39.692Z","closed_by":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","feature::addition","group::provision","quad-planning::complete-action","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"}],"author":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"type":"ISSUE","assignee":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"user_notes_count":15,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4061","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4061","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4061/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4061/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4061","relative":"#4061","full":"gitlab-org/customers-gitlab-com#4061"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":104265783,"iid":4060,"project_id":2670515,"title":"Spike: Evaluate clearer error messages when activating cloud license","description":"### Problem\n\nErrors occurring during activation of a cloud license are not clear enough what the reason for the error is. In https://gitlab.com/gitlab-org/gitlab/-/issues/346461, a misleading message about a connectivity error showed up when trying to activate a cancelled subscription. The error was actually a no method error when the license was built (via the [SeatLinkCreateService](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/7d14b53ed8df3fe8f996a992ca3e060f0bc8b430/app/services/seat_link_create_service.rb#L181)) because the subscription couldn't be found. With the fix for this, the new error message will be the general \"an error occurred while activating your subscription\" error.\n\n### Proposal\n\nWhile [discussing](https://gitlab.com/gitlab-org/gitlab/-/issues/346461#note_863397425) the fix for the mentioned error with Support, it came up to improve the error reporting when activating a cloud license. Hence, this spike issue to take a closer look into how that might be possible. The errors will come from different code places (e.g. Zuora subscription, license creation, seat link creation, etc.) and have to be returned to the [ActivationService](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/dded5fcb0654a9af94b78c3153b4acadb1e5e60d/app/services/cloud_activations/activate_service.rb#L25-28) and its [graphql mutation](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/1b4516ee084d478c139cfd55bf3180ad9dc804dc/app/graphql/mutations/cloud_activations/activate.rb#L29).\n\n### Result\n\nA clearer error message on where something went wrong when activating a cloud license.\n\n### Availability \u0026 Testing\n\n\u003c!-- This section needs to be retained and filled in during the workflow planning breakdown phase of this feature proposal, if not earlier.\n\nWhat risks does this change pose to our availability? How might it affect the quality of the product? What additional test coverage or changes to tests will be needed? Will it require cross-browser testing?\n\nPlease list the test areas (unit, integration and end-to-end) that needs to be added or updated to ensure that this feature will work as intended. Please use the list below as guidance.\n* Unit test changes\n* Integration test changes\n* End-to-end test change\n\nSee the test engineering planning process and reach out to your counterpart Software Engineer in Test for assistance: https://about.gitlab.com/handbook/engineering/quality/test-engineering/#test-planning --\u003e\n\nTests should accompany this change to ensure that whatever error is received, is rendered properly on the frontend.","state":"closed","created_at":"2022-03-07T08:02:14.230Z","updated_at":"2022-05-20T10:55:03.422Z","closed_at":"2022-05-18T20:46:19.977Z","closed_by":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","feature::enhancement","group::provision","quad-planning::complete-action","section::fulfillment","type::feature","workflow::ready for development"],"milestone":null,"assignees":[],"author":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"type":"ISSUE","assignee":null,"user_notes_count":7,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4060","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4060","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4060/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4060/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4060","relative":"#4060","full":"gitlab-org/customers-gitlab-com#4060"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":104068457,"iid":4055,"project_id":2670515,"title":"Update outdated NPM packages to resolve outstanding vulnerabilities","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nCurrently, there are a number of long outstanding (300 days or greater) security issues that we need to resolve. Those issues outlined below require can resolved by updating NPM packages. These range from simple to potentially more complex like updating Webpack. \n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\n- [ ] Update the packages shown below either incrementally or in bulk as needed or convenient to mitigate the associated CVEs. \n\n| AGE\\_IN\\_DAYS | GROUP\\_NAME | STAGE       | URL                                                                                                                              | STATE | Notes                                       | Location | Package              |\n| ------------- | ----------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------- | ----- | ------------------------------------------- | -------- | -------------------- |\n| 300           | license     | fulfillment | [https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2989](https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2989) | MR submitted: gitlab-org/customers-gitlab-com!4460  | Backlog; Requies updating a dependency      | NPM      | dot-prop             |\n| 300           | license     | fulfillment | [https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2988](https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2988) | MR submitted: gitlab-org/customers-gitlab-com!4460  | Backlog; Requies updating a dependency      | NPM      | Elliptic             |\n| 300           | license     | fulfillment | [https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2983](https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2983) | MR submitted: gitlab-org/customers-gitlab-com!4460  | Backlog; Requies updating a dependency      | NPM      | websocket-extensions |\n| 300           | license     | fulfillment | [https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2984](https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2984) | MR submitted: gitlab-org/customers-gitlab-com!4460    | Backlog; Requies updating a dependency      | NPM      | serialize-javascript |\n| 300           | license     | fulfillment | [https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2990](https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2990) | [MR submitted](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4427) | Backlog; Requies updating a dependency      | NPM      | URI.js / urljs       |\n| 300           | license     | fulfillment | [https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2979](https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2979) | MR submitted: gitlab-org/customers-gitlab-com!4460 | Backlog; Requies updating a dependency      | NPM      | ini                  |\n| 300           | license     | fulfillment | [https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2980](https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2980) | MR submitted: gitlab-org/customers-gitlab-com!4460  | Backlog; Requies updating a dependency      | NPM      | y18n                 |\n| 300           | license     | fulfillment | [https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2985](https://gitlab.com/gitlab-org/customers-gitlab-com/issues/2985) | Open  | Backlog; Requies updating many dependencies | NPM      | kind-of              |\n\n### Result\n\nUpdated `yarn.lock`\n\n### Next steps (if any)\n\nAdvise if there is a way that we can autogenerate MRs for package updates regularly or some other sensible process change to stay ahead of the NPM wave. \n\n### How will we measure success?\n\nA `yarn audit` run will without reporting the following issues above. \n\n/cc @jeromezng @jameslopez @rhardarson","state":"closed","created_at":"2022-03-03T21:03:48.844Z","updated_at":"2022-05-16T23:31:35.363Z","closed_at":"2022-04-07T13:28:27.587Z","closed_by":{"id":5211906,"username":"csouthard","name":"Chase Southard","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5e2adecb9fa1d32cf007754824aa358f?s=80\u0026d=identicon","web_url":"https://gitlab.com/csouthard"},"labels":["devops::fulfillment","maintenance::refactor","section::fulfillment","workflow::verification"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":4961018,"username":"mlunoe","name":"Michael Lunøe","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4961018/avatar.png","web_url":"https://gitlab.com/mlunoe"},{"id":6348276,"username":"agulina","name":"Angelo Gulina","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b28693a558066993ea93b7272208d285?s=80\u0026d=identicon","web_url":"https://gitlab.com/agulina"}],"author":{"id":5211906,"username":"csouthard","name":"Chase Southard","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5e2adecb9fa1d32cf007754824aa358f?s=80\u0026d=identicon","web_url":"https://gitlab.com/csouthard"},"type":"ISSUE","assignee":{"id":4961018,"username":"mlunoe","name":"Michael Lunøe","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4961018/avatar.png","web_url":"https://gitlab.com/mlunoe"},"user_notes_count":14,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":"2022-03-17","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4055","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4055","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4055/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4055/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4055","relative":"#4055","full":"gitlab-org/customers-gitlab-com#4055"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":104035079,"iid":4050,"project_id":2670515,"title":"Provide missing LicenseDot API at CustomersDot","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\n[VersionsApp](https://gitlab.com/gitlab-services/version-gitlab-com) while processing received [ServicePing](https://docs.gitlab.com/ee/development/service_ping/) payload is reaching out to [LicenseDot](https://gitlab.com/gitlab-org/license-gitlab-com) in order to fetch details about reporting instance license. After deprecation of LicenseDot ServicePing reporting process start to raise errors https://sentry.gitlab.net/gitlab/versiongitlabcom/issues/3209409 This cause ServicePing payloads being recorded without linkage to zuora account, which limits their utility in business analysis. \n\nCorresponding issue on ~\"group::product intelligence\" tracker https://gitlab.com/gitlab-org/gitlab/-/issues/354025\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\n@cwiesner [suggested](https://gitlab.com/gitlab-org/gitlab/-/issues/354025#note_861527955) adding new API endpoint that would provide the missing features from LicenseDot [`LicenseController`](https://gitlab.com/gitlab-org/license-gitlab-com/-/blob/master/app/controllers/licenses_controller.rb)\n\nMissing features:\n- [x] Token authentication\n- [x] Fetching license by MD5 hash (LicenseDot was returning matching licenses collection, but only [first](https://gitlab.com/gitlab-services/version-gitlab-com/-/blob/master/app/services/license_app_service.rb#L43) was used at VersionsApp)\n- [x] Fetching license by id \n\n### Result\n\n- [x] Missing API is provided\n- [x] Auth token for VersionsApp is issued \n\n### Next steps (if any)\n\n### How will we measure success?\n\nCommunication between VersionsApp and CustomersDot is restored.\n\n### Availability \u0026 Testing\n\n\u003c!-- This section needs to be retained and filled in during the workflow planning breakdown phase of this feature proposal, if not earlier.\n\nWhat risks does this change pose to our availability? How might it affect the quality of the product? What additional test coverage or changes to tests will be needed? Will it require cross-browser testing?\n\nPlease list the test areas (unit, integration and end-to-end) that needs to be added or updated to ensure that this feature will work as intended. Please use the list below as guidance.\n* Unit test changes\n* Integration test changes\n* End-to-end test change\n\nSee the test engineering planning process and reach out to your counterpart Software Engineer in Test for assistance: https://about.gitlab.com/handbook/engineering/quality/test-engineering/#test-planning --\u003e\n\nIf any code is borrowed from LicenseDot, additionally bring in any associated tests.  Once brought in, we should also consider writing an integration test to ensure the connection between the two applications.","state":"closed","created_at":"2022-03-03T13:29:52.034Z","updated_at":"2022-04-07T07:21:39.855Z","closed_at":"2022-03-11T07:49:51.714Z","closed_by":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","group::provision","quad-planning::complete-action","section::fulfillment","workflow::production"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"}],"author":{"id":4807002,"username":"mikolaj_wawrzyniak","name":"Mikołaj Wawrzyniak","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4807002/avatar.png","web_url":"https://gitlab.com/mikolaj_wawrzyniak"},"type":"ISSUE","assignee":{"id":4799322,"username":"cwiesner","name":"Corinna Gogolok","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4799322/avatar.png","web_url":"https://gitlab.com/cwiesner"},"user_notes_count":18,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4050","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":5,"completed_count":5},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4050","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4050/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4050/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4050","relative":"#4050","full":"gitlab-org/customers-gitlab-com#4050"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":103971182,"iid":4047,"project_id":2670515,"title":"Add structured tracking events for sending of self-managed trial licenses","description":"## Problem\n\nWe do not currently have a structured tracking event available to understand when a trial license key has been sent to a user, which means we cannot understand the completion rates of the full end-to-end flow for self-managed trials. \n\nMore information in this thread: https://gitlab.com/groups/gitlab-org/-/epics/7612#note_852942467\n\n## Proposal\n\n1. Add a structured tracking event for when the trial license is sent. \n1. Consider adding a separate structured tracking event for when a non-trial license is sent (if it doesn't exist)  \n\n\u003e So we'd just need some way to know that the license key email was sent and to whom (hashed email perhaps?).\n\n\u003e I'm not sure how the standard paid license key email is generated and sent (or if it is still even an option as we transition to Cloud Licensing), but if it is then I'd suspect the code is in a similar area and could probably be instrumented as part of a pay flow instrumentation. (This again assumes that there are still self-managed license key emails being created and sent and not exclusively cloud licensing).\n\n## How will we measure success?\n\nIf we can understand in Sisense if a trial license has been sent.\n\n## Potential Structure of Event\n\n\n| Description | Category | Action | Label | Product Section | Product Group | Distributions | Tiers | Notes |\n| ------ | ------ | ------ | ------ | ------ | ------ | ------ | ------ |  ------ |\n| Backend Structured Event to record when the trial email for Self-Managed is sent to the User | `default` | `click_button`| `push_sm_trial_email` | `Dev` | `Devops:Growth` | ce, ee | trial |Please ensure a grain exists that we can join upon reliably. Ideally both `gsc_pseudonymized_user_id` and `instance_id` |","state":"closed","created_at":"2022-03-02T15:07:27.389Z","updated_at":"2023-03-20T00:02:20.913Z","closed_at":"2023-03-20T00:02:20.636Z","closed_by":{"id":1786152,"username":"gitlab-bot","name":"🤖 GitLab Bot 🤖","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1786152/avatar.png","web_url":"https://gitlab.com/gitlab-bot"},"labels":["Category:SM Provisioning","[deprecated] Category:Provision","auto closed","auto updated","backend","devops::fulfillment","feature::addition","group::provision","missed:15.0","missed:15.1","priority::4","section::fulfillment","type::feature"],"milestone":{"id":490705,"iid":14,"group_id":9970,"title":"Backlog","description":"Issues that we want to do but are not planned right now. Open for contribution from the community.","state":"active","created_at":"2018-03-22T13:09:23.767Z","updated_at":"2018-10-30T14:56:54.069Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/14"},"assignees":[],"author":{"id":4068412,"username":"mkarampalas","name":"Michael Karampalas","state":"active","avatar_url":"https://secure.gravatar.com/avatar/b1427f54773954af4d75c5514504229b?s=80\u0026d=identicon","web_url":"https://gitlab.com/mkarampalas"},"type":"ISSUE","assignee":null,"user_notes_count":26,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4047","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4047","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4047/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4047/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4047","relative":"#4047","full":"gitlab-org/customers-gitlab-com#4047"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102996517,"iid":4041,"project_id":2670515,"title":"[Change Management] Warning message about label misusage","description":"### Problem\n\nEngineers may pick issues when the label ~\"workflow::ready for development\" is not set, or any ~\"UX Product Design\" is set so the UX is still worked on.\n\nRelated to https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/1294\n\n### Proposal\n\nGiven our [product workflow](https://about.gitlab.com/handbook/product-development-flow), make sure that when an MR is opened, the expected labels are set in the corresponding issue. If they are not, warn in Danger about it.\n\nWe should also warn, depending on the issue labels, whether a UX (or other type of) review is required.","state":"closed","created_at":"2022-02-24T14:26:54.981Z","updated_at":"2023-03-14T00:02:17.206Z","closed_at":"2023-03-14T00:02:17.143Z","closed_by":{"id":1786152,"username":"gitlab-bot","name":"🤖 GitLab Bot 🤖","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1786152/avatar.png","web_url":"https://gitlab.com/gitlab-bot"},"labels":["Fulfillment::InfraDev","[deprecated] Category:Fulfillment Platform","auto closed","auto updated","devops::fulfillment","group::fulfillment platform","maintenance::workflow","section::fulfillment","type::maintenance"],"milestone":null,"assignees":[],"author":{"id":273486,"username":"jameslopez","name":"James Lopez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/273486/avatar.png","web_url":"https://gitlab.com/jameslopez"},"type":"ISSUE","assignee":null,"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4041","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4041","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4041/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4041/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4041","relative":"#4041","full":"gitlab-org/customers-gitlab-com#4041"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102805901,"iid":4031,"project_id":2670515,"title":"The ActivateService sets activated_at timestamp even if activation fails","description":"### Problem\n\n@vshumilo [identified here](https://gitlab.slack.com/archives/CL7SX4N86/p1645454361851859?thread_ts=1645430143.560179\u0026cid=CL7SX4N86) the `CloudActivations::ActivateService` still sets the `activated_at` timestamp even if the service ultimately fails which leads to misleading data.  The activation in this case ([Sentry error](https://sentry.gitlab.net/gitlab/customersgitlabcom/issues/3201934/?referrer=slack)) failed because the `current_subscription` was not found for the `cloud_activation` record ([code](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/dded5fcb0654a9af94b78c3153b4acadb1e5e60d/app/services/cloud_activations/activate_service.rb#L51)).  This was likely because the customer was attempting to activate a future-effective subscription that had no current term.  This specific case should be addressed by https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3980, however this is just an illustration for how an error in activation still leads to incorrectly marking the instance as being activation in the CustomersDot database.\n\nThis is likely not a big concern, at least right now, but it's also not great that the instance is marked as activated in the CustomersDot DB when the activation failed.  It's not a big impact because this value will get updated when they activate again later, but it would be better to have valid data.\n\n### Proposal\n\nThe `CloudActivations::ActivateService` should probably be wrapped in a transaction to rollback changes if a failure occurs in the service.  This would mean the `activated_at` timestamp would not be saved if the activation failed for any reason.","state":"closed","created_at":"2022-02-21T15:07:28.891Z","updated_at":"2023-02-15T16:27:03.747Z","closed_at":"2023-02-15T16:27:03.732Z","closed_by":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"labels":["Category:SM Provisioning","[deprecated] Category:Provision","backend","devops::fulfillment","group::provision","maintenance::refactor","section::fulfillment","severity::3","type::bug","workflow::ready for development"],"milestone":null,"assignees":[],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":null,"user_notes_count":6,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4031","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4031","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4031/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4031/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4031","relative":"#4031","full":"gitlab-org/customers-gitlab-com#4031"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":4628,"epic":{"id":127229,"iid":4628,"title":"Cloud Licensing V2","url":"/groups/gitlab-org/-/epics/4628","group_id":9970,"human_readable_end_date":"Nov 17, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":102796585,"iid":4030,"project_id":2670515,"title":"[Community Programs] Incorrect text for SaaS flow in purchase modal on checkout page","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nAs mentioned in this [note](https://gitlab.com/gitlab-org/fulfillment-meta/-/issues/408#note_848542868), the copy in the purchase modal in Community programs checkout page is currently the \"self manged\" copy, there's [different copy for the SaaS modal](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/2677/designs/User_flow.png).\n| Current | Expected |\n|---------|----------|\n| ![Screen_Shot_2022-02-18_at_4.10.33_PM](https://gitlab.com/gitlab-org/fulfillment-meta/uploads/3be6a87bcd5c0e43c54e5f9cd1f82e5d/Screen_Shot_2022-02-18_at_4.10.33_PM.png) | ![Screen_Shot_2022-02-18_at_4.19.08_PM](https://gitlab.com/gitlab-org/fulfillment-meta/uploads/b4aeaea7bede1908a0606d0c90c263c9/Screen_Shot_2022-02-18_at_4.19.08_PM.png) |\n\n### Proposal\n\nChange copy as per [the copy for SaaS flow](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/2677/designs/User_flow.png)\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\n### Result\n\n### Next steps (if any)\n\n### How will we measure success?\n\nRelated to https://gitlab.com/gitlab-org/fulfillment-meta/-/issues/408","state":"closed","created_at":"2022-02-21T12:52:59.733Z","updated_at":"2022-03-09T00:29:26.149Z","closed_at":"2022-03-09T00:29:26.131Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","SUS::Impacting","UX debt","Unplanned","devops::fulfillment","frontend","group::purchase","section::fulfillment","severity::4","type::bug","workflow::production"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4030","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4030","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4030/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4030/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4030","relative":"#4030","full":"gitlab-org/customers-gitlab-com#4030"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5712,"epic":{"id":244558,"iid":5712,"title":"Community Programs - New Subscription","url":"/groups/gitlab-org/-/epics/5712","group_id":9970,"human_readable_end_date":"Mar 22, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":102796086,"iid":4029,"project_id":2670515,"title":"[Community Programs] SaaS - Incorrect text and extra space in checkout page","description":"Note that for self-managed this should still say **License**\n\nAs raised in this [note](https://gitlab.com/gitlab-org/fulfillment-meta/-/issues/408#note_848542868), \n1. Need to change the word \"license\" to \"subscription\"\n2. Remove extra space before period.\n\nRefer to screenshot for details.\n\n![image](/uploads/f0d25e27671192c21303c7b32007aff9/image.png)\n\nRelated to fulfillment-meta#408.","state":"closed","created_at":"2022-02-21T12:43:18.432Z","updated_at":"2022-03-02T21:10:38.230Z","closed_at":"2022-03-02T21:10:38.173Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","SUS::Impacting","UX debt","Unplanned","devops::fulfillment","frontend","group::purchase","section::fulfillment","severity::4","type::bug","workflow::production"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4029","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4029","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4029/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4029/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4029","relative":"#4029","full":"gitlab-org/customers-gitlab-com#4029"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5712,"epic":{"id":244558,"iid":5712,"title":"Community Programs - New Subscription","url":"/groups/gitlab-org/-/epics/5712","group_id":9970,"human_readable_end_date":"Mar 22, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":102714680,"iid":4028,"project_id":2670515,"title":"Trueup shows validation error if set to 0","description":"## Summary\n\nOn SM renewal page the customer is asked to enter the \"Active users\" and also the True-up value for the old subscription. We are using the [purchase_subscription_details.vue](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/master/app/frontend/javascripts/purchase/components/purchase_subscription_details.vue) to display the Active users and also the True-up information on the frontend. \n\nDue to the validation to not allow users to enter value less than 0 during the purchase/renewal of users the same validation also got invoked for True-up box. See the screenshot below. This does not allow the users to renew the subscription with 0 true up quantity. The True-up count box becomes red and an error is seen below it \"Users over license quantity is not a valid number\"\n\n## Steps to reproduce\n\n1. Go to renew page of a SM subscription.\n1. Update the trueup value to greater than 0\n1. Now set the trueup value to 0\n1. Error - \"Users over license quantity is not a valid number\" is displayed under the box\n\n## What is the current *bug* behavior?\n\nValidation error - \"Users over license quantity is not a valid number\" is displayed under the true up box if value is updated to 0\n\n## What is the expected *correct* behavior?\n\nIt should allow customer to set value to 0\n\n![Screenshot_2022-02-19_at_01.18.18](/uploads/b8ecedda285042ebe9908f843de7b8e4/Screenshot_2022-02-19_at_01.18.18.png)","state":"closed","created_at":"2022-02-19T00:36:23.992Z","updated_at":"2022-04-12T05:25:21.582Z","closed_at":"2022-04-06T09:38:53.314Z","closed_by":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"labels":["Category:Purchase","devops::fulfillment","frontend","group::purchase","missed:14.9","priority::3","section::fulfillment","severity::3","type::bug","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"}],"author":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"type":"ISSUE","assignee":{"id":10590518,"username":"snachnolkar","name":"Sharmad Nachnolkar","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10590518/avatar.png","web_url":"https://gitlab.com/snachnolkar"},"user_notes_count":21,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4028","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4028","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4028/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4028/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4028","relative":"#4028","full":"gitlab-org/customers-gitlab-com#4028"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102714523,"iid":4027,"project_id":2670515,"title":"Trueup is negative if reconciliation user count is less than subscription quantity","description":"## Problem\n\nIf the reconciliation max users count value reported is less than the subscriptions total quantity then during renewal the trueup value is shown to be negative. \n\nOn [renewal page](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/master/app/views/subscriptions/renew.html.haml) we do the following calculations\n\n```ruby\nuser_count = reconciliation_active ? @subscription.latest_reconciliation\u0026.user_count : @subscription.user_count\ncurrent_user_count = user_count || product.quantity\nusers_over_license = current_user_count - product.quantity\n```\n\nIf the active users count of an SM license has always been less than the license subscriptions quantity then `users_over_license` is set as negative. \n\nEX :- A subscription was brought for 10 users\n\n* SeatLinkData with 8 users were reported anytime during the whole year\n* then user_count = 8\n* current_user_count = 8\n* users_over_license = 8 - 10 = -2\n\nThe users_over_license is used to setup the trueup quantity on the renew page. \n\nAs seen in the screenshot below the trueup value is set as -2 \n\n## Steps to reproduce\n\n1. Buy a license with 10 users starting last year.\n1. Create a reconciliation entry for the order with user_count as 8\n1. Go to Manage Subscription and then press Renew for the subscription\n1. The renew page will show the trueup value as -2\n\n## What is the current *bug* behavior?\n\nThe trueup value shown is -2\n\n## What is the expected *correct* behavior?\n\nThe trueup value should be shown as 0\n\n## Relevant logs and/or screenshots\n\n![Screenshot_2022-02-19_at_01.18.01](/uploads/68c56aa4e65258764886dd922fd60848/Screenshot_2022-02-19_at_01.18.01.png)","state":"closed","created_at":"2022-02-19T00:23:26.734Z","updated_at":"2022-03-07T10:12:56.167Z","closed_at":"2022-03-07T10:12:56.153Z","closed_by":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"labels":["Category:Purchase","Unplanned","backend","devops::fulfillment","group::purchase","section::fulfillment","type::bug","workflow::production"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"}],"author":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"type":"ISSUE","assignee":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"user_notes_count":9,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4027","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4027","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4027/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4027/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4027","relative":"#4027","full":"gitlab-org/customers-gitlab-com#4027"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102694521,"iid":4020,"project_id":2670515,"title":"Follow-up from \"Camelize names of fields to nullify for update\"","description":"The following discussion from !4302 should be addressed:\n\n- [ ] @lulalala started a [discussion](https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4302#note_845788236):  (+1 comment)\n\n    \u003e **question:**\n    \u003e \n    \u003e Why do we pass `type: \"Subscription\"` here? It seems `type` is used to determine whether lower camelCase should be used or not.\n    \u003e \n    \u003e Also does [IronBank's deep_camelise](https://github.com/zendesk/iron_bank/blob/ef39c2b58f618f202d02492b121a8f187c1ae55b/lib/iron_bank/actions/update.rb#L19) not cover this nested hash?","state":"closed","created_at":"2022-02-18T15:30:55.272Z","updated_at":"2022-02-22T14:34:43.528Z","closed_at":"2022-02-22T14:34:43.510Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","group::provision","maintenance::refactor","section::fulfillment","type::bug","workflow::production"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4020","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4020","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4020/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4020/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4020","relative":"#4020","full":"gitlab-org/customers-gitlab-com#4020"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102664234,"iid":4019,"project_id":2670515,"title":"Replace asdf-yarn with global installation via npm","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nRight now we install yarn via `asdf-yarn` plugin but:\n\n- this method is deprecated for Yarn 2/3. In order to make our transition to Yarn 2/2 more smooth we should migrate away from installing Yarn directly with `asdf` and reply on NPM.\n- make impossible to install default global NPM packages with `.default-npm-packages`.\n- `asdf-yarn` does not play well with globally installed packages via `yarn global add`.\n\n### Proposal\n\nRemove `asdf-yarn` in favor of `npm install -g yarn`.\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\n### Result\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-02-18T06:02:49.563Z","updated_at":"2022-08-08T19:15:32.064Z","closed_at":"2022-08-08T06:23:21.509Z","closed_by":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"labels":["devops::fulfillment","maintenance::workflow","section::fulfillment","type::maintenance","workflow::production"],"milestone":{"id":2453025,"iid":75,"group_id":9970,"title":"15.3","description":"","state":"active","created_at":"2022-02-03T22:28:50.229Z","updated_at":"2022-02-03T22:28:50.229Z","due_date":"2022-08-17","start_date":"2022-07-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/75"},"assignees":[{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"}],"author":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"type":"ISSUE","assignee":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"user_notes_count":7,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4019","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4019","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4019/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4019/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4019","relative":"#4019","full":"gitlab-org/customers-gitlab-com#4019"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102641733,"iid":4017,"project_id":2670515,"title":"Support Amendment and Order callouts","description":"### Problem\n\nRelated to https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3926 and https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/579 and https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/590\n\nWith Orders Harmonization, both the Subscribe and Amend API (used by CDot) and the Orders API (utilized by Zuora CPQ and the Zuora UI) can be utilized concurrently. Previous to this latest release, however, both order and amendment notifications were triggered for any subscription creation or amendment created through the Subscribe and Amend APIs. As a result, as part of the Orders Harmonization project, we refactored CustomersDot to continue to utilize the Subscribe and Amend API when creating or modifying subscriptions, but to only receive an `Order Processed` callout. Once the `Order Processed` callout was received by CDot, we were able to query for the Order Details, such as Order Actions and associated Rate Plans / Rate Plan Charges.\n\nWith this release, Zuora has changed the default behavior, which is intended to prevent duplicate (Amend and Order) notifications from firing:\n\n\u003e We have now changed the default notification behavior in the tenants with Orders Harmonization enabled to the following:\n\u003e\n\u003e Only amendment notifications are triggered for amendments that are created through the Subscribe and Amend APIs. Only order notifications are triggered for order actions that are created through the “Create an order” operation. As of Zuora Release 2022.01.R3, any new customers onboard on Orders Harmonization will have the new default notification behavior in their tenants.\n\n### Proposal\n\nRather than downgrading Zuora to get back to the previous callout behavior, we want to update CDot to accommodate the new behavior.  To do this, we must enable both Amendment and Order Notifications. This would allow CustomersDot to continue to utilize the Subscribe and Amend API when creating or amending subscriptions. \n\nThe `ZuoraCalloutWorker` has [logic that was created to prevent processing duplicate callouts](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/1ea64ad9fda6231056b46518c5d3ef3393157295/app/workers/zuora_callback_worker.rb#L54).  We should remove this logic as now we shouldn't have to worry about duplicates (in Zuora Central Sandbox).  \n\n**Notes** \n- @jesssalcido is enabling the amendment callouts in Zuora Central Sandbox now.\n- We should upgrade Zuora API Sandbox to the same release version as Central Sandbox to avoid duplicates in this environment.  I think we can live with this discrepancy in development until this environment is updated.  @jesssalcido is working with Zuora now to get this upgraded.\n- Until this issue is address, deploys to [CDot production will continue to be blocked](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3995) as this flow needs to be fixed for QA pipelines to pass.\n\n/cc @gitlab-com/business-technology/enterprise-apps/zuora-architects","state":"closed","created_at":"2022-02-17T19:15:20.763Z","updated_at":"2022-02-18T16:58:52.513Z","closed_at":"2022-02-18T03:21:41.140Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Provision","backend","devops::fulfillment","group::provision","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4017","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4017","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4017/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4017/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4017","relative":"#4017","full":"gitlab-org/customers-gitlab-com#4017"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102551789,"iid":4009,"project_id":2670515,"title":"[SaaS, Introductory email] - send email to all group owners","description":"## Description\n\nAs part of https://gitlab.com/groups/gitlab-org/-/epics/7229, we will be sending few mails 1 day after a subscription has been purchased or renewed.\n\nIn https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000 we went with [de-scoped list of users to send to](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3998#note_841620195) but that doesn't [solve the problem](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3998#note_841620209)\n\nWe should send an email to **all group Owners** (not just the group Owner who purchased the subscription), because all group Owners should be aware of the overage behaviour. \n\n## Implementation plan\n\n|  |  |\n| ------ | ------ |\n| create mailers | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999 |\n| MVC identify CustomersDot emails to send to | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000 |\n| send introductory email 1 day after purchase |https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4007 |\n| send introductory email 1 day after renewal | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4008 | \n| query GitLab.com for group owners emails and send | :point_left: you are here |\n\n## Tasks\n\nReplace [MVC solution](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000) of customers to send to with **group Owners of namespace**","state":"closed","created_at":"2022-02-16T14:47:35.532Z","updated_at":"2022-10-10T14:53:08.359Z","closed_at":"2022-05-18T22:02:43.177Z","closed_by":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"labels":["Category:Purchase","backend","customer","devops::fulfillment","feature::addition","group::purchase","missed:14.10","missed:14.9","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"}],"author":{"id":4430316,"username":"rhardarson","name":"Ragnar Hardarson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4430316/avatar.png","web_url":"https://gitlab.com/rhardarson"},"type":"ISSUE","assignee":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"user_notes_count":26,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4009","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4009","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4009/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4009/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4009","relative":"#4009","full":"gitlab-org/customers-gitlab-com#4009"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7229,"epic":{"id":401186,"iid":7229,"title":"[QSR] [SaaS] Create transparency about User Overage process at the time of purchase or renewal","url":"/groups/gitlab-org/-/epics/7229","group_id":9970,"human_readable_end_date":"Jul 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":102551355,"iid":4008,"project_id":2670515,"title":"[SaaS, Introductory email] - send email 1 day after renewal","description":"## Description\n\nAs part of https://gitlab.com/groups/gitlab-org/-/epics/7229, we will be sending few mails 1 day after a subscription has been purchased or renewed.\n\nUsing the mailer introduced in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999 and the selector introduced in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000 to send an email 1 day after a subscription has been renewed to make them aware of how users are counted and how overages are handled.\n\n## Implementation plan\n\n|  |  |\n| ------ | ------ |\n| create mailers | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999 |\n| MVC identify CustomersDot emails to send to | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000 |\n| send introductory email 1 day after purchase |https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4007 |\n| send introductory email 1 day after renewal | :point_left: you are here | \n| query GitLab.com for group owners emails and send | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4009 |\n\n## Tasks\n\nQueue [email](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999) to send 1 day after renewal","state":"closed","created_at":"2022-02-16T14:45:06.401Z","updated_at":"2022-04-18T07:02:54.175Z","closed_at":"2022-04-04T09:34:30.056Z","closed_by":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"labels":["Category:Purchase","Deliverable","backend","devops::fulfillment","feature::addition","group::purchase","missed:14.9","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"}],"author":{"id":4430316,"username":"rhardarson","name":"Ragnar Hardarson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4430316/avatar.png","web_url":"https://gitlab.com/rhardarson"},"type":"ISSUE","assignee":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4008","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4008","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4008/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4008/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4008","relative":"#4008","full":"gitlab-org/customers-gitlab-com#4008"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7229,"epic":{"id":401186,"iid":7229,"title":"[QSR] [SaaS] Create transparency about User Overage process at the time of purchase or renewal","url":"/groups/gitlab-org/-/epics/7229","group_id":9970,"human_readable_end_date":"Jul 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":102551004,"iid":4007,"project_id":2670515,"title":"[SaaS, Introductory email] - send email 1 day after purchase (namespace link)","description":"## Description\nAs part of https://gitlab.com/groups/gitlab-org/-/epics/7229, we will be sending few mails 1 day after a GL.com subscription has been purchased or renewed.\n\nUsing the mailer introduced in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999 and the selector introduced in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000 to send an email 1 day after a subscription has been [linked to a namespace](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4005#note_843627137) (purchased) to make them aware of how users are counted and how overages are handled.\n\n_PS - The mailer needs to be sent 1 day after the namespace_id has been set. The future requirements are to fetch [all the group owners](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4009) and that would be only possible if the namespace_id has been set._\n\n## Implementation plan\n\n|  |  |\n| ------ | ------ |\n| create mailers | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999 |\n| MVC identify CustomersDot emails to send to | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000 |\n| send introductory email 1 day after purchase |:point_left: you are here |\n| send introductory email 1 day after renewal | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4008|\n| query GitLab.com for group owners emails and send | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4009 |\n\n## Background \n\n* https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4005#note_843627137\n* https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4005#note_843627118","state":"closed","created_at":"2022-02-16T14:42:48.843Z","updated_at":"2022-04-18T07:02:54.237Z","closed_at":"2022-03-23T20:56:52.268Z","closed_by":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"labels":["Category:Purchase","Deliverable","backend","devops::fulfillment","feature::addition","group::purchase","missed:14.9","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2204142,"iid":72,"group_id":9970,"title":"14.10","description":"","state":"active","created_at":"2021-08-26T19:12:33.701Z","updated_at":"2021-08-26T19:12:33.701Z","due_date":"2022-04-17","start_date":"2022-03-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/72"},"assignees":[{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"}],"author":{"id":4430316,"username":"rhardarson","name":"Ragnar Hardarson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4430316/avatar.png","web_url":"https://gitlab.com/rhardarson"},"type":"ISSUE","assignee":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4007","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4007","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4007/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4007/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4007","relative":"#4007","full":"gitlab-org/customers-gitlab-com#4007"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7229,"epic":{"id":401186,"iid":7229,"title":"[QSR] [SaaS] Create transparency about User Overage process at the time of purchase or renewal","url":"/groups/gitlab-org/-/epics/7229","group_id":9970,"human_readable_end_date":"Jul 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":102433335,"iid":4000,"project_id":2670515,"title":"[Introductory email] - MVC Identify CustomersDot emails to send to","description":"## Description\n\nAs part of https://gitlab.com/groups/gitlab-org/-/epics/7229, we will be sending few mails 1 day after a subscription has been purchased or renewed.\n\nCurrently, we [have a method](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/master/app/models/customer.rb#L89) within the customers model which fetches all the customers based on `zuora_account_id`. The method is a [instance method](http://www.cs.ecu.edu/karl/3200/fall15/Notes/Java/Class/method.html). \n\nWe need a method which when called with parameter `zuora_account_id` and returns all customers matching the same `zuora_account_id`. \n\n## Implementation plan\n\n|  |  |\n| ------ | ------ |\n| create mailers | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999 |\n| MVC identify CustomersDot emails to send to | :point_left: you are here |\n| send introductory email 1 day after purchase |https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4007 |\n| send introductory email 1 day after renewal | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4008 | \n| query GitLab.com for group owners emails and send | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4009 |\n\n\n### Proposal\n\nCreate a [scope](https://www.rubyguides.com/2019/10/scopes-in-ruby-on-rails/) within Customer model which takes `zuora_account_id` and returns list of matching customers.","state":"closed","created_at":"2022-02-14T18:16:39.967Z","updated_at":"2022-03-18T07:03:16.283Z","closed_at":"2022-03-02T17:30:13.446Z","closed_by":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"labels":["Category:Purchase","Deliverable","backend","devops::fulfillment","feature::enhancement","group::purchase","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"}],"author":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"type":"ISSUE","assignee":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/4000","notes":"https://gitlab.com/api/v4/projects/2670515/issues/4000/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/4000/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#4000","relative":"#4000","full":"gitlab-org/customers-gitlab-com#4000"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7229,"epic":{"id":401186,"iid":7229,"title":"[QSR] [SaaS] Create transparency about User Overage process at the time of purchase or renewal","url":"/groups/gitlab-org/-/epics/7229","group_id":9970,"human_readable_end_date":"Jul 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":102431522,"iid":3999,"project_id":2670515,"title":"[SM, SaaS - Introductory email] - create mailers","description":"## Description\n\nAs part of https://gitlab.com/groups/gitlab-org/-/epics/7229, we will be sending few mails 1 day after a subscription has been purchased or renewed.\n\nWe need to have a new mailer which can pick customers from a given order id and sends email to the list of customers matching order's `zuora_account_id`\n\nWe currently have few mailers already within CustomersDot. Having a new mailer would help us separate introduction emails from rest of the mailers already present. \n\n## Implementation plan\n\n|  |  |\n| ------ | ------ |\n| create mailers | :point_left: you are here |\n| MVC identify CustomersDot emails to send to | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000 |\n| send introductory email 1 day after purchase |https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4007 |\n| send introductory email 1 day after renewal | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4008 | \n| query GitLab.com for group owners emails and send | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4009 |\n\n## Proposal \n\n### Design for new purchase\n\n[Design here](https://gitlab.com/gitlab-org/gitlab/-/issues/347267/designs/Email_to_group_Owners_1_day_after_purchase_with_info_about_QSR.png)\n\n### Email copy for new purchase\n\n#### Email copy\n\n\u003e Subject line: Managing users in your subscription\n\u003e\n\u003e Dear \\[customer\\],\n\u003e\n\u003e Thank you for purchasing a GitLab.com subscription! As you get started, we want to make sure you understand some important billing information.\n\u003e\n\u003e Your subscription cost is based on the maximum number of users enabled during the billing period. If you reach the maximum number of users in your subscription, you can continue to add users and GitLab bills you for the overage. These bills occur every quarter.\n\u003e\n\u003e Read more about quarterly reconciliation in [our product documentation](https://docs.gitlab.com/ee/subscriptions/quarterly_reconciliation.html).\n\u003e\n\u003e If you have any questions about this process, [please reach out](https://support.gitlab.com/hc/en-us/requests/new?ticket_form_id=360000071293). We are happy to assist.\n\u003e\n\u003e Thank you again for your purchase!\n\u003e\n\u003e GitLab Billing Team\n\n### Design for renewal\n\n[Design here](https://gitlab.com/gitlab-org/gitlab/-/issues/347267/designs/Email_to_group_Owners_1_day_after_purchase_with_info_about_QSR.png)\n\n### Email copy for renewal\n\n\u003e Subject line: Managing users in your subscription\n\u003e\n\u003e Dear \\[customer\\],\n\u003e\n\u003e Thank you for renewing your GitLab.com subscription! As you get started, we want to make sure you understand some important billing information.\n\u003e\n\u003e Your subscription cost is based on the maximum number of users enabled during the billing period. If you reach the maximum number of users in your subscription, you can continue to add users and GitLab bills you for the overage. These bills occur every quarter.\n\u003e\n\u003e Read more about quarterly reconciliation in [our product documentation](https://docs.gitlab.com/ee/subscriptions/quarterly_reconciliation.html).\n\u003e\n\u003e If you have any questions about this process, [please reach out](https://support.gitlab.com/hc/en-us/requests/new?ticket_form_id=360000071293). We are happy to assist.\n\u003e\n\u003e Thank you for your business!\n\u003e\n\u003e GitLab Billing Team\n\n### Implementation\n\n1. Using `rails generate` command to create introduction mailer \n1. Add `default_to` to the new mailer.","state":"closed","created_at":"2022-02-14T17:34:39.717Z","updated_at":"2022-12-21T16:27:02.517Z","closed_at":"2022-03-18T08:46:53.725Z","closed_by":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"labels":["Category:Purchase","Deliverable","backend","devops::fulfillment","feature::enhancement","group::purchase","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"}],"author":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"type":"ISSUE","assignee":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"user_notes_count":10,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3999","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3999/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3999/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3999","relative":"#3999","full":"gitlab-org/customers-gitlab-com#3999"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7229,"epic":{"id":401186,"iid":7229,"title":"[QSR] [SaaS] Create transparency about User Overage process at the time of purchase or renewal","url":"/groups/gitlab-org/-/epics/7229","group_id":9970,"human_readable_end_date":"Jul 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":102218132,"iid":3987,"project_id":2670515,"title":"500 error when purchasing CI minutes","description":"\u003c!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"bug\" label in relevant trackers:\n\n- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=bug\n- https://gitlab.com/gitlab-org/customers-gitlab-com/issues?label_name%5B%5D=bug\n\nand verify the issue you're about to submit isn't a duplicate.\n\nDo not include confidential information!\n---\u003e\n\n# Bug\n\n## Summary\n\nCustomers are reporting 500 Error when purchasing CI minutes from GitLab. \n\nAn example of the Sentry error event is:\n\n- https://sentry.gitlab.net/gitlab/gitlabcom-clientside/issues/3188813/events/67125403/\n- \"HTTP status code: 500\"\n- Time: Feb 10, 2022 1:49:06 PM UTC\n\n## Steps to reproduce\n\n(How one can reproduce the issue - this is very important)\n\n## What is the current *bug* behavior?\n\n(What actually happens)\n\n## What is the expected *correct* behavior?\n\n(What you should see instead)\n\n## Relevant logs and/or screenshots\n\n\n\n## Workarounds\n\n(Ways to get around the issue)\n\n## Reported examples\n\n1. https://gitlab.zendesk.com/agent/tickets/267889 - https://sentry.gitlab.net/gitlab/gitlabcom-clientside/issues/3188813/events/67128388/\n1. https://gitlab.zendesk.com/agent/tickets/267771 - https://sentry.gitlab.net/gitlab/gitlabcom-clientside/issues/3188813/events/67125403/\n1. https://gitlab.zendesk.com/agent/tickets/268022 - https://sentry.gitlab.net/gitlab/gitlabcom-clientside/issues/3188813/events/67130149/\n\n\u003c!---\nPlease add both severity and priority level according to: https://docs.gitlab.com/ee/development/contributing/issue_workflow.html#severity-labels\n---\u003e","state":"closed","created_at":"2022-02-10T16:04:08.062Z","updated_at":"2022-02-15T18:52:57.910Z","closed_at":"2022-02-15T18:48:18.889Z","closed_by":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"labels":["Category:Purchase","Unplanned","backend","customer","devops::fulfillment","group::purchase","priority::1","section::fulfillment","type::bug","workflow::in dev"],"milestone":{"id":2161849,"iid":70,"group_id":9970,"title":"14.8","description":"","state":"active","created_at":"2021-07-26T16:51:47.677Z","updated_at":"2021-07-26T16:51:47.677Z","due_date":"2022-02-17","start_date":"2022-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/70"},"assignees":[{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"}],"author":{"id":9767370,"username":"ffarukh","name":"Firdaws Farukh","state":"active","avatar_url":"https://secure.gravatar.com/avatar/f9ffec1ae6c28212690c41044f1d9c17?s=80\u0026d=identicon","web_url":"https://gitlab.com/ffarukh"},"type":"ISSUE","assignee":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"user_notes_count":11,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3987","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3987","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3987/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3987/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3987","relative":"#3987","full":"gitlab-org/customers-gitlab-com#3987"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102113753,"iid":3982,"project_id":2670515,"title":"Resume / cancel subscription buttons from home page are non-functional","description":"\u003c!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"bug\" label in relevant trackers:\n\n- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=bug\n- https://gitlab.com/gitlab-org/customers-gitlab-com/issues?label_name%5B%5D=bug\n\nand verify the issue you're about to submit isn't a duplicate.\n\nDo not include confidential information!\n---\u003e\n\n# Bug\n\n## Summary\n\nRenewing and cancelling from Customers Portal home page doesn't resume / cancel a subscription.\n\n**Cause**: [`SubscriptionCards`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/3855-unify-root-and-subscription-pages/app/assets/javascripts/dispatcher.js#L13) which makes the call to update the subscription is only executed for `/subscriptions` and `/subscriptions/\u003csubscription-id\u003e` pages but not from home page.\n\n## Steps to reproduce\n\n1. Visit Customers Portal with an account that has subscriptions\n1. Click on `Resume subscription` or `Cancel subscription` for a subscription\n\n## What is the current *bug* behavior?\n\nThe subscription is not resumed / cancelled and no corresponding API calls.\n\n## What is the expected *correct* behavior?\n\nThe subscription should be resumed / cancelled as per the customers action.\n\n## Relevant logs and/or screenshots\n\n![Screen_Shot_2022-02-09_at_10.25.51_PM](/uploads/ad37c0a873d645892b63d661a35a8f87/Screen_Shot_2022-02-09_at_10.25.51_PM.png)\n\n## Workarounds\n\nCustomer can still resume or cancel a subscription by going into `/subscriptions` page.\n\n## Reported examples\n\n\n\u003c!---\nPlease add both severity and priority level according to: https://docs.gitlab.com/ee/development/contributing/issue_workflow.html#severity-labels\n---\u003e","state":"closed","created_at":"2022-02-09T05:50:46.274Z","updated_at":"2022-02-10T04:36:34.827Z","closed_at":"2022-02-10T04:36:34.757Z","closed_by":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"labels":["Category:Purchase","Unplanned","devops::fulfillment","frontend","group::purchase","section::fulfillment","type::bug","workflow::production"],"milestone":{"id":2161849,"iid":70,"group_id":9970,"title":"14.8","description":"","state":"active","created_at":"2021-07-26T16:51:47.677Z","updated_at":"2021-07-26T16:51:47.677Z","due_date":"2022-02-17","start_date":"2022-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/70"},"assignees":[{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"}],"author":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"type":"ISSUE","assignee":{"id":10325315,"username":"vvempati","name":"Vamsi Vempati","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10325315/avatar.png","web_url":"https://gitlab.com/vvempati"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3982","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3982","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3982/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3982/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3982","relative":"#3982","full":"gitlab-org/customers-gitlab-com#3982"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102071975,"iid":3977,"project_id":2670515,"title":"QTC Systems Current State Field Mapping","description":"## Proposal\n\nBuild a field mapping of the current state for the 3 Quote-to-Cash data models (CustomersDot, GitLab and Zuora).\n\n## Spreadsheet\n\nGiven the limitations of MermaidJS in GitLab and the sheer size of the combined diagram, we decided to document this in a spreadsheet as a field mapping between the 3 systems.  When it's finalized, we will memorialize it in the handbook.\n\n[QTC System Field Mapping Spreadsheet](https://docs.google.com/spreadsheets/d/1D159Osv6JvQtlHm2Bpekn8ADOWUfgcdszf_pewERBy0/edit#gid=769890791)","state":"closed","created_at":"2022-02-08T15:08:27.745Z","updated_at":"2022-02-24T21:14:57.649Z","closed_at":"2022-02-24T21:14:57.631Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["devops::fulfillment","section::fulfillment","workflow::in review"],"milestone":{"id":2161849,"iid":70,"group_id":9970,"title":"14.8","description":"","state":"active","created_at":"2021-07-26T16:51:47.677Z","updated_at":"2021-07-26T16:51:47.677Z","due_date":"2022-02-17","start_date":"2022-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/70"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3977","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3977","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3977/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3977/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3977","relative":"#3977","full":"gitlab-org/customers-gitlab-com#3977"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7534,"epic":{"id":438633,"iid":7534,"title":"Current State Data Models of Quote to Cash Systems","url":"/groups/gitlab-org/-/epics/7534","group_id":9970},"iteration":null,"health_status":null},{"id":102022253,"iid":3976,"project_id":2670515,"title":"GitLab Current State ERD (CustomersDot-related)","description":"## Proposal\n\nBuild an Entity Relationship Diagram (ERD) representing the current state of the GitLab data model that relates to the CustomersDot application.\n\n## ERD\n\n```mermaid\nerDiagram\n    ci_minutes_additional_packs {\n        bigint id\n        timestampwithtimezone created_at\n        timestampwithtimezone updated_at\n        bigint namespace_id\n        date expires_at\n        integer number_of_minutes\n        text purchase_xid\n    }\n\n    gitlab_subscriptions {\n        bigint id\n        timestampwithtimezone created_at\n        timestampwithtimezone updated_at\n        date start_date\n        date end_date\n        date trial_ends_on\n        integer namespace_id\n        integer hosted_plan_id\n        integer max_seats_used\n        integer seats\n        boolean trial\n        date trial_starts_on\n        boolean auto_renew\n        integer seats_in_use\n        integer seats_owed\n        smallint trial_extension_type\n    }\n\n    historical_data {\n        integer id\n        date date\n        integer active_user_count\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        timestampwithtimezone recorded_at\n    }\n\n    licenses {\n        integer id\n        text data\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        boolean cloud\n        timestampwithtimezone last_synced_at\n    }\n\n    members {\n        integer id\n        integer access_level\n        integer source_id\n        charactervarying source_type\n        integer user_id\n        integer notification_level\n        charactervarying type\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        bigint member_namespace_id\n    }\n\n    namespace_limits {\n        bigint additional_purchased_storage_size\n        date additional_purchased_storage_ends_on\n        integer namespace_id\n        date temporary_storage_increase_ends_on\n    }\n\n    namespaces {\n        integer id\n        charactervarying name\n        charactervarying path\n        integer owner_id\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying type\n        charactervarying description\n        charactervarying avatar\n        integer parent_id\n        integer shared_runners_minutes_limit\n        bigint repository_size_limit\n        integer extra_shared_runners_minutes_limit\n        timestampwithtimezone last_ci_minutes_notification_at\n        integer last_ci_minutes_usage_notification_level\n        boolean shared_runners_enabled\n    }\n\n    personal_access_tokens {\n        integer id\n        integer user_id\n        charactervarying name\n        boolean revoked\n        date expires_at\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying scopes\n        boolean impersonation\n        charactervarying token_digest\n        boolean expire_notification_delivered\n        timestampwithtimezone last_used_at\n        boolean after_expiry_notification_delivered\n    }\n\n    plan_limits {\n        bigint id\n        bigint plan_id\n        integer storage_size_limit\n    }\n\n    plans {\n        integer id\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying name\n        charactervarying title\n    }\n\n    upcoming_reconciliations {\n        bigint id\n        bigint namespace_id\n        date next_reconciliation_date\n        date display_alert_from\n        timestampwithtimezone created_at\n        timestampwithtimezone updated_at\n    }\n\n    user_credit_card_validations {\n        bigint user_id\n        timestampwithtimezone credit_card_validated_at\n        date expiration_date\n        smallint last_digits\n        text holder_name\n        text network\n    }\n\n    users {\n        integer id\n        charactervarying email\n        charactervarying name\n        boolean admin\n        integer projects_limit\n        charactervarying username\n        charactervarying state\n        charactervarying first_name\n        charactervarying last_name\n        smallint user_type\n    }\n\n    gitlab_subscriptions |o--|| namespaces : \"\"\n    gitlab_subscriptions }o--|| plans : \"\"\n    members }o--|| namespaces : \"\"\n    members }o--|| users : \"\"\n    namespace_limits |o--|| namespaces : \"\"\n    namespaces }o--|| namespaces : \"\"\n    upcoming_reconciliations }o--|| namespaces : \"\"\n    users }o--|| namespaces : \"\"\n    personal_access_tokens }o--|| users : \"\"\n    plan_limits }o--|| plans : \"\"\n    user_credit_card_validations |o--|| users : \"\"\n\n```","state":"closed","created_at":"2022-02-07T20:49:26.260Z","updated_at":"2022-02-24T21:15:15.680Z","closed_at":"2022-02-24T21:15:15.660Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["devops::fulfillment","section::fulfillment","workflow::in review"],"milestone":{"id":2161849,"iid":70,"group_id":9970,"title":"14.8","description":"","state":"active","created_at":"2021-07-26T16:51:47.677Z","updated_at":"2021-07-26T16:51:47.677Z","due_date":"2022-02-17","start_date":"2022-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/70"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3976","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3976","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3976/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3976/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3976","relative":"#3976","full":"gitlab-org/customers-gitlab-com#3976"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7534,"epic":{"id":438633,"iid":7534,"title":"Current State Data Models of Quote to Cash Systems","url":"/groups/gitlab-org/-/epics/7534","group_id":9970},"iteration":null,"health_status":null},{"id":102019653,"iid":3975,"project_id":2670515,"title":"CustomersDot Current State ERD","description":"## Proposal\n\nBuild an Entity Relationship Diagram (ERD) representing the current state of the CustomersDot data model.\n\n## ERD\n\n```mermaid\nerDiagram\n    cloud_activations {\n        bigint id\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        bigint customer_id\n        charactervarying activation_code\n        charactervarying subscription_name\n        boolean super_sonics_aware\n    }\n\n    coupons {\n        bigint id\n        charactervarying batch_id\n        charactervarying code\n        smallint status\n    }\n\n    customers {\n        integer id\n        charactervarying first_name\n        charactervarying last_name\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying email\n        charactervarying encrypted_password\n        charactervarying reset_password_token\n        timestampwithouttimezone reset_password_sent_at\n        timestampwithouttimezone remember_created_at\n        integer sign_in_count\n        timestampwithouttimezone current_sign_in_at\n        timestampwithouttimezone last_sign_in_at\n        inet current_sign_in_ip\n        inet last_sign_in_ip\n        charactervarying provider\n        charactervarying uid\n        charactervarying zuora_account_id\n        charactervarying country\n        charactervarying state\n        charactervarying city\n        charactervarying zip_code\n        charactervarying vat_code\n        charactervarying company\n        charactervarying salesforce_account_id\n        boolean billable\n        charactervarying access_token\n        charactervarying confirmation_token\n        timestampwithouttimezone confirmed_at\n        timestampwithouttimezone confirmation_sent_at\n        charactervarying unconfirmed_email\n        charactervarying address_1\n        charactervarying address_2\n        charactervarying company_size\n        charactervarying authentication_token\n        charactervarying phone_number\n        boolean login_activated\n    }\n\n    instance_review_settings {\n        integer id\n        integer users_count_threshold\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n    }\n\n    instance_reviews {\n        integer id\n        charactervarying email\n        charactervarying first_name\n        charactervarying last_name\n        charactervarying company\n        charactervarying address\n        charactervarying phone\n        charactervarying version\n        integer users_count\n        integer groups_count\n        integer projects_count\n        integer issues_count\n        integer merge_requests_count\n        integer internal_pipelines_count\n        integer external_pipelines_count\n        integer labels_count\n        integer milestones_count\n        integer notes_count\n        integer snippets_count\n        charactervarying country\n        charactervarying state\n        charactervarying employee_range\n        boolean communication_opted_in\n    }\n\n    admins {\n        integer id\n        charactervarying email\n        charactervarying encrypted_password\n        charactervarying reset_password_token\n        timestampwithouttimezone reset_password_sent_at\n        timestampwithouttimezone remember_created_at\n        integer sign_in_count\n        timestampwithouttimezone current_sign_in_at\n        timestampwithouttimezone last_sign_in_at\n        inet current_sign_in_ip\n        inet last_sign_in_ip\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying authentication_token\n        boolean manage_admin\n        charactervarying provider\n        charactervarying uid\n        smallint customer_access_level\n        smallint license_access_level\n    }\n\n    licenses {\n        bigint id\n        uuid license_file_md5\n        bigint customer_id\n        bigint creator_id\n        timestampwithtimezone created_at\n        timestampwithtimezone updated_at\n        timestampwithtimezone last_synced_at\n        timestampwithtimezone next_sync_at\n        integer users_count\n        integer previous_users_count\n        integer trueup_quantity\n        date expires_at\n        date starts_at\n        date trueup_from\n        date trueup_to\n        boolean trial\n        boolean cloud_licensing_enabled\n        charactervarying plan_code\n        charactervarying plan_name\n        charactervarying zuora_subscription_id\n        charactervarying email\n        charactervarying name\n        charactervarying company\n        charactervarying zuora_subscription_name\n        text notes\n        text license_file\n        timestampwithtimezone activated_at\n        boolean auto_renew_enabled\n        boolean seat_reconciliation_enabled\n        boolean operational_metrics_enabled\n        boolean reconciliation_completed\n        boolean offline_cloud_licensing_enabled\n    }\n\n    local_records {\n        bigint id\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying name\n        text csv\n    }\n\n    orders {\n        integer id\n        integer customer_id\n        charactervarying product_rate_plan_id\n        charactervarying subscription_id\n        charactervarying subscription_name\n        date start_date\n        date end_date\n        integer quantity\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying gl_namespace_id\n        charactervarying gl_namespace_name\n        charactervarying amendment_type\n        boolean trial\n        timestampwithouttimezone last_extra_ci_minutes_sync_at\n        charactervarying zuora_account_id\n        timestampwithouttimezone increased_billing_rate_notified_at\n        boolean reconciliation_accepted\n        timestampwithouttimezone billing_rate_adjusted_at\n        charactervarying billing_rate_last_action\n        smallint trial_extension_type\n        charactervarying source\n    }\n\n    trial_histories {\n        integer id\n        charactervarying gl_namespace_id\n        date start_date\n        date expired_on\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying glm_source\n        charactervarying glm_content\n        charactervarying trial_entity\n    }\n\n    zuora_user_with_hosts {\n        integer id\n        charactervarying zuora_user_id\n        charactervarying host\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n    }\n\n    self_managed_instance_activations {\n        bigint id\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        timestampwithouttimezone activated_at\n        bigint self_managed_instance_id\n        bigint cloud_activation_id\n    }\n\n    self_managed_instances {\n        bigint id\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        charactervarying instance_identifier\n    }\n\n    license_seat_links {\n        bigint id\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        bigint order_id\n        integer active_user_count\n        integer max_historical_user_count\n        integer license_user_count\n        date license_starts_on\n        charactervarying zuora_subscription_name\n        charactervarying zuora_subscription_id\n        timestampwithtimezone report_timestamp\n        bigint license_id\n        bigint self_managed_instance_activation_id\n        charactervarying gitlab_version\n        charactervarying hostname\n        charactervarying instance_identifier\n        uuid license_md5\n    }\n\n    reconciliations {\n        bigint id\n        integer order_id\n        integer user_count\n        timestampwithouttimezone reconcile_done_at\n        timestampwithouttimezone created_at\n        timestampwithouttimezone updated_at\n        text error_message\n        date reconcile_on\n        smallint skip_reason\n        timestampwithtimezone upcoming_email_sent_at\n        timestampwithtimezone completed_email_sent_at\n        numeric quoted_invoice_amount\n        timestampwithtimezone quoted_invoice_at\n    }\n\n    leads {\n        bigint id\n        timestampwithtimezone created_at\n        timestampwithtimezone updated_at\n        date trial_start_date\n        bigint namespace_id\n        bigint user_id\n        boolean opt_in\n        boolean currently_in_trial\n        boolean is_for_business_use\n        charactervarying first_name\n        charactervarying last_name\n        charactervarying email\n        charactervarying phone\n        charactervarying company_name\n        charactervarying employees_bucket\n        charactervarying country\n        charactervarying state\n        charactervarying product_interaction\n        charactervarying provider\n        text comment_capture\n        charactervarying glm_content\n        charactervarying glm_source\n        timestampwithtimezone sent_at\n    }\n\n    cloud_activations }o--|| customers : \"\"\n    self_managed_instance_activations }o--|| cloud_activations : \"\"\n    licenses }o--|| customers : \"\"\n    orders }o--|| customers : \"\"\n    licenses }o--|| admins : \"\"\n    license_seat_links }o--|| licenses : \"\"\n    license_seat_links }o--|| orders : \"\"\n    reconciliations }o--|| orders : \"\"\n    license_seat_links }o--|| self_managed_instance_activations : \"\"\n    self_managed_instance_activations }o--|| self_managed_instances : \"\"\n\n```","state":"closed","created_at":"2022-02-07T19:48:05.108Z","updated_at":"2022-02-24T21:15:04.190Z","closed_at":"2022-02-24T21:15:04.173Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["devops::fulfillment","section::fulfillment","workflow::in review"],"milestone":{"id":2161849,"iid":70,"group_id":9970,"title":"14.8","description":"","state":"active","created_at":"2021-07-26T16:51:47.677Z","updated_at":"2021-07-26T16:51:47.677Z","due_date":"2022-02-17","start_date":"2022-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/70"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3975","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3975","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3975/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3975/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3975","relative":"#3975","full":"gitlab-org/customers-gitlab-com#3975"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7534,"epic":{"id":438633,"iid":7534,"title":"Current State Data Models of Quote to Cash Systems","url":"/groups/gitlab-org/-/epics/7534","group_id":9970},"iteration":null,"health_status":null},{"id":101905622,"iid":3969,"project_id":2670515,"title":"[SM] Provision Ramped subscription (automated)","description":"# Feature Request\n\n## Summary\nThe rollout of Zuora Ramps (https://gitlab.com/groups/gitlab-com/business-technology/enterprise-apps/-/epics/85+) will result in a change to the current structure of a ramp deal. Instead of creating a separate opportunity, quote and subscription for each ramp interval, a single subscription will now include all intervals over multiple years. For MVC launch of Ramps, provisioning of each year (after the first) will be manual. \n\nHowever, given the ease of use of Zuora Ramps, there is expected to be a significant increase in the number of Ramp deals in FY23, will result in a burden on the Support team manually issuing licenses. This issue addresses the need to automate licensing for Self-Managed Ramp subscriptions.\n\nDiscovery work being completed in [this issue](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3754) informed what data is received from a Zuora Ramp deal by CustomersDot which is required to know how provisioning could handled for each ramp interval. You can find the results of a 3 year Ramp test for SM [here in the issue](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3754#note_807607785). As you can see, the resulting license was generated for the correct initial time period (the 1st year of the ramp), but the quantity was incorrect. The quantity was for the active/final ramp of the subscription (e.g. 30) instead of the initial ramp (e.g. 10).\n\n### Problem Statement\nOnly one callout goes out for the new subscription, and includes all of the subscription / ramp terms. The license is created for only 1 year. There are no callouts for successive intervals.\n\n\n## Proposal\n### Start of Subscription\n* At the current state, provisioning works partially for the first ramp year of a subscription.  Provisioning will be adjusted in https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968+ to address the problems with determining quantity and end date correctly.  We will assume this work is completed before starting this issue.\n\n### Successive Subscription Intervals\n* Update the user's subscription license count to the correct value at the beginning of each ramp period\n  * This will require a custom workflow in Zuora that will send a callout to CustomersDot to update the subscription's license in subsequent years when the ramp interval changes as this does not currently exist. EntApps work issue here: https://gitlab.com/gitlab-com/business-technology/enterprise-apps/financeops/finance-systems/-/issues/698\n    * The decision on whether a custom workflow callout can be used for this purpose was discussed in https://gitlab.com/gitlab-com/business-technology/enterprise-apps/bsa/business-systems-analysts/-/issues/145.  It was decided we will use a Zuora custom workflow for this trigger.\n\n\n### License End Date Logic Update\nOur logic for determining license end date ([defined here in CDot](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/3e8889422f9bc05f57cb205fb025364b28ccdcef/app/models/concerns/license_creation.rb#L7)) is conditional. The license end date is set using subscription term end date if the subscription is a monthly sub OR is cloud licensing enabled (`TurnOnCloudLicensing__c` is `Yes` or `Offline`) and reconciliations are enabled (`TurnOnSeatReconciliation__c` is `Yes`). Otherwise, the license end date will be set to term start date + 1 year.\n\nBased on the default [defined in this issue](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/intake/-/issues/527#super-sonics-fields-and-standard-exemptions), it looks like ramps subscriptions will not have `TurnOnSeatReconciliation__c` enabled, so the license start date will fallback to term start date + 1 year. \n\n**Requirement:** Add another condition to check if cloud licensing is enabled and subscription is ramp enabled, then use term end date. The logic might look like the below:\n\n```ruby\n    if monthly? || (cloud_license_enabled? \u0026\u0026 (perform_reconciliations? || ramp_enabled?))\n      term_end_date\n    else\n      term_start_date.advance(years: 1)\n    end\n```","state":"closed","created_at":"2022-02-04T16:22:15.133Z","updated_at":"2023-05-03T15:58:58.129Z","closed_at":"2022-06-23T13:39:32.482Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["Category:SM Provisioning","Fulfillment Roadmap","License Activation","Ramps Provisioning","backend","devops::fulfillment","group::provision","section::fulfillment","type::feature","workflow::production"],"milestone":{"id":2453024,"iid":74,"group_id":9970,"title":"15.2","description":"","state":"active","created_at":"2022-02-03T22:24:46.818Z","updated_at":"2022-02-03T22:26:32.010Z","due_date":"2022-07-17","start_date":"2022-06-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/74"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":18,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3969","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3969","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3969/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3969/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3969","relative":"#3969","full":"gitlab-org/customers-gitlab-com#3969"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9354,"epic":{"id":668676,"iid":9354,"title":"[SM] Automated Provisioning for Ramp Deals","url":"/groups/gitlab-org/-/epics/9354","group_id":9970,"human_readable_end_date":"Jan 15, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":101905637,"iid":3970,"project_id":2670515,"title":"[SaaS] Provision Ramped subscription (automated)","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication.\n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n# Feature Request\n\n## Problem\n\nThe rollout of Zuora Ramps (https://gitlab.com/groups/gitlab-com/business-technology/enterprise-apps/-/epics/85+) will result in a change to the current structure of a ramp deal. Instead of creating a separate opportunity, quote and subscription for each ramp interval, a single subscription will now include all intervals over multiple years. For MVC launch of Ramps, provisioning of each year (after the first) will be manual. \n\nHowever, given the ease of use of Zuora Ramps, there is expected to be a significant increase in the number of Ramp deals in FY23, will result in a burden on the Support team manually addressing provisioning problems. This issue addresses the need to automate provisioning for SaaS Ramp subscriptions.\n\nDiscovery work being completed in [this issue](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3754) informs what data is received from a Zuora Ramp deal by CustomersDot which is required to know how provisioning could handled for each ramp interval. You can find the results of a 3 year Ramp test for SaaS [here in this issue thread](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3754#note_804427524).  As you can see, the subscription was provisioned in GL.com for the correct time period and quantity.  However, what's shown on the Manage Subscriptions page in CDot might be misleading as it shows the final state of the subscription (quantity 30).  That problem should be handled in a separate issue though as this should focus on provisioning only\n\n## Proposal\n\n### Start of Subscription\n* No change to current process - Given the current state, provisioning should work automatically for the first ramp year as it syncs the quantity for the first ramp from Zuora to CustomersDot for the full subscription term.\n\n### Successive Subscription Intervals\n* Update the user's subscription license count to the correct value at the beginning of each ramp period\n  * This will require a custom Zuora workflow that sends a callout to CustomersDot to update the .com subscription in subsequent years when the ramp interval changes as this does not currently exist.\n  * The decision on whether a custom workflow callout can be used for this purpose was discussed in https://gitlab.com/gitlab-com/business-technology/enterprise-apps/bsa/business-systems-analysts/-/issues/145.  It was decided we will use a Zuora custom workflow for this trigger.\n  * The custom workflow/callout is being tested as part of https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4295.  In this issue, we can just verify the SaaS flow is working as expected once https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4295 is complete.","state":"closed","created_at":"2022-02-04T16:21:55.907Z","updated_at":"2022-12-15T19:25:19.790Z","closed_at":"2022-12-15T19:25:19.767Z","closed_by":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"labels":["Category:SaaS Provisioning","Ramps Provisioning","[deprecated] Category:Provision","backend","devops::fulfillment","feature::consolidation","group::provision","section::fulfillment","type::feature","workflow::blocked"],"milestone":{"id":2745648,"iid":83,"group_id":9970,"title":"15.8","description":"","state":"active","created_at":"2022-08-22T16:57:34.875Z","updated_at":"2022-08-22T16:57:34.875Z","due_date":"2023-01-17","start_date":"2022-12-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/83"},"assignees":[],"author":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"type":"ISSUE","assignee":null,"user_notes_count":11,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3970","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3970","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3970/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3970/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3970","relative":"#3970","full":"gitlab-org/customers-gitlab-com#3970"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9355,"epic":{"id":668677,"iid":9355,"title":"[SaaS] Automated Provisioning for Ramp Deals","url":"/groups/gitlab-org/-/epics/9355","group_id":9970,"human_readable_end_date":"Jan 17, 2023","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":101898918,"iid":3968,"project_id":2670515,"title":"[SM] Provision Ramped subscription (manual)","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication.\n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n# Feature Request\n\n## Problem\nThe rollout of Zuora Ramps will result in a change to the current structure of a ramp deal. Instead of creating a separate opportunity, quote and subscription for each ramp interval, a single subscription will now include all intervals over multiple years. For deals that ramp in quantity over each interval, additional licenses need to be provisioned at the beginning of the interval. This issue addresses how to provision these ramp licenses for Self-Managed Subscriptions.\n\nDiscovery work being completed in [this issue](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3754) will inform what data is received from a Zuora Ramp deal by CustomersDot which is required to know how provisioning could handled for each ramp interval. You can find the results of a 3 year Ramp test for SM [here in the issue](https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3754#note_807607785).  As you can see, the resulting license was generated for the correct initial time period (the 1st year of the ramp), but the quantity was incorrect.  The quantity was for the active/final ramp of the subscription (e.g. 30) instead of the initial ramp (e.g. 10).\n\n## Proposal\n### Start of Subscription\n* For MVC Zuora Ramps launch (expected May 2022), follow current process of automated provisioning and send the customer both a cloud activation code and an offline cloud license file for year one of a multi-interval ramp deal\n  * Ramp deals currently follow the [default Cloud Licensing behavior](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/intake/-/issues/527#super-sonics-fields-and-standard-exemptions), with the customer receiving both license types\n  * With the launch of [Strict Cloud Licensing](https://gitlab.com/groups/gitlab-com/business-technology/enterprise-apps/-/epics/379), [Ramp deals will be no longer be an exemption and will be set to Yes](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/intake/-/issues/526#post-update-state-of-cloud-licensing), with all Ramp customers receiving Cloud Licensing.\n* Ensure the start date, end date, and quantity of the license generated for ramps is correct for both types of licenses, cloud and offline cloud.\n  * Cloud: Make sure the licenses generated at activation and in subsequent seat link have the correct information based on the current subscription, and not the latest (active) data in Zuora.\n  * Offline Cloud: Ensure the license generated by the `LicenseNotificationService` triggered by the callout uses the correct start date, end date, and quantity for the current subscription (e.g. first ramp year).\n\n### Successive Subscription Intervals\nFor [MVC Zuora Ramps](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/intake/-/issues/433#update-20211103), Sales will only be able to create annual ramp intervals. However, there may be rare instances created by Sales Ops for specific customers will a subscription could ramp semi-annually, quarterly or monthly.\n* For Self-Managed licenses, provision as follows:\n  * For annual ramps: support team to provision license(s) immediately at start of subscription year. This will follow their [existing process](https://about.gitlab.com/handbook/support/license-and-renewals/workflows/self-managed/handling_multi-years_subscription.html).\n  * For more granular ramp intervals: support team to provision license(s) immediately at start of interval based on service effective dates. This will follow their [existing process](https://about.gitlab.com/handbook/support/license-and-renewals/workflows/self-managed/handling_multi-years_subscription.html).\n\nNOTE: Ramp deals that increase in price only each interval will not require any manual licensing.\n\n\n## Next steps (if any)\n* Evaluate/implement automated provisioning of successive Ramp intervals to remove Support burden of manual provisioning. Work being tracked in [this epic](https://gitlab.com/groups/gitlab-org/-/epics/7192).\n\n## References:\n\n- This is a sample subscription which is ramp enabled Tyler has used for testing: https://apisandbox.zuora.com/apps/Subscription.do?method=view\u0026id=8ad08e01802632c4018029ad428155fb","state":"closed","created_at":"2022-02-04T16:21:07.985Z","updated_at":"2022-06-07T20:44:00.210Z","closed_at":"2022-05-16T17:38:10.263Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["Ramps Provisioning","[deprecated] Category:Fulfillment Platform","[deprecated] Category:Provision","devops::fulfillment","group::fulfillment platform","section::fulfillment","workflow::in dev"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":7964536,"username":"courtmeddaugh","name":"Courtney Meddaugh","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7964536/avatar.png","web_url":"https://gitlab.com/courtmeddaugh"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":44,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3968","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3968","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3968/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3968/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3968","relative":"#3968","full":"gitlab-org/customers-gitlab-com#3968"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7504,"epic":{"id":435718,"iid":7504,"title":"Manual Provisioning for Ramp Deals","url":"/groups/gitlab-org/-/epics/7504","group_id":9970,"human_readable_end_date":"May 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":101758395,"iid":3958,"project_id":2670515,"title":"Add JSON formatter for Puma logs","description":"\u003c!-- Please complete the template below as best as you can. Make sure to check if this issue has already been raised by someone else first to avoid duplication. \n\nFor each section below, please add screenshots or links or anything that may help visual learners understand the problem better, even if this takes you an extra minute or two this is a great help to some folks.\n\nhttps://www.learning-styles-online.com/style/visual-spatial/\n\n--\u003e\n\n### Problem\n\nPort the GitLab JSON formatter for Puma log messages to get them into fluentd and ELK.\n\n### Proposal\n\n\u003c!-- Consult with `@gitlab-com/business-technology/enterprise-apps/zuora-architects` on the ~\"Enterprise Applications\" team if Zuora business logic is involved. --\u003e\n\n### Result\n\n### Next steps (if any)\n\n### How will we measure success?","state":"closed","created_at":"2022-02-02T18:07:41.988Z","updated_at":"2022-02-18T19:16:48.993Z","closed_at":"2022-02-18T19:16:48.981Z","closed_by":{"id":3614911,"username":"rcobb","name":"Ryan Cobb","state":"active","avatar_url":"https://secure.gravatar.com/avatar/7047b7014264f07daf9836e55fc5ef4c?s=80\u0026d=identicon","web_url":"https://gitlab.com/rcobb"},"labels":["backend","devops::fulfillment","section::fulfillment"],"milestone":{"id":2161849,"iid":70,"group_id":9970,"title":"14.8","description":"","state":"active","created_at":"2021-07-26T16:51:47.677Z","updated_at":"2021-07-26T16:51:47.677Z","due_date":"2022-02-17","start_date":"2022-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/70"},"assignees":[{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"}],"author":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"type":"ISSUE","assignee":{"id":447038,"username":"vitallium","name":"Vitaly Slobodin","state":"active","avatar_url":"https://secure.gravatar.com/avatar/74b3243cfcfbfac1f022b78ab505e8d8?s=80\u0026d=identicon","web_url":"https://gitlab.com/vitallium"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3958","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3958","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3958/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3958/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3958","relative":"#3958","full":"gitlab-org/customers-gitlab-com#3958"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":102396578,"iid":3998,"project_id":2670515,"title":"[SaaS] Send introductory email about user overages after renewal","description":"## Problem to solve\n\nSaaS customers are being surprised and taken off-guard by Quarterly Subscription reconciliations. Because self-service SaaS customers have not historically been charged true-ups, the QSR process and the fact that they have to pay for overages is totally new. See tickets from customers [here](https://gitlab.com/gitlab-org/fulfillment-meta/-/issues/337).\n\n## Intended users\n\nThis issue is just for SaaS customers.\n\n* Group Owners of a group who have just renewed (manually or auto-renewed) a subscription\n* Only groups enrolled in quarterly subscription reconciliation. See exactly which use cases we're solving for in the [Epic description](https://gitlab.com/groups/gitlab-org/-/epics/7229#saas-customers).\n\n## Proposal\n\nAfter a subscription has been **renewed (manually or auto-renewed)** for a group in GitLab, send an email to **all** group Owners 1 day after a subscription has been renewed to make them aware of how users are counted and how overages are handled.\n\nWe should send an email to all group Owners (not just the group Owner who purchased the subscription), because all group Owners should be aware of the overage behavior.\n\n### Design\n\n[Design here](https://gitlab.com/gitlab-org/gitlab/-/issues/347267/designs/Email_to_group_Owners_1_day_after_purchase_with_info_about_QSR.png)\n\n### Email copy\n\n\u003e\u003e\u003e\n\nSubject line: Managing users in your subscription\n\nDear [customer],\n\nThank you for renewing your GitLab.com subscription! As you get started, we want to make sure you understand some important billing information.\n\nYour subscription cost is based on the maximum number of seats you use during the billing period. If you reach the number of seats in your subscription, you can continue to add users, but GitLab bills you for the overage. These bills occur every quarter.\n\nRead more about quarterly reconciliation in [our product documentation](https://docs.gitlab.com/ee/subscriptions/quarterly_reconciliation.html).\n\nIf you have any questions about this process, [please reach out](https://support.gitlab.com/hc/en-us/requests/new?ticket_form_id=360000071293). We are happy to assist.\n\nThank you for your business!\n\nGitLab Billing Team\n\n\u003e\u003e\u003e\n\n## Implementation Plan\n\n| Issue | Issue link |\n|-------|------------|\n| Create mailers | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3999 |\n| MVC identify CustomersDot emails to send to | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4000 |\n| Send introductory email 1 day after purchase | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4007 |\n| Send introductory email 1 day after renewal | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4008 |\n| Query GitLab.com for group owners emails and send | https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/4009 |","state":"closed","created_at":"2022-01-31T21:21:41.721Z","updated_at":"2022-11-21T19:41:56.808Z","closed_at":"2022-02-16T17:12:06.415Z","closed_by":{"id":4430316,"username":"rhardarson","name":"Ragnar Hardarson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4430316/avatar.png","web_url":"https://gitlab.com/rhardarson"},"labels":["Category:Purchase","auto updated","devops::fulfillment","group::purchase","section::fulfillment"],"milestone":{"id":2161849,"iid":70,"group_id":9970,"title":"14.8","description":"","state":"active","created_at":"2021-07-26T16:51:47.677Z","updated_at":"2021-07-26T16:51:47.677Z","due_date":"2022-02-17","start_date":"2022-01-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/70"},"assignees":[{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"}],"author":{"id":8110789,"username":"tgolubeva","name":"Tatyana Golubeva","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/8110789/avatar.png","web_url":"https://gitlab.com/tgolubeva"},"type":"ISSUE","assignee":{"id":4903695,"username":"shreyasagarwal","name":"Shreyas Agarwal","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d5b09dfe06a10d119c1b2043c43de680?s=80\u0026d=identicon","web_url":"https://gitlab.com/shreyasagarwal"},"user_notes_count":26,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3998","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":0,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3998","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3998/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3998/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3998","relative":"#3998","full":"gitlab-org/customers-gitlab-com#3998"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":7229,"epic":{"id":401186,"iid":7229,"title":"[QSR] [SaaS] Create transparency about User Overage process at the time of purchase or renewal","url":"/groups/gitlab-org/-/epics/7229","group_id":9970,"human_readable_end_date":"Jul 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":101297214,"iid":3944,"project_id":2670515,"title":"Spike: New Subscriptions API endpoint to support E-Disty","description":"# Purpose\n\nRelated to the discussions in the [Purchasing Reliability WG](https://docs.google.com/document/d/1m6sozlyvEIEKcEIPF2_nujrYTOV3IPpx_jaPXD1hPpU/edit), the purpose of this issue is to research what changes need to be made in CustomersDot to support requests from Platypus to create customers and subscriptions that originate from orders in Arrowsphere.  \n\nThe original purpose of this issue was to evaluate how far a request from Platypus could get using the existing APIs in CDot.  My finding can be [found below](#original-exercise).  Now that we have those results, we are officially starting the planning and design phase of the MVC build.  The outcomes of this issue will be an epics with issues outlining the CustomersDot development work related to supporting a new API for E-Disty.\n\n## Original Exercise\n\nWe were tasked with seeing how far a Platypus request could get using [this sample payload from Platypus](https://gitlab.com/gitlab-com/business-technology/enterprise-apps/integrations/platypus/-/snippets/2235036) to create a subscription in CustomersDot using the existing `/subscriptions` API endpoint. \n\nAfter looking at the payload, we found some issues that had to be addressed before we could attempt the CDot request. \n See the notes below for more details.\n\nTLDR: The main blocker is that the current CDot endpoint expects a logged-in customer to make the request.  We would likely need to make changes to both the payload from platypus and to our API endpoint. Let's discuss how we might be able to solve for these problems.\n\n\u003cdetails\u003e\u003csummary\u003eNotes\u003c/summary\u003e\n\n## CDot subscriptions/create endpoint using Platypus Payload\n\nThis document describes how this sample request payload from Platypus could be used to feed into the subscriptions/create endpoint in CDot.  I've added a mapping below to help illustrate.\n\n## Summary\n\nIn short, the payload cannot be simply fed into the CDot endpoint without some adjustments.\n\n- The payload from Platypus would need to be transformed into a request body structure that CDot expects.\n- The endpoint requires a logged in CDot Customer (but doesn't have to have a Zuora account yet).  This customer data is used to build the subscribe API request body.\n  - The Platypus payload seems to contain the data required to create a Customer.\n  - We don't receive a VAT code in Platypus but it doesn't seem like this is required in Zuora.\n- A `payment_method_id` is require unless the plan is a community plan and a `coupon_code` param is included.\n\n## Mapping CDot create params to Platypus payload\n\n### Mapped params\n\n```ruby\nparams['plan_id'] =\u003e payload['orderLines'][0]['productId']\nparams['products']['main']['quantity'] =\u003e payload['orderLines'][0]['quantity']\n```\n\n### Required CDot params that are missing from Platypus payload\n\n```ruby\nparams['payment_method_id']\n```\n\n### Optional CDot params\n\n```ruby\nparams['payment_method'], # CC if not set.  Could be set to `wire_transfer`\nparams['customer_email'], # Not sure if this is used\nparams['customer_token'], # Not sure if this is used\nparams['order_total'], # Possibly for display purposes only\nparams['total_without_taxes'], # Possibly for display purposes only\nparams['order_status'], # Possibly for display purposes only\nparams['source'], # Possibly for display purposes only; set on the Order record in CDot (e.g. upgrade or new)\nparams['gl_namespace_id'], # Set on the Order record in CDot for SaaS\nparams['gl_namespace_name'], # Set on the Order record in CDot for SaaS\nparams['preview'], # Boolean for previewing order before purchase\nparams['subscription_id'], # Used for adding a new product to an existing subscription\n```\n\n## Detailed breakdown of how the Subscribe API payload is constructed\n\nThe request body is made up of 6 main elements, listed in more detail below: `account`, `bill_to_contact`, `payment_method`, `subscribe_options`, `subscription_data`, `preview_options`.\n\n### account (for new Zuora customer)\n\n```ruby\n{\n  name: customer.company,\n  communication_profile_id: APP_CONFIG.zuora.default_profile_id,\n  currency: 'USD',\n  bill_cycle_day: Date.current.day,\n  payment_term: 'Due Upon Receipt',\n  batch: batch,\n  auto_pay: enable_auto_pay?,\n  vat_id: customer.vat_code\n}\n```\n\n#### OR (for existing Zuora customer)\n\n```ruby\n{\n  id: customer.zuora_account_id,\n  batch: batch\n}\n```\n\n### bill_to_contact (only for new Zuora customers)\n\n```ruby\n{\n  first_name: customer.first_name,\n  last_name: customer.last_name,\n  country: customer.country,\n  city: customer.city,\n  address1: customer.address_1,\n  address2: customer.address_2,\n  state: customer.state,\n  postal_code: customer.zip_code,\n  work_email: customer.email\n}\n```\n\n### payment_method\n\n```ruby\n{ id: params[:payment_method_id] } # if params[:payment_method_id] is present\n```\n\n### subscribe_options\n\n```ruby\nattrs = {\n  generate_invoice: true,\n  process_payments: process_payments?\n  subscribe_invoice_processing_options: {\n    invoice_date: Date.current,\n    invoice_processing_scope: 'Subscription',\n    invoice_target_date: Date.current\n  }\n}\nattrs[:external_payment_options] = { payment_method_id: PaymentMethod::WIRE_TRANSFER_ID } # if payment_method is `wire_transfer`\n```\n\n### subscription_data\n\n```ruby\n{\n  rate_plan_data: rate_plans, # array of amendment options using the plan and quantity\n  subscription: {\n    contract_effective_date: Date.current,\n    service_activation_date: Date.current,\n    initial_term: TERM_DURATION_IN_MONTHS, # 12\n    renewal_term: TERM_DURATION_IN_MONTHS  # 12\n  }.merge(subscription_custom_fields) # Includes values for custom fields on Subscription for Super Sonics\n}\n```\n\n### preview_options\n\n```ruby\n{ enable_preview_mode: true } # if preview param is true\n```\n\n\u003c/details\u003e\n\n## Data Mapping\n\nThe team has collaborated on a data mapping exercise between Platypus, CDot, Zuora Billing, and SFDC (TBD).  The following spreadsheet shows how the data will flow from Arrow via Platypus payload into the CDot data model and ultimately into Zuora Billing via a Zuora Subscribe API request:\n\n[E-Disty: Data mapping spreadsheet](https://docs.google.com/spreadsheets/d/138UqGiYfGc8A4HyBin6JrsRelmjfGbqvg3UZ0nJaLTU/edit#gid=0)","state":"closed","created_at":"2022-01-26T15:19:13.151Z","updated_at":"2022-03-22T20:27:32.484Z","closed_at":"2022-03-16T15:04:45.105Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Provision","backend","customer","devops::fulfillment","group::provision","section::fulfillment"],"milestone":{"id":2204140,"iid":71,"group_id":9970,"title":"14.9","description":"","state":"active","created_at":"2021-08-26T19:11:46.841Z","updated_at":"2022-03-22T13:29:17.028Z","due_date":"2022-03-17","start_date":"2022-02-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/71"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":37,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3944","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3944","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3944/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3944/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3944","relative":"#3944","full":"gitlab-org/customers-gitlab-com#3944"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":6873,"epic":{"id":365061,"iid":6873,"title":"Integrate with Distributor e-Marketplace (Arrowsphere) to create and provision orders","url":"/groups/gitlab-org/-/epics/6873","group_id":9970,"human_readable_end_date":"Nov 17, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":101294143,"iid":3942,"project_id":2670515,"title":"Fix the IronBank schema export","description":"### Problem\n\nAs [described in the README](https://gitlab.com/gitlab-org/customers-gitlab-com#ironbank), we should be able to update the IronBank schema files using the command `IronBank::Schema.export` in a rails console.  However, when working on https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/4279, it was noticed that this command stalls.  \n\nWhen the schema is being exported via IronBank, [the Zuora `describe` API endpoint is used](https://github.com/zendesk/iron_bank/blob/main/lib/iron_bank/describe/object.rb#L20) for [each object name](https://github.com/zendesk/iron_bank/blob/main/lib/iron_bank/describe/tenant.rb#L46) returned by [the top level describe API request](https://github.com/zendesk/iron_bank/blob/main/lib/iron_bank/describe/tenant.rb#L15).  In development (which uses Zuora API sandbox), this process stalls when the describe endpoint is called for certain object names (like `ApplicationGroup`).\n\nCustomerDot has overridden the `object_names` method [here](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/266480162afe740fa1cbc9049dabd600c537110e/lib/zuora/describe/tenant.rb#L17) (from https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/669) to be pulled from a hard-coded set of object names [in `config/zuora/rest_objects.yml`](https://gitlab.com/gitlab-org/customers-gitlab-com/blob/6b8978605499bc74aa3d3cdee8b1afaf5d10858f/config/zuora/rest_objects.yml#L1).  From https://gitlab.com/gitlab-org/customers-gitlab-com/-/merge_requests/669, it's not exactly clear why it's necessary to use a hard-coded list of object names instead of pulling the available set from Zuora like IronBank does by default.  Using the default logic, allows the schema export to work again.\n\nIt's not clear when this export stopped working, but I'm thinking it might be after the latest update to our Zuora tenant for API Sandbox.\n\n### Proposal\n\nDetermine why the hard-coded list of object names is necessary.  If it is, trim the list to those needed for CDot that are still relevant.  It might be necessary to make environment specific `rest_objects.yml` files.\n\n### Result\n\nA working IronBank schema export.","state":"closed","created_at":"2022-01-26T14:43:34.888Z","updated_at":"2022-04-22T13:37:58.019Z","closed_at":"2022-04-22T13:37:57.999Z","closed_by":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"labels":["[deprecated] Category:Fulfillment Platform","backend","devops::fulfillment","group::fulfillment platform","maintenance::refactor","section::fulfillment","workflow::production"],"milestone":{"id":2095271,"iid":65,"group_id":9970,"title":"15.0","description":"","state":"active","created_at":"2021-06-08T15:35:34.814Z","updated_at":"2021-11-02T18:23:35.115Z","due_date":"2022-05-17","start_date":"2022-04-18","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/65"},"assignees":[{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"}],"author":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"type":"ISSUE","assignee":{"id":4159190,"username":"tyleramos","name":"Tyler Amos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4159190/avatar.png","web_url":"https://gitlab.com/tyleramos"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-org/customers-gitlab-com/-/issues/3942","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/2670515/issues/3942","notes":"https://gitlab.com/api/v4/projects/2670515/issues/3942/notes","award_emoji":"https://gitlab.com/api/v4/projects/2670515/issues/3942/award_emoji","project":"https://gitlab.com/api/v4/projects/2670515","closed_as_duplicate_of":null},"references":{"short":"#3942","relative":"#3942","full":"gitlab-org/customers-gitlab-com#3942"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null}]