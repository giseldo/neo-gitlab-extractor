[{"id":23422847,"iid":7414,"project_id":1304532,"title":"Delivery: MTTP Metric","description":"Define, develop and track `Mean-Time-to-Production` (MTTP) metric as a KPI for both Infrastructure as a department and Scalability as a team. Iterate as necessary.\n\nUpdate URL, Health, Maturity and Next Steps on the Handbook's [Infrastructure Performance Indicators](https://about.gitlab.com/handbook/engineering/infrastructure/performance-indicators/#mean-time-to-production- mttp) page as necessary.","state":"closed","created_at":"2019-08-02T08:50:33.140Z","updated_at":"2022-08-07T19:02:59.014Z","closed_at":"2020-01-27T10:25:49.961Z","closed_by":{"id":116,"username":"marin","name":"Marin Jankovski","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5154f0b0eda3f798c8a254962d57192f?s=80\u0026d=identicon","web_url":"https://gitlab.com/marin"},"labels":["Infrastructure mStaff","KPI","ManagerAction","auto updated","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":116,"username":"marin","name":"Marin Jankovski","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5154f0b0eda3f798c8a254962d57192f?s=80\u0026d=identicon","web_url":"https://gitlab.com/marin"},{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":116,"username":"marin","name":"Marin Jankovski","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5154f0b0eda3f798c8a254962d57192f?s=80\u0026d=identicon","web_url":"https://gitlab.com/marin"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7414","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7414","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7414/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7414/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7414","relative":"#7414","full":"gitlab-com/gl-infra/reliability#7414"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23409359,"iid":7408,"project_id":1304532,"title":"Update to chef 14.x","description":"* Update chef-client to v14.x on the `pre` environment: https://ops.gitlab.net/gitlab-cookbooks/chef-repo/merge_requests/1558\n* Identify and fix all issues on `pre`: No issue identified\n* Deploy all fixes to `pre`: No fixes required\n* Verify `pre` works: :white_check_mark: \n* Deploy across all our environments all non-breaking fixes: No fixes required\n* Update chef-client to v14.x and breaking fixes across all our environments: https://ops.gitlab.net/gitlab-cookbooks/chef-repo/merge_requests/1559\n\nFirst step of https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7406","state":"closed","created_at":"2019-08-01T17:08:09.216Z","updated_at":"2022-08-07T19:03:01.193Z","closed_at":"2019-08-02T21:09:00.020Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["auto updated","chef","workflow-infra::Done"],"milestone":{"id":878550,"iid":26,"group_id":1112072,"title":"CI/CD \u0026 Enablement - FY20Q2::KR::Chef 15 and Consul for service registration","description":"We are currently running most chef clients on Chef 12 and the current version is Chef 15.  This KR will scope the size of the effort to upgrade nodes in production to chef 15 and pick a reasonable effort to do in Q2.\r\n\r\nWe also had carry over for finishing Consul service registration work from 2019FYQ1.\r\n\r\nEpics:\r\n1. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/69\r\n2. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/57","state":"closed","created_at":"2019-05-17T22:46:07.911Z","updated_at":"2019-12-04T21:44:14.005Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/26"},"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7408","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7408","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7408/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7408/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7408","relative":"#7408","full":"gitlab-com/gl-infra/reliability#7408"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23406508,"iid":7405,"project_id":1304532,"title":"RCA Gitaly latency below SLO","description":"\u003c!--\n**Please note:** if the incident relates to sensitive data, or is security related consider\nlabeling this issue with ~security and mark it confidential.\n*** \n--\u003e\n\nIncident: gitlab-com/gl-infra/production#1013\n\n## Summary\n\nA file descriptor leak in gitaly on file-23 caused high resource consumption and thus very high latencies for all gitaly operations on this host.\nThis was causing high latencies for all projects on this host while all other projects stayed unaffected.\nSome projects of severely blocked customers have been moved to another node during the investigation.\n\n- Service(s) affected : ~\"Service:Gitaly\" \n\n- Team attribution : Gitaly\n\n- Minutes downtime or degradation : 270\n\nFor calculating duration of event, use the [Platform Metrics Dashboard](https://dashboards.gitlab.net/d/ZUei7TkWz/platform-metrics?orgId=1) to look at appdex and SLO violations.\n\n## Impact \u0026 Metrics\n\nStart with the following:\n\n- What was the impact of the incident?\n  - Very high Gitaly latencies for projects hosted on file-23\n- Who was impacted by this incident?\n  - all customers with projects on file-23 (some big customers reported issues)\n- How did the incident impact customers?\n  - all gitaly based operations, like merge requests, have been very slow\n- How many attempts were made to access the impacted service/feature?\n- How many customers were affected?\n- How many customers tried to access the impacted service/feature?\n\nInclude any additional metrics that are of relevance.\n\nProvide any relevant graphs that could help understand the impact of the incident and its dynamics.\n\nGitaly P99 latency\n![image](/uploads/3535cbc05aa5452b6172c5be0458a4bc/image.png)\n\n## Detection \u0026 Response\n\nStart with the following:\n\n- How was the incident detected?\n  - Gitaly latency SLO alert\n- Did alarming work as expected?\n  - the Gitaly latency SLO alert did not go to pagerduty, so it wasn't seen by the EOC immediately\n  - if we had alarming on gitaly file descriptor count, we could have seen issues days before (since 7/18)\n- How long did it take from the start of the incident to its detection?\n  - customers reported issues since 7/18 (the start of the fd leakage), so it took 13 days\n- How long did it take from detection to remediation?\n  - 258m\n- Were there any issues with the response to the incident? (i.e. bastion host used to access the service was not available, relevant team memeber wasn't page-able, ...)\n  - while 503 issues on file-23 were [identified on 7/18 already](https://gitlab.com/gitlab-com/customer-success/account-triage/issues/119#note_194548970) we didn't take action\n\n## Root Cause Analysis\n\nSome projects suffered from high latencies for Gitaly-related operations (like MRs).\n\n1. Why? - Because Gitaly had higher latencies for some projects.\n2. Why? - Because Gitaly on file-23 had issues, which affected only projects hosted on that node.\n3. Why? - Because the Gitaly process was using a lot CPU resources.\n4. Why? - Because Gitaly had 10,000 hanging cat-file processes.\n5. Why? - Because Gitaly was leaking file descriptors.\n\n## What went well\n\nStart with the following:\n\n- Identify the things that worked well or as expected.\n- Any additional call-outs for what went particularly well.\n\n## What can be improved\n\n- Alerting on gitaly file descriptors\n- Make Gitaly SLO alerts go to pagerduty\n- We should have followed up after we identified 503 errors on file-23 days ago\n- We should have a clear escalation path from support to SRE\n\n\n\n## Corrective actions\n\n- List issues that have been created as corrective actions from this incident.\n- For each issue, include the following:\n    - \u003cBare Issue link\u003e - Issue labeled as ~\"corrective action\".\n    - Include an estimated date of completion of the corrective action.\n    - Incldue the named individual who owns the delivery of the corrective action.\n\n* [x] prevent cat-file leak https://gitlab.com/gitlab-org/gitaly/merge_requests/1390\n* [x] alert on high gitaly file descriptor count https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7390\n* [x] page for gitaly SLO alerts https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7391\n\n## Guidelines\n\n* [Blameless RCA Guideline](https://about.gitlab.com/handbook/infrastructure/#rca)\n* [5 whys](https://en.wikipedia.org/wiki/5_Whys)","state":"closed","created_at":"2019-08-01T15:58:00.921Z","updated_at":"2019-12-06T21:43:16.601Z","closed_at":"2019-09-03T12:41:07.174Z","closed_by":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"labels":["IncidentReview","SRE:On-call","oncall","severity::2","team::Reliability","unscheduled","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7405","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":3},"weight":3,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7405","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7405/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7405/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7405","relative":"#7405","full":"gitlab-com/gl-infra/reliability#7405"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23396890,"iid":7402,"project_id":1304532,"title":"RCA Job queue pipeline_processing:pipeline_process is growing","description":"\u003c!--\n**Please note:** if the incident relates to sensitive data, or is security related consider\nlabeling this issue with ~security and mark it confidential.\n*** \n--\u003e\n\nIncident: gitlab-com/gl-infra/production#1014\n\n## Summary\n\nCI jobs took very long to complete because jobs in the pipeline_processing:pipeline_process sidekiq queue piled up.\n2 pipelines caused a high amount of sidekiq jobs, sidekiq pipeline nodes were maxing out their CPU, pipeline_processing jobs are causing many SQL calls and the pgbouncer pool for sidekiq was becoming saturated.\n\nRCA doc: https://docs.google.com/document/d/15UPwfmUFVmx6jtghlUoOod3JAGVa4BRycNqFA1OSrjs/edit#\n\n- Service(s) affected : ~\"Service:Sidekiq\" \n\n- Team attribution : \n\n- Minutes downtime or degradation : 240\n\n## Impact \u0026 Metrics\n\nStart with the following:\n\n- What was the impact of the incident?\n  - delay of CI jobs\n- Who was impacted by this incident?\n  - all customers CI pipelines\n- How did the incident impact customers?\n  - preventing them from running CI tests/deploys\n- How many attempts were made to access the impacted service/feature?\n- How many customers were affected?\n- How many customers tried to access the impacted service/feature?\n\nInclude any additional metrics that are of relevance.\n\nProvide any relevant graphs that could help understand the impact of the incident and its dynamics.\n\n![image](/uploads/4a4c80198cb01859443acdb8be55209d/image.png)\n\n## Detection \u0026 Response\n\nStart with the following:\n\n- How was the incident detected?\n  - support reporting customer issues with CI pipelines\n- Did alarming work as expected?\n  - we got [Sidekiq single_node_cpu alerts](https://gitlab.slack.com/archives/CD6HFD1L0/p1564581102209800) and [pgbouncer connection_pool saturation alerts](https://gitlab.slack.com/archives/CD6HFD1L0/p1564585485211100) but no pages. We did __not__ get an alert for the queue size which would have been a clear indication of the issue.\n- How long did it take from the start of the incident to its detection?\n  - 80m from queue starting to rise till first alert for sidekiq CPU\n- How long did it take from detection to remediation?\n  - 240m\n- Were there any issues with the response to the incident? (i.e. bastion host used to access the service was not available, relevant team member wasn't page-able, ...)\n  - EOC became aware of the incident by reports from customer support and not from being paged for alerts.\n  - It was hard to find someone to help with that issue.\n\n## Root Cause Analysis\n\nThe purpose of this document is to understand the reasons that caused an incident, and to create mechanisms to prevent it from recurring in the future. A root cause can **never be a person**, the way of writing has to refer to the system and the context rather than the specific actors.\n\nFollow the \"**5 whys**\" in a **blameless** manner as the core of the root-cause analysis.\n\nFor this it is necessary to start with the incident, and question why it happened. Keep iterating asking \"why?\" 5 times. While it's not a hard rule that it has to be 5 times, it helps to keep questions get deeper in finding the actual root cause. \n\nKeep in min that from one \"why?\" there may come more than one answer, consider following the different branches.\n\n### Example of the usage of \"5 whys\"\nThe vehicle will not start. (the problem)\n\n1. Why? - The battery is dead. \n2. Why? - The alternator is not functioning.\n3. Why? - The alternator belt has broken.\n4. Why? - The alternator belt was well beyond its useful service life and not replaced. \n5. Why? - The vehicle was not maintained according to the recommended service schedule. (Fifth why, a root cause)\n\n## What went well\n\nStart with the following:\n\n- Identify the things that worked well or as expected.\n- Any additional call-outs for what went particularly well.\n\n## What can be improved\n\nStart with the following:\n\n- Using the root cause analysis, explain what can be improved to prevent this from happening again.\n- Is there anything that could have been done to improve the detection or time to detection?\n- Is there anything that could have been done to improve the response or time to response?\n- Is there an existing issue that would have either prevented this incident or reduced the impact?\n- Did we have any indication or beforehand knowledge that this incident might take place?\n\n## Corrective actions\n\n- List issues that have been created as corrective actions from this incident.\n- For each issue, include the following:\n    - \u003cBare Issue link\u003e - Issue labeled as ~\"corrective action\".\n    - Include an estimated date of completion of the corrective action.\n    - Incldue the named individual who owns the delivery of the corrective action.\n    \n* [x] increase CPU for sidekiq nodes https://gitlab.com/gitlab-com/gl-infra/production/issues/997\n* [ ] review pgbouncer pool config https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7403\n* [x] optimize PipelineProcessWorker https://gitlab.com/gitlab-org/gitlab-ce/issues/65414\n* [ ] deduplicate sidekiq jobs https://gitlab.com/gitlab-org/gitlab/-/issues/30585\n* [x] define sidekiq SLOs https://gitlab.com/gitlab-org/gitlab/-/issues/30174\n* [ ] simplify sidekiq setup https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7219\n* [ ] improve sidekiq observability\n* [ ] prevent customers from causing platform issues by adding per-client limits in all places\n\n\n## Guidelines\n\n* [Blameless RCA Guideline](https://about.gitlab.com/handbook/infrastructure/#rca)\n* [5 whys](https://en.wikipedia.org/wiki/5_Whys)","state":"closed","created_at":"2019-08-01T14:03:17.302Z","updated_at":"2020-04-20T07:27:03.844Z","closed_at":"2019-09-03T12:49:44.042Z","closed_by":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"labels":["IncidentReview","Service::Pgbouncer","team::Reliability","unscheduled","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7402","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":8,"completed_count":3},"weight":5,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7402","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7402/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7402/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7402","relative":"#7402","full":"gitlab-com/gl-infra/reliability#7402"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23366845,"iid":7395,"project_id":1304532,"title":"rsyslog not creating system log files at bootstrap","description":"Noticed while building sidekiq nodes for https://gitlab.com/gitlab-com/gl-infra/production/issues/963: after initial bootstrap, /var/log/syslog, /var/log/auth.log and so on did not exist, even though rsyslog was running.  It required a further restart of rsyslog (or a reboot) for them to be created and logged to.  This means system logs are neither logged locally, nor shipped to ElasticSearch, until manual activity occurs.\n\nI have done no further investigation yet, no idea how simple or complex this will be to fix.","state":"closed","created_at":"2019-08-01T03:47:50.567Z","updated_at":"2022-08-07T19:03:10.345Z","closed_at":"2019-09-20T18:49:00.516Z","closed_by":{"id":506061,"username":"ahmadsherif","name":"Ahmad Sherif","state":"active","avatar_url":"https://secure.gravatar.com/avatar/bd6d0ec4213b91601956c9f801cbfe9b?s=80\u0026d=identicon","web_url":"https://gitlab.com/ahmadsherif"},"labels":["auto updated","corrective action","workflow-infra::Done"],"milestone":{"id":995576,"iid":42,"group_id":1112072,"title":"Dev \u0026 Ops: 2019-09-09 - 2019-09-22","description":"","state":"closed","created_at":"2019-09-09T14:46:08.050Z","updated_at":"2019-09-23T09:43:07.078Z","due_date":"2019-09-22","start_date":"2019-09-09","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/42"},"assignees":[{"id":506061,"username":"ahmadsherif","name":"Ahmad Sherif","state":"active","avatar_url":"https://secure.gravatar.com/avatar/bd6d0ec4213b91601956c9f801cbfe9b?s=80\u0026d=identicon","web_url":"https://gitlab.com/ahmadsherif"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":506061,"username":"ahmadsherif","name":"Ahmad Sherif","state":"active","avatar_url":"https://secure.gravatar.com/avatar/bd6d0ec4213b91601956c9f801cbfe9b?s=80\u0026d=identicon","web_url":"https://gitlab.com/ahmadsherif"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7395","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7395","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7395/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7395/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7395","relative":"#7395","full":"gitlab-com/gl-infra/reliability#7395"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23362896,"iid":7394,"project_id":1304532,"title":"chef-client on dev.gitlab.org not working due to runit","description":"@alejandro Does this have something to do with https://gitlab.com/gitlab-cookbooks/gitlab-monitor/merge_requests/27?\n\n```\n# sudo chef-client\n[2019-07-31T21:01:51+00:00] INFO: Forking chef instance to converge...\nStarting Chef Client, version 12.19.36\n[2019-07-31T21:01:52+00:00] INFO: *** Chef 12.19.36 ***\n[2019-07-31T21:01:52+00:00] INFO: Platform: x86_64-linux\n[2019-07-31T21:01:52+00:00] INFO: Chef-client pid: 70984\n[2019-07-31T21:01:57+00:00] INFO: Run List is [role[base-debian], role[dev-gitlab-org], role[allow-ssh-git], recipe[gitlab-exporters::node_exporter], role[gitlab-wale]]\n[2019-07-31T21:01:57+00:00] INFO: Run List expands to [gitlab-server::ohai-plugin-path, gitlab-server::packages, gitlab-server::timezone-utc, gitlab-server::disable_history, gitlab-server::cron-check-authorized_keys2, gitlab-server::aws-get-public-ip, gitlab-server::get-public-ip, apt::unattended-upgrades, gitlab-server::locale-en-utf8, gitlab-server::ntp-client, gitlab-server::screenrc, gitlab-server::updatedb, gitlab_users::default, gitlab_sudo::default, gitlab-openssh, chef_client_updater, chef-client, gitlab-exporters::node_exporter, gitlab-server::rsyslog_client, postfix::_common, postfix::aliases, gitlab-server::debian-editor-vim, gitlab-server::dpkg-defaults, gitlab-iptables, gitlab-security::rkhunter, gitlab-security::auditd, omnibus-gitlab::default, gitlab-openssh::default, gitlab-server::systemd-logind, gitlab-server::package-auto-upgrade, gitlab-mtail::gitlab-shell, gitlab-mtail::rails, gitlab-mtail::unicorn, gitlab-exporters::gitlab_version_exporter, gitlab-server::hack_google_creds, gitlab_fluentd::default, gitlab_fluentd::gitaly, gitlab_fluentd::nginx, gitlab_fluentd::pages, gitlab_fluentd::postgres, gitlab_fluentd::rails, gitlab_fluentd::shell, gitlab_fluentd::sidekiq, gitlab_fluentd::unicorn, gitlab_fluentd::workhorse, gitlab-server::ssh-users, gitlab_wale::default]\n[2019-07-31T21:01:57+00:00] INFO: Starting Chef Run for dev.gitlab.org\n[2019-07-31T21:01:57+00:00] INFO: Running start handlers\n[2019-07-31T21:01:57+00:00] INFO: Start handlers complete.\n[2019-07-31T21:01:58+00:00] INFO: HTTP Request Returned 404 Not Found:\n[2019-07-31T21:01:58+00:00] INFO: HTTP Request Returned 404 Not Found:\n[2019-07-31T21:01:58+00:00] INFO: Error while reporting run start to Data Collector. URL: https://chef.gitlab.com/organizations/gitlab/data-collector Exception: 404 -- 404 \"Not Found\"  (This is normal if you do not have Chef Automate)\nresolving cookbooks for run list: [\"gitlab-server::ohai-plugin-path\", \"gitlab-server::packages\", \"gitlab-server::timezone-utc\", \"gitlab-server::disable_history\", \"gitlab-server::cron-check-authorized_keys2\", \"gitlab-server::aws-get-public-ip\", \"gitlab-server::get-public-ip\", \"apt::unattended-upgrades\", \"gitlab-server::locale-en-utf8\", \"gitlab-server::ntp-client\", \"gitlab-server::screenrc\", \"gitlab-server::updatedb\", \"gitlab_users::default\", \"gitlab_sudo::default\", \"gitlab-openssh\", \"chef_client_updater\", \"chef-client\", \"gitlab-exporters::node_exporter\", \"gitlab-server::rsyslog_client\", \"postfix::_common\", \"postfix::aliases\", \"gitlab-server::debian-editor-vim\", \"gitlab-server::dpkg-defaults\", \"gitlab-iptables\", \"gitlab-security::rkhunter\", \"gitlab-security::auditd\", \"omnibus-gitlab::default\", \"gitlab-openssh::default\", \"gitlab-server::systemd-logind\", \"gitlab-server::package-auto-upgrade\", \"gitlab-mtail::gitlab-shell\", \"gitlab-mtail::rails\", \"gitlab-mtail::unicorn\", \"gitlab-exporters::gitlab_version_exporter\", \"gitlab-server::hack_google_creds\", \"gitlab_fluentd::default\", \"gitlab_fluentd::gitaly\", \"gitlab_fluentd::nginx\", \"gitlab_fluentd::pages\", \"gitlab_fluentd::postgres\", \"gitlab_fluentd::rails\", \"gitlab_fluentd::shell\", \"gitlab_fluentd::sidekiq\", \"gitlab_fluentd::unicorn\", \"gitlab_fluentd::workhorse\", \"gitlab-server::ssh-users\", \"gitlab_wale::default\"]\n[2019-07-31T21:01:59+00:00] INFO: HTTP Request Returned 412 Precondition Failed: {\"message\"=\u003e\"Unable to satisfy constraints on package runit due to solution constraint (gitlab-mtail \u003e= 0.0.0). Solution constraints that may result in a constraint on runit: [(gitlab-exporters = 1.3.0) -\u003e (runit ~\u003e 4.3.0)], [(gitlab-mtail = 0.1.18) -\u003e (runit ~\u003e 3.0.0)]\", \"unsatisfiable_run_list_item\"=\u003e\"(gitlab-mtail \u003e= 0.0.0)\", \"non_existent_cookbooks\"=\u003e[], \"most_constrained_cookbooks\"=\u003e[\"runit = 1.7.8 -\u003e [(packagecloud \u003e= 0.0.0)]\"]}\n\n================================================================================\nError Resolving Cookbooks for Run List:\n================================================================================\n\nCookbook dependency resolution error:\n-------------------------------------\nError message: Unable to satisfy constraints on package runit due to solution constraint (gitlab-mtail \u003e= 0.0.0). Solution constraints that may result in a constraint on runit: [(gitlab-exporters = 1.3.0) -\u003e (runit ~\u003e 4.3.0)], [(gitlab-mtail = 0.1.18) -\u003e (runit ~\u003e 3.0.0)]\nYou might be able to resolve this issue with:\n  1-) Removing cookbook versions that depend on deleted cookbooks.\n  2-) Removing unused cookbook versions.\n  3-) Pinning exact cookbook versions using environments.\n\nExpanded Run List:\n------------------\n* gitlab-server::ohai-plugin-path\n* gitlab-server::packages\n* gitlab-server::timezone-utc\n* gitlab-server::disable_history\n* gitlab-server::cron-check-authorized_keys2\n* gitlab-server::aws-get-public-ip\n* gitlab-server::get-public-ip\n* apt::unattended-upgrades\n* gitlab-server::locale-en-utf8\n* gitlab-server::ntp-client\n* gitlab-server::screenrc\n* gitlab-server::updatedb\n* gitlab_users::default\n* gitlab_sudo::default\n* gitlab-openssh\n* chef_client_updater\n* chef-client\n* gitlab-exporters::node_exporter\n* gitlab-server::rsyslog_client\n* postfix::_common\n* postfix::aliases\n* gitlab-server::debian-editor-vim\n* gitlab-server::dpkg-defaults\n* gitlab-iptables\n* gitlab-security::rkhunter\n* gitlab-security::auditd\n* omnibus-gitlab::default\n* gitlab-openssh::default\n* gitlab-server::systemd-logind\n* gitlab-server::package-auto-upgrade\n* gitlab-mtail::gitlab-shell\n* gitlab-mtail::rails\n* gitlab-mtail::unicorn\n* gitlab-exporters::gitlab_version_exporter\n* gitlab-server::hack_google_creds\n* gitlab_fluentd::default\n* gitlab_fluentd::gitaly\n* gitlab_fluentd::nginx\n* gitlab_fluentd::pages\n* gitlab_fluentd::postgres\n* gitlab_fluentd::rails\n* gitlab_fluentd::shell\n* gitlab_fluentd::sidekiq\n* gitlab_fluentd::unicorn\n* gitlab_fluentd::workhorse\n* gitlab-server::ssh-users\n* gitlab_wale::default\n\nPlatform:\n---------\nx86_64-linux\n\n\nRunning handlers:\n[2019-07-31T21:01:59+00:00] ERROR: Running exception handlers\nRunning handlers complete\n[2019-07-31T21:01:59+00:00] ERROR: Exception handlers complete\nChef Client failed. 0 resources updated in 07 seconds\n[2019-07-31T21:01:59+00:00] FATAL: Stacktrace dumped to /var/chef/cache/chef-stacktrace.out\n[2019-07-31T21:01:59+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report\n[2019-07-31T21:01:59+00:00] ERROR: 412 \"Precondition Failed\"\n[2019-07-31T21:01:59+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)\n```","state":"closed","created_at":"2019-07-31T21:05:46.279Z","updated_at":"2022-08-07T19:03:10.953Z","closed_at":"2019-07-31T21:25:29.865Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["auto updated","workflow-infra::Done"],"milestone":null,"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":64248,"username":"stanhu","name":"Stan Hu","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/64248/stanhu.jpg","web_url":"https://gitlab.com/stanhu"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7394","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7394","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7394/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7394/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7394","relative":"#7394","full":"gitlab-com/gl-infra/reliability#7394"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23397689,"iid":7403,"project_id":1304532,"title":"Review PgBouncer Pool configuration and architecture","description":"Related issue [1014](https://gitlab.com/gitlab-com/gl-infra/production/issues/1014), from July 31st.\n\nIt is being observed that the current Database Pool configuration may be exhausting current Datanode CPU and memory capacity. That is, the settings of the number of connections allowed from each node and pool can be potentially harmful to the leader's performance.\n\nRight now, `max_connections` in the cluster is set at 300, a conservative number yet very above what is the best theoretical connection/throughput relation peak. The way that we calculate the _theoretical connection capacity_ is: `(cores / % effective usage) * scale_factor`. Effective usage is the client busy percentage, which can be calculated around 95% as this is a queue processing; scale_factor is a coefficient between 2 and 4. Within this, the best suitable amount of maximum _active_ connections would be around 130 and 200.\n\nBut, in the PgBouncer side, we currently have two nodes, each with 3 pools (2 intensive: production and sidekiq). Production pool is 50 and sidekiq is 75 on each node, meaning that there are potentially 250 active connections. \n\nFrom OnGres we need to:\n\n- Define the pool size on sidekiq and production for reducing the performance degradation occurrences that happened during the last days. \n- Splitting pools can offer better resilience when one of the pools is generating waits that affect other queues in the node. \n- Revisit other PgBouncer configuration. For instance: \n  - Current: `min_pool_size = 0`, recommended `min_pool_size = 20`. This opens a minimum amount of persistent connections, decreasing any possible startup time when issuing new connections.\n- If the split is necessary, establish the necessary amount of nodes per each pool and its configuration.\n\n\nRelated graphs:\n\nhttps://prometheus.gprd.gitlab.net/graph?g0.range_input=2w\u0026g0.expr=sum(sidekiq_queue_size)%20by%20(fqdn)\u0026g0.tab=0\nhttps://dashboards.gitlab.com/d/9GOIu9Siz/sidekiq-stats?orgId=1\u0026fullscreen\u0026panelId=71\u0026from=now-10d\u0026to=now\n\n\nIOWait on Pgbouncer https://dashboards.gitlab.com/d/PwlB97Jmk/pgbouncer-overview?from=1564563814425\u0026to=1564571034282\u0026fullscreen\u0026panelId=6","state":"closed","created_at":"2019-07-31T20:23:45.403Z","updated_at":"2021-06-24T08:10:10.584Z","closed_at":"2019-10-02T19:04:05.913Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["For Prioritization","Research","auto updated","priority::1","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"}],"author":{"id":2589296,"username":"emanuel_ongres","name":"Emanuel Calvo","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2589296/avatar.png","web_url":"https://gitlab.com/emanuel_ongres"},"type":"ISSUE","assignee":{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"},"user_notes_count":14,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7403","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":0,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7403","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7403/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7403/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7403","relative":"#7403","full":"gitlab-com/gl-infra/reliability#7403"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":125,"epic":{"id":10677,"iid":125,"title":"Investigate and Improve queue implementation (aka 10x Initiative)","url":"/groups/gitlab-com/-/epics/125","group_id":6543},"iteration":null,"health_status":null},{"id":23350105,"iid":7391,"project_id":1304532,"title":"Gitaly SLO alerts should go to pagerduty","description":"Gitaly latency SLO alerts are only going to Slack (https://gitlab.slack.com/archives/CD6HFD1L0/p1564559043204400) but not to pagerduty. We should be paged for those alerts.","state":"closed","created_at":"2019-07-31T13:01:20.419Z","updated_at":"2019-12-06T21:43:15.997Z","closed_at":"2019-08-21T09:34:08.598Z","closed_by":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"labels":["SRE:On-call","Service::Gitaly","alert","oncall","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7391","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7391","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7391/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7391/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7391","relative":"#7391","full":"gitlab-com/gl-infra/reliability#7391"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23349885,"iid":7390,"project_id":1304532,"title":"Alert on gitaly file descriptors","description":"Incident https://gitlab.com/gitlab-com/gl-infra/production/issues/1013 showed that alerting on file descriptors would help to detect incidents earlier.\n\n![image](/uploads/24356df96aff1adb137913083789a4fa/image.png)","state":"closed","created_at":"2019-07-31T12:55:40.953Z","updated_at":"2019-12-06T21:43:15.812Z","closed_at":"2019-09-05T09:37:13.998Z","closed_by":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"labels":["SRE:On-call","Service::Gitaly","oncall","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7390","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7390","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7390/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7390/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7390","relative":"#7390","full":"gitlab-com/gl-infra/reliability#7390"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23328620,"iid":7386,"project_id":1304532,"title":"Setup/update Terraform Admin Project","description":"Following a slight modification of the pattern [here](https://cloud.google.com/community/tutorials/managing-gcp-projects-with-terraform#add_organizationfolder-level_permissions), I propose utilizing the `env-zero` project as our central place to manage project permissions and service accounts for automation under #6810. @devin is already doing the same for https://ops.gitlab.net/gitlab-com/group-projects.\n\nAs for the modification, instead of using a single admin-level service account to provision resources in _all_ projects, we should create a service account for each project (environment), with permissions scoped to allow access to resources only within that project. Once a project is bootstrapped, the relevant credentials are then added to the environment-specific CI variables for automated terraform runs within that project. However, I'm still not sure if it is possible to have the project-specific service accounts in the terraform admin project, or within the projects they will be used to manage.\n\nThis issue is to track research/discovery and effort to implement this type of setup, including documentation and/or [a bootstrap script](https://github.com/monterail/terraform-bootstrap-example) to work around circular dependencies so that this project can also be managed in terraform, along with (possibly) relocating and consolidating the state files for all managed child projects (same questions/rationale as the point above about where to scope the project-specific service account).\n\n/cc @gitlab-com/gl-infra FYI for discussion","state":"closed","created_at":"2019-07-30T23:20:30.333Z","updated_at":"2020-03-13T23:09:26.002Z","closed_at":"2020-03-13T22:16:19.571Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["automation","team::Reliability","terraform","workflow-infra::Done"],"milestone":null,"assignees":[{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"}],"author":{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"},"type":"ISSUE","assignee":{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7386","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7386","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7386/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7386/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7386","relative":"#7386","full":"gitlab-com/gl-infra/reliability#7386"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":68,"epic":{"id":7622,"iid":68,"title":"Terraform Runs are not clean in any environment","url":"/groups/gitlab-com/gl-infra/-/epics/68","group_id":1112072,"human_readable_end_date":"Sep 22, 2019","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":23326253,"iid":7385,"project_id":1304532,"title":"RCA Deep Dive #7280","description":"@craig to perform a walk through of the incident during the DNA meeting on Wednesday, 31 July.","state":"closed","created_at":"2019-07-30T20:18:59.618Z","updated_at":"2022-08-07T19:03:17.020Z","closed_at":"2019-08-05T16:56:48.780Z","closed_by":{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"},"labels":["team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"}],"author":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"type":"ISSUE","assignee":{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-31","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7385","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7385","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7385/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7385/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7385","relative":"#7385","full":"gitlab-com/gl-infra/reliability#7385"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23321292,"iid":7384,"project_id":1304532,"title":"Postgres-related services nearing capacity in CaPlan dashaboard","description":"Postgres-related services are *nearing capacity* on the [Caplan dashboard](https://dashboards.gitlab.net/d/TeJU3AIWz/capacity-planning?orgId=1):\n\n![Screen_Shot_2019-07-30_at_7.47.34_PM](/uploads/f4075aab00becd7c66ba705f1055d97b/Screen_Shot_2019-07-30_at_7.47.34_PM.png)\n\nPlease investigate, and either fix the dashboard or create issues to address specific caplan concerns. Ongres should be aware of how the caplan metric is calculated so they can help.\n\nLink said issues to this issue and tag with `Obserbavility` and `caplan`.","state":"closed","created_at":"2019-07-30T17:15:26.976Z","updated_at":"2021-06-24T08:09:18.562Z","closed_at":"2019-09-06T09:31:29.947Z","closed_by":{"id":2493611,"username":"adescoms","name":"Adrián Escoms","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d6f86d318669a8b32174b7132607443d?s=80\u0026d=identicon","web_url":"https://gitlab.com/adescoms"},"labels":["Database","Observability-reliability","OnGres::Support","caplan","priority::1","severity::1","workflow-infra::Done"],"milestone":{"id":989400,"iid":38,"group_id":1112072,"title":"Database September part 1","description":"","state":"closed","created_at":"2019-09-03T10:14:40.685Z","updated_at":"2019-10-09T16:21:15.363Z","due_date":"2019-09-13","start_date":"2019-09-02","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/38"},"assignees":[{"id":895869,"username":"andrewn","name":"Andrew Newdigate","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/895869/avatar.png","web_url":"https://gitlab.com/andrewn"},{"id":2589296,"username":"emanuel_ongres","name":"Emanuel Calvo","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2589296/avatar.png","web_url":"https://gitlab.com/emanuel_ongres"},{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":895869,"username":"andrewn","name":"Andrew Newdigate","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/895869/avatar.png","web_url":"https://gitlab.com/andrewn"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-09-03","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7384","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7384","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7384/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7384/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7384","relative":"#7384","full":"gitlab-com/gl-infra/reliability#7384"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23312022,"iid":7383,"project_id":1304532,"title":"Move gstg back to wal-e","description":"We decided to discontinue testing wal-g in staging because it hinders our ability to test changes to wal-e before we release them to production.\n\nBackground: https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7359\n\n\u003e From a high level perspective, we transitioned over to use wal-g in staging in the beginning of 2019. We hoped to be able to use it in production too, to alleviate the pressure on the primary (wal-g is capable of taking basebackups off of a secondary, wal-e is not). However, we kept running into wal-g issues (with GCS in particular) and kept waiting on wal-g releases and so on. wal-g never made it to production because of that.\n\nThe task here is to actually move gstg back to use wal-e:\n\n* [x] Reconfigure gstg for wal-e\n* [x] Deploy change (daily backup, WAL push)\n* [x] ~~Resync DR replicas (they will not like this, we'll just resync with a (base)backup and use wal-e going forward).~~ Not needed as the transition was gapless. Letting them catch up now.\n* [x] Have backup testing project use wal-e for staging, too","state":"closed","created_at":"2019-07-30T15:21:01.575Z","updated_at":"2019-12-17T04:56:14.751Z","closed_at":"2019-08-01T07:09:01.086Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["Database [pl]","auto updated","backup","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7383","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":4},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7383","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7383/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7383/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7383","relative":"#7383","full":"gitlab-com/gl-infra/reliability#7383"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23292414,"iid":7374,"project_id":1304532,"title":"Use native instrumentation for camoproxy","description":"go-camo now has native Prometheus support.\n\n* [x] Enable monitoring in Prometheus scrape config.\n* [x] Cleanup textfile exporter.\n* [x] Remove obsolete `--stats` flag from gitlab-camoproxy cookbook.\n* [x] Add metrics to upstream go-camo to replace mtail metrics.\n* [x] Remove mtail watcher.\n* [x] Create Grafana dashboard.","state":"closed","created_at":"2019-07-30T08:30:12.183Z","updated_at":"2020-03-13T23:09:24.974Z","closed_at":"2020-03-13T22:12:00.840Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["auto updated","team::Reliability","workflow-infra::Done"],"milestone":{"id":1006849,"iid":45,"group_id":1112072,"title":"W41 Secure \u0026 Defend","description":"## Calendar\r\n\r\n|             \t| M 07 Oct \t| T 08 Oct \t| W 09 Oct \t| Th 10 Oct  | F 11 Oct\r\n|-------------\t|----------\t|----------\t|----------\t|----------- |----------\t\r\n| @bjk-gitlab \t| -        \t| -       \t| -        \t| -          | -\r\n| @craig      \t| On-call     \t| -        \t| -        \t| -          | -         \t\r\n| @craigf     \t| -        \t| -        \t| -   \t| On-call    | On-call\r\n| @cmiskell   \t| Moving   \t| Moving    | Moving  \t| Moving     | Moving  \t\r\n| @hphilipps  \t| Vacation \t| Vacation  | Vacation  | Vacation   | Vacation         \t\r\n| @msmiley    \t| -      \t| -      \t| -      \t| -          | -\r\n\r\nW41 working days: 16\r\n\r\n|             \t| M 14 Oct \t| T 15 Oct \t| W 16 Oct \t| Th 17 Oct  | F 18 Oct \r\n|-------------\t|----------\t|----------\t|----------\t|----------- |----------\r\n| @bjk-gitlab \t| -        \t| -        \t| -   \t    | -          | -   \r\n| @craig      \t| -        \t| -       \t| -       \t| -          | - \r\n| @craigf     \t| On-call  \t| On-call  \t| -      \t| -          | -   \r\n| @cmiskell   \t| -      \t| -        \t| -        \t| -          | Moving\r\n| @hphilipps  \t| Ill        \t| Ill        \t| Ill        \t| -          | - \r\n| @msmiley    \t| -        \t| On-call   | On-call  \t| On-call    | On-call\r\n\r\nW42 working days: 21\r\n\r\n\u003chr\u003e\r\n\r\n**Total working days: 37**","state":"closed","created_at":"2019-09-18T18:11:09.033Z","updated_at":"2019-11-12T23:45:39.396Z","due_date":"2019-10-20","start_date":"2019-10-07","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/45"},"assignees":[{"id":928230,"username":"bjk-gitlab","name":"Ben Kochie","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/928230/avatar.png","web_url":"https://gitlab.com/bjk-gitlab"}],"author":{"id":928230,"username":"bjk-gitlab","name":"Ben Kochie","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/928230/avatar.png","web_url":"https://gitlab.com/bjk-gitlab"},"type":"ISSUE","assignee":{"id":928230,"username":"bjk-gitlab","name":"Ben Kochie","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/928230/avatar.png","web_url":"https://gitlab.com/bjk-gitlab"},"user_notes_count":6,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7374","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":6,"completed_count":6},"weight":3,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7374","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7374/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7374/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7374","relative":"#7374","full":"gitlab-com/gl-infra/reliability#7374"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":90,"epic":{"id":11989,"iid":90,"title":"Migrate Camoproxy into Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/90","group_id":1112072,"human_readable_end_date":"Aug 5, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":23284858,"iid":7372,"project_id":1304532,"title":"Right-size redis persistent persistent and redis-sidekiq nodes","description":"The redis-sidekiq nodes were sized the same as the previous redis-persistent nodes, as n1-standard-8, for safety during the initial migration.   This gives them 8 CPU and 30GB of RAM\n\nAll of our redis nodes generally need no more than 2 CPU (1 for redis, 1 for other things); the sizing is for RAM.\n\nRedis on the redis-sidekiq nodes is currently using \u003c1GB RES + VIRT, and another 7GB of general cache.  8GB RAM total would be more than enough.  And n1-standard-2 should be sufficient.\n\nOn the old redis persistent nodes, the running system is using about 9GB with 12GB of general cache.  We might be able to get away with 15GB RAM for this, but I'm less confident, and would like to see some more usage before deciding that.","state":"closed","created_at":"2019-07-30T03:58:04.685Z","updated_at":"2022-08-07T19:03:26.324Z","closed_at":"2019-08-13T02:26:59.582Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["auto updated","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7372","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7372","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7372/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7372/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7372","relative":"#7372","full":"gitlab-com/gl-infra/reliability#7372"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23271205,"iid":7370,"project_id":1304532,"title":"GitLab.com Performance Metric","description":"Per https://about.gitlab.com/handbook/engineering/infrastructure/performance-indicators/#gitlab-com-performance, we need to produce a performance metric that _reflects the performance of GitLab as experienced by users_. Something along these lines was outlined in the [Service Levels and Error Budgets](https://about.gitlab.com/handbook/engineering/infrastructure/blueprint/service-levels-error-budgets/) blueprint.\n\nLet's do a first (if possibly rough) iteration, whether with Pingdom or Thousand Eyes. In particular, we can start using the [SLIs outlined in the blueprint](https://about.gitlab.com/handbook/engineering/infrastructure/blueprint/service-levels-error-budgets/#slis).\n\nPlease update the Infrastructure Performance Indicators handbook page to reflect the health, maturity and URL for the data.","state":"closed","created_at":"2019-07-29T15:40:10.195Z","updated_at":"2022-08-07T19:03:27.076Z","closed_at":"2020-10-08T11:35:25.389Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["For Prioritization","Observability-reliability","auto updated","caplan","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-08-09","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7370","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7370","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7370/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7370/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7370","relative":"#7370","full":"gitlab-com/gl-infra/reliability#7370"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23174740,"iid":7359,"project_id":1304532,"title":"postgres-dr-delayed-01-db-gstg replication is broken","description":"```\nAlertname: PostgreSQL_ReplicationLagTooLarge_DelayedReplica\n Channel: database\n Env: gstg\n Environment: gstg\n Fqdn: postgres-dr-delayed-01-db-gstg.c.gitlab-staging-1.internal\n```\n\n```note: Replication lag on server postgres-dr-archive-01-db-gstg.c.gitlab-staging-1.internal:9187 is currently 9d 2h 7m 11s```\n\nFrom the logs:\n```\n2019-07-26_00:18:07.60831 ERROR: 2019/07/26 00:18:07.608213 Archive '0000006200003C7500000073' does not exist.\n2019-07-26_00:18:07.93544 ERROR: 2019/07/26 00:18:07.935350 Archive '00000063.history' does not exist.\n```","state":"closed","created_at":"2019-07-26T00:24:50.159Z","updated_at":"2022-08-07T20:02:47.749Z","closed_at":"2019-07-30T15:21:51.995Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["auto updated","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7359","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7359","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7359/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7359/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7359","relative":"#7359","full":"gitlab-com/gl-infra/reliability#7359"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23167854,"iid":7357,"project_id":1304532,"title":"Create Runbook documentation for all types of Access Request","description":"The existing How To guide is severely lacking. We need to better the documentation in our [runbook](https://gitlab.com/gitlab-com/runbooks/blob/master/howto/access-requests.md).","state":"closed","created_at":"2019-07-25T18:19:12.056Z","updated_at":"2022-08-07T20:02:48.990Z","closed_at":"2022-08-02T06:04:46.364Z","closed_by":{"id":1786152,"username":"gitlab-bot","name":"🤖 GitLab Bot 🤖","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1786152/avatar.png","web_url":"https://gitlab.com/gitlab-bot"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[],"author":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7357","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7357","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7357/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7357/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7357","relative":"#7357","full":"gitlab-com/gl-infra/reliability#7357"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23166908,"iid":7356,"project_id":1304532,"title":"Enable external merge request diff storage","description":"On GitLab.com, `merge_request_diff_files` is the biggest table at about 1.1TB currently and it grows at a rate of about 60 GB per month.\n\n![Screenshot_from_2019-07-25_18-59-00](/uploads/cb49c0e72b8b4ca62dbdee6a27ffc5a3/Screenshot_from_2019-07-25_18-59-00.png)\n\nWe should look into enabling external merge request diff storage as pointed out below: https://docs.gitlab.com/ee/administration/merge_request_diffs.html\n\n### Update (2020-02-26):\n\nThe current size of the relevant table `merge_request_diff_files` is 1,659 GB out of 5,400 GB total database size (about 30% of the total database size is this single table). Once the migration is done, all of this data should live outside the database and reduce the database size by 30%.","state":"closed","created_at":"2019-07-25T16:57:39.499Z","updated_at":"2022-12-01T00:48:39.285Z","closed_at":"2020-03-27T13:57:53.736Z","closed_by":{"id":506061,"username":"ahmadsherif","name":"Ahmad Sherif","state":"active","avatar_url":"https://secure.gravatar.com/avatar/bd6d0ec4213b91601956c9f801cbfe9b?s=80\u0026d=identicon","web_url":"https://gitlab.com/ahmadsherif"},"labels":["dogfooding","gitlab.com","priority::2","severity::2","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":506061,"username":"ahmadsherif","name":"Ahmad Sherif","state":"active","avatar_url":"https://secure.gravatar.com/avatar/bd6d0ec4213b91601956c9f801cbfe9b?s=80\u0026d=identicon","web_url":"https://gitlab.com/ahmadsherif"}],"author":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"type":"ISSUE","assignee":{"id":506061,"username":"ahmadsherif","name":"Ahmad Sherif","state":"active","avatar_url":"https://secure.gravatar.com/avatar/bd6d0ec4213b91601956c9f801cbfe9b?s=80\u0026d=identicon","web_url":"https://gitlab.com/ahmadsherif"},"user_notes_count":74,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7356","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7356","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7356/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7356/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7356","relative":"#7356","full":"gitlab-com/gl-infra/reliability#7356"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":374,"epic":{"id":33752,"iid":374,"title":"Reduce total size and growth of GitLab.com's PostgreSQL database","url":"/groups/gitlab-com/-/epics/374","group_id":6543},"iteration":null,"health_status":null},{"id":23755565,"iid":7535,"project_id":1304532,"title":"Upgrade and verify all `fe-*` hosts are running the same kernel, OS, and HAProxy hosts.","description":"After reading through production#956, I would like to see all `fe-*` boxes configured with the latest version of https://gitlab.com/gitlab-cookbooks/gitlab-haproxy and are running the same underlying OS and kernel.","state":"closed","created_at":"2019-07-25T14:21:14.452Z","updated_at":"2022-08-07T20:03:00.445Z","closed_at":"2021-08-23T02:29:33.291Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[],"author":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"type":"ISSUE","assignee":null,"user_notes_count":6,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7535","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7535","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7535/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7535/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7535","relative":"#7535","full":"gitlab-com/gl-infra/reliability#7535"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23136657,"iid":7341,"project_id":1304532,"title":"Delete performance.gitlab.net cert in sslmate","description":"It just auto renewed:\n```\nFrom: SSLMate \u003csupport@sslmate.com\u003e\nTo: ops-notifications@gitlab.com\nSubject: SSLMate Certificates for performance.gitlab.net\n\n\nYour certificates for performance.gitlab.net are ready!\n```\nbut we don't use it anymore (replaced by dashboards.gitlab.net).  We need to stop auto-renewing it and let it expire gracefully","state":"closed","created_at":"2019-07-25T03:11:56.536Z","updated_at":"2022-08-07T20:03:02.073Z","closed_at":"2019-07-25T03:14:48.155Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7341","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7341","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7341/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7341/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7341","relative":"#7341","full":"gitlab-com/gl-infra/reliability#7341"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23136455,"iid":7340,"project_id":1304532,"title":"imap_mailbox_exporter not working","description":"While working on gitlab-cookbooks/gitlab-exporters!97 I encountered the `gitlab-exporters::imap_mailbox_exporter` recipe failing on my kitchen setup. Unable to figure out why, I went to a production mailroom box to encounter it had the same issue:\n\n```\n2019-02-15_13:37:37.07491 time=\"2019-02-15T13:37:37Z\" level=info msg=\"Exporter listening on 0.0.0.0:9117\" source=\"imap-mailbox-exporter.go:194\"\n2019-02-15_13:37:37.07501 time=\"2019-02-15T13:37:37Z\" level=fatal msg=\"listen tcp 0.0.0.0:9117: bind: address already in use\" source=\"imap-mailbox-exporter.go:196\"\n```\n\nThe production log at `/var/log/prometheus/imap_mailbox_exporter/current` on mailroom-02-sv-gprd.c.gitlab-production.internal also has some other errors, the point being that the exporter is not serving data (`curl localhost:9117` just hangs)\n\n/cc @ahmadsherif since I see your name in that recipe's code","state":"closed","created_at":"2019-07-25T02:57:43.571Z","updated_at":"2022-08-07T20:03:03.496Z","closed_at":"2019-10-02T19:57:19.709Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":3,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7340","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7340","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7340/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7340/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7340","relative":"#7340","full":"gitlab-com/gl-infra/reliability#7340"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23135310,"iid":7339,"project_id":1304532,"title":"Anomaly-based detection of sidekiq queue size","description":"Following from https://gitlab.com/gitlab-com/gl-infra/production/issues/992 we only alert on some specific sidekiq_queue_size labels, or generically if a given queue exceeds 50000.\n\nIt seems to me that we could use some of the anomaly detection techniques already established (recording rules in `rules/service_ops_rate.yml`, alerts in `rules/general-service-alerts.yml`) to be more flexible about noticing unusual volumes of queuing (such as we had in the incident), rather than trying to manage hard-coded limits.","state":"closed","created_at":"2019-07-25T01:18:15.298Z","updated_at":"2020-01-06T19:45:41.364Z","closed_at":"2019-09-09T00:10:59.585Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["Service::Sidekiq","corrective action","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7339","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7339","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7339/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7339/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7339","relative":"#7339","full":"gitlab-com/gl-infra/reliability#7339"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23133138,"iid":7337,"project_id":1304532,"title":"Update runit cookbook to v5.x","description":"One of the errors we encountered [while testing chef-client 15](https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7258) was with the `runit` cookbook. We should update to v5.x of it. Notice that according to their CHANGELOG versions \u003e= 5.0 require at least chef 14 https://github.com/chef-cookbooks/runit/blob/master/CHANGELOG.md#500-2019-02-04. This means that the cookbook updates for these updates will need to held for deployment until we roll out chef 15.\n\nAccording to chef-repo's Berksfile.lock, the following cookbooks are pinned to runit ~\u003e 4.3 and will need update:\n\n- gitlab-alertmanager: https://gitlab.com/gitlab-cookbooks/gitlab-alertmanager/merge_requests/40\n- gitlab-camoproxy: https://gitlab.com/gitlab-cookbooks/gitlab-camoproxy/merge_requests/10\n- gitlab-elk: https://gitlab.com/gitlab-cookbooks/gitlab-elk/merge_requests/111\n- gitlab-exporters: https://gitlab.com/gitlab-cookbooks/gitlab-exporters/merge_requests/97\n- gitlab-monitor: https://gitlab.com/gitlab-cookbooks/gitlab-monitor/merge_requests/27\n- gitlab-mtail: https://gitlab.com/gitlab-cookbooks/gitlab-mtail/merge_requests/45\n- gitlab-prometheus: https://gitlab.com/gitlab-cookbooks/gitlab-prometheus/merge_requests/458\n\nIdeally in those MRs we add rspec examples if missing, and include the recipes that use `runit_service` in kitchen to make sure the update didn't break them.\n\nPart of https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/6942\n\n/cc @ahanselka @nnelson @devin @cmcfarland @dawsmith","state":"closed","created_at":"2019-07-24T21:29:04.929Z","updated_at":"2022-08-07T20:03:05.536Z","closed_at":"2019-08-08T00:49:58.563Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["auto updated","chef","team::Reliability","workflow-infra::Done"],"milestone":{"id":878550,"iid":26,"group_id":1112072,"title":"CI/CD \u0026 Enablement - FY20Q2::KR::Chef 15 and Consul for service registration","description":"We are currently running most chef clients on Chef 12 and the current version is Chef 15.  This KR will scope the size of the effort to upgrade nodes in production to chef 15 and pick a reasonable effort to do in Q2.\r\n\r\nWe also had carry over for finishing Consul service registration work from 2019FYQ1.\r\n\r\nEpics:\r\n1. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/69\r\n2. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/57","state":"closed","created_at":"2019-05-17T22:46:07.911Z","updated_at":"2019-12-04T21:44:14.005Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/26"},"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7337","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7337","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7337/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7337/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7337","relative":"#7337","full":"gitlab-com/gl-infra/reliability#7337"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23130461,"iid":7334,"project_id":1304532,"title":"Plan In lieu of Automating Access Request issues","description":"Access Requests are a source of ~toil for the SRE on-call and SRE managers. Issues are manually ingested and approved blindly. After a requestor's manager approves the issue, SRE managers have no way of knowing whether the requestor should or should not be granted access–nor should we. If these issues are used as an audit trail, I'm no longer comfortable adding my approval. And if we should continue processing without challenge, then I propose we remove the below language altogether.\n\n\u003e INFRASTRUCTURE MANAGER: For requests involving access to critical Infrastructure systems, an additional layer of approval is required. Review the requests and, if approved, copy and paste `/label ~\"InfrastructureApproved\"`\n\nLongterm, I expect we will roll out role-based access using OKTA and IAM. But, regardless of the outcome of the aforementioned approval process, an SRE's focus should not be hampered with access requests. Short of fully automating the workflow, I advocate for one of the following options.\n\n1. Process requests in batch by type at the start of each week.  \n_or_  \n2. Document the process and instruct requestors to submit merge requests to the cookbook.\n\n\n@gitlab-com/gl-infra/managers \n\nCc @glopezfernandez","state":"closed","created_at":"2019-07-24T19:27:00.624Z","updated_at":"2022-08-07T20:03:06.897Z","closed_at":"2022-08-02T06:04:47.355Z","closed_by":{"id":1786152,"username":"gitlab-bot","name":"🤖 GitLab Bot 🤖","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1786152/avatar.png","web_url":"https://gitlab.com/gitlab-bot"},"labels":["Infrastructure mStaff","ManagerAction","VP of Infrastructure","toil","workflow-infra::Done"],"milestone":null,"assignees":[],"author":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"type":"ISSUE","assignee":null,"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7334","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7334","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7334/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7334/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7334","relative":"#7334","full":"gitlab-com/gl-infra/reliability#7334"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23118017,"iid":7331,"project_id":1304532,"title":"The latest version of the prometheus-operator breaks during upgrade","description":"Due to not locking down the version of our component: https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7110\n\nIn the `pre` environment, we run into the following (this was from testing locally):\n\n```\nUPGRADE FAILED\nError: Deployment.apps \"gitlab-monitoring-kube-state-metrics\" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\"app.kubernetes.io/name\":\"kube-state-metrics\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable\nError: UPGRADE FAILED: Deployment.apps \"gitlab-monitoring-kube-state-metrics\" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\"app.kubernetes.io/name\":\"kube-state-metrics\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable\nStopping Tiller...\nError: plugin \"tiller\" exited with error\n25s monitoring master● % helm search stable/prometheus-operator\nNAME                            CHART VERSION   APP VERSION     DESCRIPTION                                               \nstable/prometheus-operator      6.1.0           0.31.1          Provides easy monitoring definitions for Kubernetes servi...\n56s monitoring master● %\n```\n\nThis is an upgrade from version 5.15.0.  (currently running on gstg)\n\nUse this issue to figure out what is going on and what we need to accomplish to cleanly upgrade the `gstg` without downtime.  This is to be utilized as a practice run to determine how we can investigate and perform clean upgrades between versions of a component that we do not manage.\n\n/cc @gitlab-org/delivery","state":"closed","created_at":"2019-07-24T14:04:30.410Z","updated_at":"2022-08-07T20:03:09.605Z","closed_at":"2019-07-25T15:32:21.847Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["auto updated","kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7331","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7331","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7331/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7331/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7331","relative":"#7331","full":"gitlab-com/gl-infra/reliability#7331"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23108892,"iid":7322,"project_id":1304532,"title":"Cleanup up Postgres runbooks","description":"Some Postgres runbooks still have references to REPMGR. Let's review the runbooks and bring them up to date.","state":"closed","created_at":"2019-07-24T09:30:08.338Z","updated_at":"2019-12-06T21:42:54.698Z","closed_at":"2019-09-09T11:50:30.259Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["Observability","Observability-reliability","caplan","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":4,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7322","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7322","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7322/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7322/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7322","relative":"#7322","full":"gitlab-com/gl-infra/reliability#7322"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23108666,"iid":7321,"project_id":1304532,"title":"Google network failure detection","description":"We seem to have had a number of failures on Google's network recently. During the RCA Deep Dive for https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7314, @andrewn brought up the idea of investigating how to determine the health of the network, perhaps by looking at an aggregate of our network traffic and looking for significant deviations. IF nothing else, this will help us better troubleshoot and track root causes.","state":"closed","created_at":"2019-07-24T09:21:55.425Z","updated_at":"2022-08-07T20:03:17.650Z","closed_at":"2020-08-16T21:21:40.602Z","closed_by":{"id":5709244,"username":"albertoramos","name":"Alberto Ramos","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/5709244/avatar.png","web_url":"https://gitlab.com/albertoramos"},"labels":["Observability","Observability-reliability","auto updated","caplan","corrective action","priority::4","workflow-infra::Done"],"milestone":null,"assignees":[],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":null,"user_notes_count":11,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7321","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7321","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7321/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7321/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7321","relative":"#7321","full":"gitlab-com/gl-infra/reliability#7321"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":"needs_attention"},{"id":23081589,"iid":7314,"project_id":1304532,"title":"RCA Deep Dive #7275","description":"@ahmadsherif and @craigf we'll perform a walkthrough of the incident during the DNA meeting on 24 Jul. Please re-familiarize yourselves with the incident and RCA. This issue has much more to do with process than troubleshooting. It's a great example of SRE's executing tasks that normally would be executed by a DBRE.","state":"closed","created_at":"2019-07-23T12:00:28.574Z","updated_at":"2022-08-07T22:03:15.006Z","closed_at":"2019-07-24T12:35:06.140Z","closed_by":{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"},"labels":["auto updated","workflow-infra::Done"],"milestone":null,"assignees":[{"id":506061,"username":"ahmadsherif","name":"Ahmad Sherif","state":"active","avatar_url":"https://secure.gravatar.com/avatar/bd6d0ec4213b91601956c9f801cbfe9b?s=80\u0026d=identicon","web_url":"https://gitlab.com/ahmadsherif"},{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"},{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"}],"author":{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"},"type":"ISSUE","assignee":{"id":506061,"username":"ahmadsherif","name":"Ahmad Sherif","state":"active","avatar_url":"https://secure.gravatar.com/avatar/bd6d0ec4213b91601956c9f801cbfe9b?s=80\u0026d=identicon","web_url":"https://gitlab.com/ahmadsherif"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7314","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7314","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7314/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7314/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7314","relative":"#7314","full":"gitlab-com/gl-infra/reliability#7314"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":83,"epic":{"id":9817,"iid":83,"title":"RCA Deep Dives","url":"/groups/gitlab-com/gl-infra/-/epics/83","group_id":1112072,"human_readable_timestamp":"\u003cstrong\u003e1389\u003c/strong\u003e days elapsed"},"iteration":null,"health_status":null},{"id":23065560,"iid":7308,"project_id":1304532,"title":"Make GKE node pools Production Ready","description":"I’ve noticed a few things we’re going to have to think about with using terraform to manage K8s. Mainly that we’re probably going to have to use multiple node pools, if not multiple clusters for production instances.  \n\nAny change to the nodes (disk space, etc.) results in the entire node pool being deleted and re-created at once, including all running pods.  It doesn’t do it in a rolling way like you’d expect.\n\nThis issue is to track investigating whether there is a way to make it roll updates, or whether we need to find a workaround so that we can run these changes with no downtime.\n\n/cc @skarbek","state":"closed","created_at":"2019-07-22T23:58:22.249Z","updated_at":"2022-08-07T22:03:19.635Z","closed_at":"2019-08-06T16:14:49.496Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["Kubernetes::Prep","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7308","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7308","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7308/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7308/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7308","relative":"#7308","full":"gitlab-com/gl-infra/reliability#7308"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":70,"epic":{"id":7650,"iid":70,"title":"Migrate the GitLab Registry Service to Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/70","group_id":1112072},"iteration":null,"health_status":null},{"id":23055856,"iid":7307,"project_id":1304532,"title":"Review of Postgres failovers over the last 4 weeks","description":"We seem to have had more failover activity over the last few weeks.\n\nLet's get Ongres to review relevant failover data and report on why this has been the case.","state":"closed","created_at":"2019-07-22T16:13:51.162Z","updated_at":"2022-08-07T22:03:20.333Z","closed_at":"2019-08-08T16:16:50.515Z","closed_by":{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"},"labels":["Database","Database","Global:In Progress","Observability-reliability","OnGres::Support","caplan","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-26","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7307","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7307","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7307/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7307/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7307","relative":"#7307","full":"gitlab-com/gl-infra/reliability#7307"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23055597,"iid":7306,"project_id":1304532,"title":"Rename scoped Team Labels","description":"To keep work on the appropriate managers' boards, we'll need to rename the scoped labels. I'm proposing we use\n- `team::observability`\n- `team::availability`\n- `team::reliability`\n\n@Finotto @dawsmith","state":"closed","created_at":"2019-07-22T16:02:35.433Z","updated_at":"2022-08-07T22:03:21.200Z","closed_at":"2019-07-23T13:14:24.507Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["ManagerAction","workflow-infra::Done"],"milestone":null,"assignees":[{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"}],"author":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"type":"ISSUE","assignee":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":"2019-08-02","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7306","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7306","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7306/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7306/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7306","relative":"#7306","full":"gitlab-com/gl-infra/reliability#7306"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23050307,"iid":7301,"project_id":1304532,"title":"Availability: MTTR Metric =\u003e 90%","description":"Define, develop and track `Mean-Time-to-Recover` (MTTR) metric as a KPI for  Infrastructure as a department. Iterate as necessary.\n\nUpdate URL, Health, Maturity and Next Steps on the Handbook's [Infrastructure Performance Indicators](https://about.gitlab.com/handbook/engineering/infrastructure/performance-indicators/#mean-time-to-recovery-mttr) page as necessary.\n\nEpic : https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/88","state":"closed","created_at":"2019-07-22T13:10:24.243Z","updated_at":"2022-08-07T22:03:24.403Z","closed_at":"2020-05-26T20:50:16.759Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["Infrastructure mStaff","KPI","ManagerAction","auto updated","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-29","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7301","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7301","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7301/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7301/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7301","relative":"#7301","full":"gitlab-com/gl-infra/reliability#7301"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":88,"epic":{"id":11098,"iid":88,"title":"MTTR metric and 100%  issues with severities, RCAs,  error budgets","url":"/groups/gitlab-com/gl-infra/-/epics/88","group_id":1112072},"iteration":null,"health_status":null},{"id":23050298,"iid":7300,"project_id":1304532,"title":"Observability: MTTD Metric","description":"Define, develop and track `Mean-Time-to-Detect` (MTTD) metric as a KPI for  Infrastructure as a department. Iterate as necessary.\n\nUpdate URL, Health, Maturity and Next Steps on the Handbook's [Infrastructure Performance Indicators](https://about.gitlab.com/handbook/engineering/infrastructure/performance-indicators/#mean-time-to-detection-mttd) page as necessary.","state":"closed","created_at":"2019-07-22T13:09:57.039Z","updated_at":"2021-06-24T08:09:19.268Z","closed_at":"2020-07-21T20:49:02.178Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["Infrastructure mStaff","KPI","ManagerAction","Observability","priority::1","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"user_notes_count":12,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2020-02-28","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7300","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7300","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7300/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7300/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":"https://gitlab.com/api/v4/projects/7764/issues/8090"},"references":{"short":"#7300","relative":"#7300","full":"gitlab-com/gl-infra/reliability#7300"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":128,"epic":{"id":16018,"iid":128,"title":"Measure Incident Mean Time to Detection (MTTD)","url":"/groups/gitlab-com/gl-infra/-/epics/128","group_id":1112072,"human_readable_end_date":"Mar 13, 2020","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":23050278,"iid":7299,"project_id":1304532,"title":"Reliability: MTBF Metric =\u003e 90%","description":"Define, develop and track `Mean-Time-between-Failures` (MTBF) metric as a KPI for both Infrastructure as a department and Site Reliability Engineering as a team. Iterate as necessary.\n\nUpdate URL, Health, Maturity and Next Steps on the Handbook's [Infrastructure Performance Indicators](https://about.gitlab.com/handbook/engineering/infrastructure/performance-indicators/#mean-time-between-failures-mtbf) page as necessary.","state":"closed","created_at":"2019-07-22T13:09:17.543Z","updated_at":"2022-08-07T22:03:25.514Z","closed_at":"2020-06-08T17:20:02.435Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["Infrastructure mStaff","KPI","ManagerAction","auto updated","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2222520,"username":"dawsmith","name":"Dave Smith","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ef341e061f6b86461626e64c5fbcfe52?s=80\u0026d=identicon","web_url":"https://gitlab.com/dawsmith"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":2222520,"username":"dawsmith","name":"Dave Smith","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ef341e061f6b86461626e64c5fbcfe52?s=80\u0026d=identicon","web_url":"https://gitlab.com/dawsmith"},"user_notes_count":10,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-29","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7299","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7299","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7299/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7299/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7299","relative":"#7299","full":"gitlab-com/gl-infra/reliability#7299"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23045213,"iid":7296,"project_id":1304532,"title":"Rebuild patroni-06 instance","description":"After https://gitlab.com/gitlab-com/gl-infra/production/issues/948 has closed out, we're left with a shut down and otherwise unused patroni-06 instance.\n\nWe should clean up and do one of the following:\n\n1. Rebuild patroni-06 and remove patroni-07 from the cluster\n1. Just terminate/delete patroni-06, leaving back a \"gap\" in the instance name sequence (does TF cope with that well?)","state":"closed","created_at":"2019-07-22T10:28:37.645Z","updated_at":"2019-12-06T21:43:34.669Z","closed_at":"2019-07-29T12:29:01.243Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["Database [pl]","auto updated","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7296","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7296","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7296/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7296/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7296","relative":"#7296","full":"gitlab-com/gl-infra/reliability#7296"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23033031,"iid":7294,"project_id":1304532,"title":"More CPU for sidekiq-pipeline nodes?","description":"updated:\nThere have been some intermittent reports lately of pipelines not running in a timely fashion.  I believe this is due to CPU contention on the pipeline sidekiq nodes at peaks, and we should consider giving those nodes more CPU.\n\nOriginal:\nThere have been some intermittent reports lately of pipelines not running in a timely fashion.  I believe this is due to increased load on the pipeline sidekiq nodes, and we may have to expand this group from 3 to 4, or more.","state":"closed","created_at":"2019-07-22T00:14:59.610Z","updated_at":"2022-08-07T22:03:29.072Z","closed_at":"2019-07-29T22:37:43.529Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["Service::Sidekiq","auto updated","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"user_notes_count":19,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7294","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7294","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7294/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7294/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7294","relative":"#7294","full":"gitlab-com/gl-infra/reliability#7294"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23010576,"iid":7293,"project_id":1304532,"title":"DR Site Patroni won't stay replicated","description":"The runbook to resynchronize the DR site database from the master using WAL replication works.  It takes a day or so, but it ends up replicated.  https://gitlab.com/gitlab-com/runbooks/blob/master/howto/geo-patroni-cluster.md\n\nHowever it has never stayed synchronized.  We have to manually resync it every week or two. This will not work when we go live.  It needs to stay replicated on its own.\n\nThis time, it looks like something going on with Patroni:\n\n```\n+---------------+---------------------------------------+--------------+------+----------+----+-----------+\n|    Cluster    |                 Member                |     Host     | Role |  State   | TL | Lag in MB |\n+---------------+---------------------------------------+--------------+------+----------+----+-----------+\n| pg-ha-cluster | patroni-01-db-dr.c.gitlab-dr.internal | 10.251.9.101 |      | starting |    |   unknown |\n| pg-ha-cluster | patroni-02-db-dr.c.gitlab-dr.internal | 10.251.9.102 |      | starting |    |   unknown |\n| pg-ha-cluster | patroni-03-db-dr.c.gitlab-dr.internal | 10.251.9.103 |      | starting |    |   unknown |\n+---------------+---------------------------------------+--------------+------+----------+----+-----------+\n```\n\n@Finotto @dawsmith @abrandl - can we get Ongres or someone more familiar with our database set up to take a look at this and make some recommendations?","state":"closed","created_at":"2019-07-19T21:31:04.743Z","updated_at":"2022-08-07T22:03:29.796Z","closed_at":"2020-07-09T12:32:25.304Z","closed_by":{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"},"labels":["Database","Geo","OnGres::Support","priority::2","workflow-infra::Done"],"milestone":{"id":1239654,"iid":76,"group_id":1112072,"title":"W16 DBRE","description":"","state":"closed","created_at":"2020-04-14T09:14:09.392Z","updated_at":"2020-05-13T19:56:10.734Z","due_date":"2020-05-08","start_date":"2020-04-14","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/76"},"assignees":[{"id":2493611,"username":"adescoms","name":"Adrián Escoms","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d6f86d318669a8b32174b7132607443d?s=80\u0026d=identicon","web_url":"https://gitlab.com/adescoms"}],"author":{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"},"type":"ISSUE","assignee":{"id":2493611,"username":"adescoms","name":"Adrián Escoms","state":"active","avatar_url":"https://secure.gravatar.com/avatar/d6f86d318669a8b32174b7132607443d?s=80\u0026d=identicon","web_url":"https://gitlab.com/adescoms"},"user_notes_count":78,"merge_requests_count":0,"upvotes":3,"downvotes":0,"due_date":"2020-05-29","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7293","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7293","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7293/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7293/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7293","relative":"#7293","full":"gitlab-com/gl-infra/reliability#7293"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":12,"epic":{"id":1144,"iid":12,"title":"GEO for DR for GitLab.com","url":"/groups/gitlab-com/gl-infra/-/epics/12","group_id":1112072,"human_readable_end_date":"May 8, 2020","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":23005476,"iid":7292,"project_id":1304532,"title":"Cleanup DNS Information in Runbooks","description":"We have some stale runbooks that reference PowerDNS, which is apparently no longer in use (discovered in gitlab-com/gl-infra/infrastructure#2332).\n\nWe need to move https://gitlab.com/gitlab-com/runbooks/blob/master/howto/internal_dns.md to simply `dns.md` and include information about external DNS, too (see @dawsmith's comment in https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/3004#note_193464998).","state":"closed","created_at":"2019-07-19T16:38:14.226Z","updated_at":"2022-08-07T22:03:31.267Z","closed_at":"2021-09-01T04:22:12.967Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["runbook","workflow-infra::Done"],"milestone":null,"assignees":[],"author":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7292","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7292","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7292/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7292/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7292","relative":"#7292","full":"gitlab-com/gl-infra/reliability#7292"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23004685,"iid":7290,"project_id":1304532,"title":"RCA Deep Dive of gitlab-com/gl-infra/infrastructure#7090","description":"@abrandl and @cmcfarland we'll perform a walk through of the incident during the DNA meeting on 24 Jul. Please re-familiarize yourselves with the incident and RCA. This issue has much more to do with process than troubleshooting. It's a great example, illustrative of successful collaboration between Development and Infrastructure, overlapping on-calls for DBRE and SRE, and well executed corrective actions. Also, with the timezone split, this issue can be covered in both the EMEA and Americas timezones!","state":"closed","created_at":"2019-07-19T15:50:01.811Z","updated_at":"2022-08-09T02:03:36.917Z","closed_at":"2019-07-24T15:19:07.913Z","closed_by":{"id":194566,"username":"cmcfarland","name":"Cameron McFarland","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0fea59864aa5c034e15089251bf9fa8f?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmcfarland"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[{"id":194566,"username":"cmcfarland","name":"Cameron McFarland","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0fea59864aa5c034e15089251bf9fa8f?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmcfarland"},{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"type":"ISSUE","assignee":{"id":194566,"username":"cmcfarland","name":"Cameron McFarland","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0fea59864aa5c034e15089251bf9fa8f?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmcfarland"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-24","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7290","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7290","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7290/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7290/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7290","relative":"#7290","full":"gitlab-com/gl-infra/reliability#7290"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":83,"epic":{"id":9817,"iid":83,"title":"RCA Deep Dives","url":"/groups/gitlab-com/gl-infra/-/epics/83","group_id":1112072,"human_readable_timestamp":"\u003cstrong\u003e1389\u003c/strong\u003e days elapsed"},"iteration":null,"health_status":null},{"id":23004148,"iid":7288,"project_id":1304532,"title":"Proposed Label Cleanup","description":"I've cleaned house and deleted some really old labels with \u003c 10 issues, most or all of which were closed with updates longer than one year ago.\n\nMy list of remaining issues I'm less sure about are in the table below.\n\n|Label Name | Total Number of Issues | Remove |Reason|\n|-----------|-----------------------:|-------:|------|\n|Bronze     |                       6|       Y||\n|moved 1    |                     203|       Y|| \n|moved 2    |                      74|       Y||\n|moved 3    |                      33|       Y||\n|moved 4    |                      17|       Y||\n|critical   |                     118|       Y|Captured by priority labels|","state":"closed","created_at":"2019-07-19T15:28:45.363Z","updated_at":"2021-06-24T08:09:19.936Z","closed_at":"2019-09-13T21:26:24.115Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["ManagerAction","workflow-infra::Done"],"milestone":null,"assignees":[{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"}],"author":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"type":"ISSUE","assignee":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-23","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7288","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7288","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7288/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7288/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7288","relative":"#7288","full":"gitlab-com/gl-infra/reliability#7288"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23002661,"iid":7287,"project_id":1304532,"title":"Version.gitlab.com needs an elastic IP","description":"The AWS instance hosting version.gitlab.com will change IPs when restarted or stopped and started. It should be using an elastic IP address to prevent this from causing a long outage as the DNS is manually updated.\n\nThis issue is a case were this problem occurred: https://gitlab.com/gitlab-com/gl-infra/production/issues/978","state":"closed","created_at":"2019-07-19T15:08:22.265Z","updated_at":"2022-08-09T02:03:38.675Z","closed_at":"2019-09-20T18:05:56.573Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["Service::Version","corrective action","severity::4","workflow-infra::Done"],"milestone":null,"assignees":[],"author":{"id":194566,"username":"cmcfarland","name":"Cameron McFarland","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0fea59864aa5c034e15089251bf9fa8f?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmcfarland"},"type":"ISSUE","assignee":null,"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7287","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7287","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7287/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7287/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7287","relative":"#7287","full":"gitlab-com/gl-infra/reliability#7287"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":23002291,"iid":7286,"project_id":1304532,"title":"Investigate: Recent demo showed young Pods, without any known reason","description":"In a recent demo of our progress of implementing Kubernetes for the Container Registry, we realized the pods running for the registry were much younger than they should have been.  Utilize this issue to track why.  Create necessary documentation for troubleshooting purposes.","state":"closed","created_at":"2019-07-19T14:52:49.486Z","updated_at":"2022-08-09T02:03:39.236Z","closed_at":"2019-07-23T12:50:06.708Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["Service::Container Registry","documentation","kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7286","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7286","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7286/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7286/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7286","relative":"#7286","full":"gitlab-com/gl-infra/reliability#7286"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":77,"epic":{"id":8806,"iid":77,"title":"Sort out monitoring and alerting for Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/77","group_id":1112072},"iteration":null,"health_status":null},{"id":23002140,"iid":7285,"project_id":1304532,"title":"Kubernetes Deploys perform a set-it and forget-it style so we don't see failures","description":"When testing an upgrade of a Kubernetes Application, the deployment went through just fine, and helm thought the deployment was successful, however, the new replicaset that was created was not coming up properly.  The pod that was starting was stuck in a crashloop.  With this use case the deployment was technically not successful and required a roll back.  It would be wise to add something to our deployment pipeline to detect this failure and fail the pipeline in instances such as this.","state":"closed","created_at":"2019-07-19T14:46:24.440Z","updated_at":"2022-08-09T02:03:39.745Z","closed_at":"2019-08-01T13:47:12.405Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7285","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7285","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7285/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7285/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7285","relative":"#7285","full":"gitlab-com/gl-infra/reliability#7285"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":77,"epic":{"id":8806,"iid":77,"title":"Sort out monitoring and alerting for Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/77","group_id":1112072},"iteration":null,"health_status":null},{"id":23002061,"iid":7284,"project_id":1304532,"title":"Version of components not exposed in prometheus when deployed into Kubernetes","description":"Currently we don't have visibility via our metrics to which version of a component is running in Kubernetes.  We are running version 2.7.1 of the container registry, but I cannot seem to find this anywhere.  This would be useful in finding metrics specific to version changes, watching upgrades and roll backs run on clusters, and increase the visibility into what is running at any given time.","state":"closed","created_at":"2019-07-19T14:43:19.303Z","updated_at":"2022-08-09T02:03:40.237Z","closed_at":"2019-08-06T17:12:02.249Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7284","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7284","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7284/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7284/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7284","relative":"#7284","full":"gitlab-com/gl-infra/reliability#7284"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":77,"epic":{"id":8806,"iid":77,"title":"Sort out monitoring and alerting for Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/77","group_id":1112072},"iteration":null,"health_status":null},{"id":23000711,"iid":7283,"project_id":1304532,"title":"On a failed registry upgrade/downgrade we should alert if one of the pods fails to come up","description":"Downgrading the registry to version 2.7.0:\n\ncan we alert on kube_pod_status_ready?\n\n```\n$ k get pods -n gitlab\nNAME                                                   READY   STATUS             RESTARTS   AGE\ngitlab-certmanager-788c6859c6-zk25p                    1/1     Running            0          5d23h\ngitlab-issuer.4-lx655                                  0/1     Completed          0          2m45s\ngitlab-nginx-ingress-controller-78fb4c686b-d8s5t       1/1     Running            0          14m\ngitlab-nginx-ingress-controller-78fb4c686b-nd5lg       1/1     Running            0          7d\ngitlab-nginx-ingress-controller-78fb4c686b-zk6r6       1/1     Running            0          14m\ngitlab-nginx-ingress-default-backend-7f87d67c8-blzzq   1/1     Running            0          6d15h\ngitlab-nginx-ingress-default-backend-7f87d67c8-gmt7l   1/1     Running            0          14m\ngitlab-registry-68cbc8c489-7ftcj                       1/1     Running            0          14m\ngitlab-registry-68cbc8c489-8n2wm                       1/1     Running            0          14m\ngitlab-registry-7f64787dd6-htttg                       0/1     CrashLoopBackOff   4          2m45s\n```","state":"closed","created_at":"2019-07-19T13:54:49.007Z","updated_at":"2022-08-09T02:03:40.749Z","closed_at":"2019-07-31T13:51:20.614Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["Service::Container Registry","kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7283","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7283","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7283/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7283/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7283","relative":"#7283","full":"gitlab-com/gl-infra/reliability#7283"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":77,"epic":{"id":8806,"iid":77,"title":"Sort out monitoring and alerting for Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/77","group_id":1112072},"iteration":null,"health_status":null},{"id":22974838,"iid":7280,"project_id":1304532,"title":"RCA: Elevated git error rate on 2019-07-18","description":"## Summary\n\nIncreased error rates for ~\"Service:Gitaly\" due to large file uploads by a single user\n\n- Service(s) affected : ~\"Service:Gitaly\"  \n- Team attribution :  \n- Minutes downtime or degradation : 23 (1642-1704UTC)\n\nFor calculating duration of event, use the [Platform Metrics Dashboard](https://dashboards.gitlab.net/d/ZUei7TkWz/platform-metrics?orgId=1) to look at appdex and SLO violations.  \n\n![image](/uploads/685ee0366e1cdcf876fa4c8b84ba485c/image.png)\n![image](/uploads/1046c5ce826f5ab008f4150a1bb87e42/image.png)\n\n## Impact \u0026 Metrics\n\nStart with the following:\n\n- What was the impact of the incident? partial service degradation  \n- Who was impacted by this incident? external customers  \n- How did the incident impact customers? (i.e. preventing them from doing X, incorrect display of Y, ...)\n- How many attempts were made to access the impacted service/feature?\n- How many customers were affected?\n- How many customers tried to access the impacted service/feature?\n\nInclude any additional metrics that are of relevance.\n\nProvide any relevant graphs that could help understand the impact of the incident and its dynamics.\n\n\n## Detection \u0026 Response\n\nStart with the following:\n\n- How was the incident detected? alertmanager/pagerduty notification\n- Did alarming work as expected? yes\n- How long did it take from the start of the incident to its detection? Approx. 5 minutes\n- How long did it take from detection to remediation? Approx. 15 minutes\n- Were there any issues with the response to the incident? No\n\n## Timeline\n\n2019-07-18\n\n- 16:46 UTC - received alerts of increased error rates for Gitaly on `file-23-stor-gprd`\n- 16:56 UTC - confirmed that the errors were due to operations from the user identified in production#972\n- 17:01 UTC - EOC initiated a user block\n- 17:01 UTC - Load average on `file-23-stor-gprd` begins dropping\n- 17:01 UTC - Alert `Gitaly error rate is too high` [cleared](https://gitlab.pagerduty.com/incidents/PD8YZ3Q)\n- 17:06 UTC - Node-level alert `Gitaly error rate is too high` for `file-23-stor-gprd` [cleared](https://gitlab.pagerduty.com/incidents/PZZNYR0)\n\n~~At first glance, this is likely~~ This was a duplicate/recurrence of production#972\n\n## Root Cause Analysis\n\nGitaly service on `file-23-stor-gprd.c.gitlab-production.internal` was unresponsive\n\n1. Why? - Gitaly was consuming 100% CPU on `file-23-stor-gprd`  \n1. Why? - Gitaly `SSHReceivePack` and `SSHUploadPack` processes servicing requests were [consuming all CPU resources](https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7281#note_193666706)  \n1. Why? - A user attempted to upload very large file(s) (\u003e=10GB) via SSH  \n\n## What went well\n\n1. Alerting allowed us to identify the root problem quickly\n1. On-call engineers worked well across rotations to handle/respond to multiple incidents\n1. Support was engaged to interface with the affected customer and request that they configure `git-lfs` for better handling of large files\n\n## What can be improved\n\n1. We need to better understand why operations from a single user were able to consume all of the resources for a single Gitaly shard\n\n\n## Corrective actions\n\n1. Do we already have / can we implement a facility for Gitaly to abort git operations that take longer than some time threshold - #7388  \n1. Investigate using resource constraint mechanism (like cgroups) to limit the resources that any one git operation can consume - #7387  \n\n## Guidelines\n\n* [Blameless RCA Guideline](https://about.gitlab.com/handbook/infrastructure/#rca)\n* [5 whys](https://en.wikipedia.org/wiki/5_Whys)","state":"closed","created_at":"2019-07-18T17:39:00.563Z","updated_at":"2020-03-13T23:09:25.955Z","closed_at":"2020-03-13T22:08:44.644Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["IncidentReview","Service::Gitaly","auto updated","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"}],"author":{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"},"type":"ISSUE","assignee":{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7280","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7280","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7280/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7280/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7280","relative":"#7280","full":"gitlab-com/gl-infra/reliability#7280"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22917311,"iid":7272,"project_id":1304532,"title":"Schedule RCA Deep Dives","description":"Please schedule RCA deep dives for DNA meetings. To do so:\n\n* create an issue for a deep dive,\n* assign to a team member\n* assign a due date to match a DNA meeting\n* link the relevant production incident and incident (RCA) issues\n* link the deep dive issue to the following Epic: https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/83","state":"closed","created_at":"2019-07-17T10:21:41.586Z","updated_at":"2021-06-24T08:09:20.664Z","closed_at":"2020-07-09T09:01:19.729Z","closed_by":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"labels":["ManagerAction","Observability","VP of Infrastructure","auto updated","caplan","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2222520,"username":"dawsmith","name":"Dave Smith","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ef341e061f6b86461626e64c5fbcfe52?s=80\u0026d=identicon","web_url":"https://gitlab.com/dawsmith"},{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":2222520,"username":"dawsmith","name":"Dave Smith","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ef341e061f6b86461626e64c5fbcfe52?s=80\u0026d=identicon","web_url":"https://gitlab.com/dawsmith"},"user_notes_count":5,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7272","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7272","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7272/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7272/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7272","relative":"#7272","full":"gitlab-com/gl-infra/reliability#7272"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22860599,"iid":7267,"project_id":1304532,"title":"Discussion: What practices should we adopt to help train new on-callers?","description":"**Goal:**\n\nThis is a pitch for adopting a structured learning path for new GitLab team members (SRE or non-SRE) to incrementally accumulate the knowledge necessary to successfully fielding most on-call issues.\n\nIn this context, \"structured learning path\" means gradually building a working knowledge of the system and how it is maintained, beginning with immediately applicable knowledge and iteratively expanding in breadth and depth, with specific learning objectives at each stage.  Students should be able to use what they've learned to answer questions about how components interact or next steps to diagnose scenario X or how to get help with investigating or fixing component Y.\n\nLots of folks in our organization have experience being on-call (either here or elsewhere), witnessing what worked well for themselves and others.  Personally I feel strongly that catering to several different learning styles is essential to being kind and inclusive to our current and future teammates, so I'd love for folks to contribute their ideas, experiences, and opinions on what practices we could adopt that would be most helpful for supporting new on-callers (and ideally also promote continuous learning that benefits tenured on-callers too).\n\n**Starter material:**\n\nThere are several ways we could organize both existing and new training materials.  Whatever method we choose, there should be a clear progression from introductory to advanced topics, each of which should have explicitly stated learning outcomes that tie into the overarching theme of supporting on-call duties.\n\nSome examples:\n\n*Intro level:*\n\n* Learning objective: List all major components of GitLab.com's service stack, and briefly describe the role of each component.\n* Learning objective: Know basic usage of these 5 observability tools.  Understand what kinds of questions each can answer.  Describe a scenario in which this tool would provide useful information.\n* Learning objective: Know how to find help for troubleshooting a problem with a component or scenario you are not familiar with.  Where can you find a list of subject matter experts?\n\n*Intermediate level:*\n\n* Learning objective: Know how to use the rails console, specifically with the GitLab object models.\n* Learning objective: Walk through 3 of the curated historical postmortems to gain familiarity with common patterns of troubleshooting the GitLab.com stack.  Include at least 1 application regression and 1 infrastructure failure.  Become acquainted with the tools and tactics used for diagnosing and fixing these regressions, as well as the styles of collaboration and engagement with peers during the troubleshooting and remediation phases.\n* Learning objective: What does \"normal\" looks like at a system- and component-level?  View this from each of the vantage points you would use during troubleshooting: Grafana dashboards, host-level command-line tools (perf, netstat, etc.), rails console, psql, redis-cli, etc.\n\n*Advanced level:*\n\n* Learning objective: What does \"abnormal\" look like?  Limit the scope of this to just your chosen areas of focus.  Know what are the most common or most critical known failure modes for that service or component.  What are the symptoms, side-effects, and remedies are for those failure scenarios?\n* Learning objective: Which components of the architecture are currently the most fragile?  Which are singletons?  Which services lack graceful failover?  How does this affect our SLO, and is our recovery time reliably low?  Where can you quickly find the documented recovery procedures for these critical components?\n* Learning objective: Know how to scale out a service tier with Terraform.  Know how to infer from effects whether this was helpful or harmful, and if harmful how to identify the critical downstream bottleneck.","state":"closed","created_at":"2019-07-16T21:26:25.117Z","updated_at":"2022-08-09T02:03:55.380Z","closed_at":"2019-07-19T16:33:15.263Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"}],"author":{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"},"type":"ISSUE","assignee":{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"},"user_notes_count":11,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7267","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7267","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7267/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7267/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7267","relative":"#7267","full":"gitlab-com/gl-infra/reliability#7267"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22849556,"iid":7266,"project_id":1304532,"title":"When starting from an empty cluster, k-ctl does checks for objects in a non-existent namespace","description":"One of the checks that `k-ctl` validates is that we've got our secrets already loaded into an environment.  https://gitlab.com/gitlab-com/gl-infra/k8s-workloads/gitlab-com/blob/master/bin/k-ctl#L47\n\nThis doesn't work out so well if we are attempting to install something for the first time on a completely clean cluster.  One, the namespace does not yet exist, and we fail to bail out of the script at this point.  Secondly, in order to install, we need the certificates.  However, the namespace is installed by helm.  \n\nTo work around this we need to skip the validation part.  And/or we can create the namespace, drop in the secrets, then perform the install.\n\nThis is not documented, and is a bit confusing.  Utilize this issue to come up with a better way to handle this cyclic dependency.\n\n/cc @gitlab-org/delivery","state":"closed","created_at":"2019-07-16T18:32:14.503Z","updated_at":"2022-08-09T02:03:56.013Z","closed_at":"2019-08-05T11:54:55.578Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["kubernetes","priority::4","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7266","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7266","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7266/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7266/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7266","relative":"#7266","full":"gitlab-com/gl-infra/reliability#7266"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":79,"epic":{"id":8808,"iid":79,"title":"Kubernetes Pre Migration Technical Debt","url":"/groups/gitlab-com/gl-infra/-/epics/79","group_id":1112072},"iteration":null,"health_status":null},{"id":22820679,"iid":7261,"project_id":1304532,"title":"Logrotate on ops.gitlab.net is broken","description":"I got a page today for `ops.gitlab.net` being at 1% disk space. Upon investigation some of the logs had data back from last year. \n\nWe don't seem to be sending these logs anywhere so I didn't want to just delete them all. Because `production.log` is also in `production_json.log`, I cleared out `production.log`.\n\n```\nroot@gitlab-01-inf-ops.c.gitlab-ops.internal:/var/log/gitlab/gitlab-rails# \u003eproduction.log\n```\n\n\n We need revisit log retention and fix logrotate.","state":"closed","created_at":"2019-07-16T03:53:02.164Z","updated_at":"2022-08-09T02:03:59.073Z","closed_at":"2019-07-26T20:00:38.105Z","closed_by":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"labels":["SRE:On-call","priority::2","workflow-infra::Done"],"milestone":null,"assignees":[{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"}],"author":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"type":"ISSUE","assignee":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7261","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7261","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7261/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7261/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7261","relative":"#7261","full":"gitlab-com/gl-infra/reliability#7261"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22812532,"iid":7255,"project_id":1304532,"title":"Add subdomain for 10k instance under testbed.gitlab.net","description":"We need a subdomain to be created for the 10k instance:\n\n```\n10k.testbed.gitlab.net\n```\n\nThe IP can be found in [dev-resources](https://gitlab.com/gitlab-com/dev-resources/-/jobs/251853108) job output under `drew-10k-lb`\n\nSee https://gitlab.com/gitlab-org/quality/performance/issues/38","state":"closed","created_at":"2019-07-15T17:57:58.390Z","updated_at":"2022-08-09T02:04:05.360Z","closed_at":"2019-07-16T18:04:56.649Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["toil","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":136229,"username":"cindy","name":"Cindy Pallares 🦉","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/136229/avatar.png","web_url":"https://gitlab.com/cindy"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":3,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7255","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7255","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7255/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7255/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7255","relative":"#7255","full":"gitlab-com/gl-infra/reliability#7255"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22770473,"iid":7249,"project_id":1304532,"title":"Setup network and DNS for Infra-Vault","description":"* [x] choose a free subnet to avoid IP collisions with other envs\n* [x] setup VPC peering with our envs for accessing vault\n* [x] setup DNS\n* [x] disable the external IP for vault","state":"closed","created_at":"2019-07-14T14:49:33.430Z","updated_at":"2022-08-09T02:04:09.748Z","closed_at":"2020-07-10T05:01:54.065Z","closed_by":{"id":4337537,"username":"ggillies","name":"Graeme Gillies","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4337537/avatar.png","web_url":"https://gitlab.com/ggillies"},"labels":["team::Reliability","vault","workflow-infra::Done"],"milestone":{"id":878522,"iid":21,"group_id":1112072,"title":"Secure and Defend - Deploy Vault to provide a solution for secrets management and use","description":"","state":"closed","created_at":"2019-05-17T21:56:44.114Z","updated_at":"2019-09-09T20:43:58.114Z","due_date":"2019-07-31","start_date":"2019-05-01","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/21"},"assignees":[{"id":4337537,"username":"ggillies","name":"Graeme Gillies","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4337537/avatar.png","web_url":"https://gitlab.com/ggillies"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":4337537,"username":"ggillies","name":"Graeme Gillies","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4337537/avatar.png","web_url":"https://gitlab.com/ggillies"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-19","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7249","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":4},"weight":5,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7249","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7249/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7249/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7249","relative":"#7249","full":"gitlab-com/gl-infra/reliability#7249"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":62,"epic":{"id":7471,"iid":62,"title":"Deploy Vault to provide a solution for secrets management and use","url":"/groups/gitlab-com/gl-infra/-/epics/62","group_id":1112072},"iteration":null,"health_status":null},{"id":22745634,"iid":7246,"project_id":1304532,"title":"Proposal to adopt RabbitMQ","description":"# Proposal to adopt RabbitMQ\n\nI would like to propose a solution for the longer term.  That is, just one solution option that _could_ be implemented in the timeframe for which the nearer term, interim, solution options are intended to buy us a longer runway, such as [application-scope sharding](https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7199).\n\nThis proposal's subject is the current status quo application use of the sidekiq framework for asynchronous task processing with redis cache as a FIFO queue/locking mechanic.\n\nAs a software developer for many years, I have experienced the consequences of inter-system and inter-service bottlenecks which are often introduced by misuse of software patterns and frameworks.  Of course intentions are always good and it is almost always the case that some software pattern implementations tests well and work well in the nearer term, at small scales, or with simplistic/naive test scenarios.  However, as we systems engineers know all too well, as an application's usage profile grows, or adherence to application software development best practices drifts in only one or two code modules, feature releases, or commits, things become more complicated.  Sometimes software frameworks and patterns are employed with default configurations that are seldom if ever adjusted to suit the application usage.  Sometimes such solutions are simply not designed to be used feasibly at certain scales.\n\n## RabbitMQ or sidekiq?\n\nApproaches to clustering Redis include single node multi-process distributed request proxy load balancing, multi-node single-process distributed request load balancing, and also multi-node multi-process-per-node distributed request load balancing.  As far as I know, we are using none of these, except maybe multi-node single-process distributed request load balancing, but even then, the additional nodes are not being used as clustered worker nodes to perform load-sharing, but as failover nodes with replicated data. Furthermore, it seems unlikely that all read requests are getting properly distributed exclusively to the failover nodes, but instead are being equally distributed to all three nodes, which overburdens the master Redis node that should be solely responsible for write requests. (https://redis.io/topics/faq, https://redis.io/topics/partitioning, https://redislabs.com/redis-enterprise/technology/redis-enterprise-cluster-architecture/)\n\nOn the other hand, adopting a write-only usage for the master node could cause failures with a variety of application usages such as any update-on-miss (`SETNX`) operations. (https://redis.io/commands/setnx, https://redis.io/commands/setnx#handling-deadlocks)\n\nSuch concerns are further complicated by the best practice patterns for using the sidekiq framework itself.  Configuring task prioritization with sidekiq can be troublesome.  For instance, Phil Sturgeon points out that, \"defining multiple queues in your Sidekiq config does not distribute work evenly between them.\" [Nov 16 2016](https://phil.tech/2016/11/16/tips-on-sidekiq-queues/)\n\nWith RabbitMQ working as a broker for sending parametric info for tasks with appropriate background-processing/asynchronous work profiles, and distributing messages to categorical pools of asynchronous workers, cpu load is automatically balanced between all cores by design.  RabbitMQ's multi-threaded Erlang platform is built for services requiring concurrency and makes horizontal scaling very simple from a configuration and deployment perspective.\n\nThis is not the case with Redis, which is built to be a single-threaded single process application by design.  This design is adequate for its commonly marketed use cases, but can make scaling it horizontally somewhat complicated, as explained above.\n\n## Support for microservice architecture\n\nMessage broker technologies like RabbitMQ and Kafka can also support an architectural transition to microservices, which is where I understand GitLab may be headed towards in the future.  Martin Fowler had plenty to say about [Microservice Trade-Offs](https://martinfowler.com/articles/microservice-trade-offs.html) in 2015.  Another good resource for reading more about distributed services communication is here over at [microservices.io](https://microservices.io/patterns/communication-style/messaging.html) which also has coverage on other conventional communication techniques like [RPI](https://microservices.io/patterns/communication-style/rpi.html).\n\nThe take-away here is that microservice architectural patterns are commonly accompanied by message broker technologies.  Technologies like sidekiq certainly have their place, but distributed inter-service communication orchestration might not be that place.  So, if a more distributed architecture is in the stars for GitLab, then perhaps we can take this opportunity to begin to lay the groundwork for such a transition now.\n\nMy intention here is to cultivate discussion around the singular problem presented by sidekiq which appears to be that horizontal scaling with sidekiq and redis is more challenging compared to other options like RabbitMQ.\n\n\n## RabbitMQ and Sneakers\n\nSneakers is a ruby background job processing framework that uses RabbitMQ.\n\n\u003e \"Nor could I allow the single-point-of-failure that being Redis, which isn't really suitable for a highly-available background processing framework - I couldn't lose messages (it's worth mentioning that Redis is often my go-to swiss-army knife and you'll have to pry it from my dying corpse).\"\n\n-- [Dotan J. Nahum](https://github.com/jondot/sneakers/wiki/Why-i-built-it#cruby-performance-and-high-availability), Jan 10, 2014, https://github.com/jondot/sneakers\n\nAdditional advantages of using Sneakers:\n\n\u003e Compared to Sidekiq, per my use case, I needed\n\n\u003e     A great-performing framework limited only by broker speed - at least 1000req/s acknowledged and persisted on EC2-Large (Sneakers does more than that), and\n\u003e     *That would use all cores*\n\u003e     A highly available processing framework (here we have same guarantees as RabbitMQ offers, which is great)\n\u003e     A familiar DSL/API that also supports advanced messaging semantics such as reject, requeue, acknowledge, etc, and\n\u003e     That would not expose the whole guts of AMQP at me, but just-enough from it.\n\n\u003e And irrelevant of the comparison to Sidekiq or any other background processing framework I needed\n\n\u003e     It should use a ruby that doesn't care about content of gems and can run C-extensions. MRI.\n\u003e     A production-ready package that holds all of these together allowing me to be as lazy as possible\n\u003e     Metrics and logging baked in\n\u003e     Convenient deployment, maintenance and supervision story\n\n-- [Dotan J. Nahum](https://github.com/jondot/sneakers/wiki/Why-i-built-it#sneakers)\n\nAdditional reading:\n\n* [Messages on Rails Part 3: RabbitMQ](https://karolgalanciak.com/blog/2019/06/23/messages-on-rails-part-3-rabbitmq/)\n* [RabbitMQ Scheduling Messages with Sneakers](https://medium.com/@twobuckchuck/rabbitmq-scheduling-messages-with-sneakers-18089e8aa7d2)\n\n## Additional sharding and prioritization using queues\n\nSolutions like RabbitMQ provide support for application features like programmatic sharding for job criticality levels and domains by using RabbitMQ first-class queues and channels, instead of redis locking patterns which are contentious and susceptible to inconsistency errors during fail-overs.\n\n\u003e \"Another core concept of job framework is queues. A typical app would have a dozen queues (critical, default, webhooks, low, imports, payments etc) and the developer would have to choose one for their job. As you can see, the set of queues has a mix of priority based queues (critical, default, low) and domain-specific queues (webhooks, imports, payments).\"\n\n-- [Kir Shatrov](https://kirshatrov.com/2019/01/03/state-of-background-jobs/), 03 Jan 2019\n\nAdditional reading: [The State of Background Jobs in 2019](https://kirshatrov.com/2019/01/03/state-of-background-jobs/)\n\n## Summary\n\nTo summarize, my limited research and experience informs me that it can be a complicated design problem to scale redis when relying on lock acquisition mechanics for asynchronous job queueing.  It requires a sophisticated coordination between good architectural deployment patterns and programmatic adherence to certain application software patterns in order to ensure both reliability, but also horizontal scalability.\n\nPersonally, I suspect that GitLab has outgrown redis-backed sidekiq, to an extent.  I recommend incorporating RabbitMQ and one of the many available Ruby libraries and frameworks, such as Sneakers or Bunny, into the GitLab Rails deployment configuration and make the necessary changes to the codebase in order to interface with appropriately considered queues for invoking categorical asynchronous tasks, and reserve redis use for the purposes of caching simplistic session token and frequently read/infrequently modified application data.\n\n## Falsifiability\n\nMy suspicions could certainly be mistaken.  I have not yet grokked the numbers involved in the profiles of our redis usage by our application.  It is currently difficult to do such a thing because our present usage is somewhat functionally overloading one of the redis clusters.  This will probably be remedied by [this issue](https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7199), and we'll soon have a clearer picture of usage which is dominating the bandwidth of the existing redis system resources.  It may be that once splitting redis sidekiq from redis persistent has completed, and obvious mal-patterns illuminated and eliminated, there will be plenty of room to grow, and the use-case for a message broker service obviated.\n\nRelated issues: https://gitlab.com/gitlab-com/gl-infra/production/issues/928\n\nTagging team members for visibility and feedback solicitation: @glopezfernandez, @stanhu, @andrewn, @ahanselka, @msmiley, @craig, @craigf, @cmiskell, @devin, @skarbek, @jarv, @ansdval, @Finotto","state":"closed","created_at":"2019-07-12T19:03:58.956Z","updated_at":"2021-08-13T17:58:17.138Z","closed_at":"2020-02-21T22:46:01.220Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["Discussion","InfraArch","Infrastructure","Research","Service::Redis","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2222520,"username":"dawsmith","name":"Dave Smith","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ef341e061f6b86461626e64c5fbcfe52?s=80\u0026d=identicon","web_url":"https://gitlab.com/dawsmith"}],"author":{"id":4006601,"username":"nnelson","name":"Nels Nelson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4006601/avatar.png","web_url":"https://gitlab.com/nnelson"},"type":"ISSUE","assignee":{"id":2222520,"username":"dawsmith","name":"Dave Smith","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ef341e061f6b86461626e64c5fbcfe52?s=80\u0026d=identicon","web_url":"https://gitlab.com/dawsmith"},"user_notes_count":26,"merge_requests_count":0,"upvotes":3,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7246","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7246","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7246/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7246/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7246","relative":"#7246","full":"gitlab-com/gl-infra/reliability#7246"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":125,"epic":{"id":10677,"iid":125,"title":"Investigate and Improve queue implementation (aka 10x Initiative)","url":"/groups/gitlab-com/-/epics/125","group_id":6543},"iteration":null,"health_status":null},{"id":22710228,"iid":7238,"project_id":1304532,"title":"Shutdown postgres11 instances in staging","description":"We are going to pause the postgres 11 upgrade effort just for a little while.\n\nWe should stop the postgres11 instances in staging because they're not needed (saves about 1,200 $/month).\n\n```\n postgres11-01-db-gstg \t\n postgres11-02-db-gstg \t\n postgres11-03-db-gstg \t\n postgres11-04-db-gstg \t\n postgres11-05-db-gstg \t\n postgres11-06-db-gstg\n```","state":"closed","created_at":"2019-07-11T17:36:10.618Z","updated_at":"2019-12-06T21:43:33.511Z","closed_at":"2019-07-12T15:06:12.724Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["Database","priority::3","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7238","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7238","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7238/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7238/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7238","relative":"#7238","full":"gitlab-com/gl-infra/reliability#7238"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22701083,"iid":7234,"project_id":1304532,"title":"PostgreSQL: Minor upgrades from 9.6.12 to 9.6.14","description":"We are 3 minor versions behind the latest release of PostgreSQL 9.6 and we should perform a minor upgrade.\n\nMinor upgrades are generally safe and can be done without incurring long downtime since it just needs a restart of the postgres process. That means, we would be doing a rolling upgrade and restart across the cluster.\n\nMinor upgrades usually fix bugs and make other non breaking improvements. \n\nChangelogs:\n* https://www.postgresql.org/docs/9.6/release-9-6-14.html\n* https://www.postgresql.org/docs/9.6/release-9-6-13.html\n* https://www.postgresql.org/docs/9.6/release-9-6-12.html","state":"closed","created_at":"2019-07-11T12:12:36.886Z","updated_at":"2020-03-13T23:09:24.586Z","closed_at":"2020-03-13T22:04:38.251Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["Database","auto updated","priority::2","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"}],"author":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":12,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-26","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7234","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7234","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7234/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7234/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7234","relative":"#7234","full":"gitlab-com/gl-infra/reliability#7234"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22674953,"iid":7219,"project_id":1304532,"title":"Proposal to simplify sidekiq worker pools","description":"**Requires** https://gitlab.com/gitlab-org/gitlab-ce/issues/64692\n\n-----------------------\n\nSpawned from https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7177\n\nCurrently we have a number of different sidekiq priority queues. \n\nIts unclear to me what the key differentiator between the different queues is. I had assumed it was based on throughput - for example `realtime` for high priority, short jobs, and `besteffort` for low priority, long running jobs, but this doesn't appear to be the case: for example there are some tasks which take upwards of 2.5 hours which run on the `realtime` queues. \n\nOnce a job is assigned to a priority queue, it will be processed by a fleet of sidekiq workers dedicated to that queue. For example, we have sidekiq fleets for `realtime`, `besteffort` etc.\n\nIf we look at things on a machine level, each node is running a set of sidekiq worker processes and each worker has a set of threads handling jobs.\n\nAt this point there are some more surprises:\n\n1. Each process has a different number of worker threads (between 3 and 12 per process)\n1. Each **process will handle a different set of jobs from the queue**\n\n\n```\ngit       8693  2523  0 12:37 ?        00:00:00       ruby /opt/gitlab/embedded/service/gitlab-rails/ee/bin/sidekiq-cluster -e production -r /opt/gitlab/embedded/service/gitlab-rails post_receive,merge,update_merge_requests,gitlab_shell,email_receiver,repository_fork,reactive_caching,project_update_repository_storage,ldap_group_sync,new_issue,new_merge_request update_merge_requests,post_receive process_commit,process_commit,process_commit process_commit,process_commit,process_commit authorized_projects,authorized_projects new_note,new_note merge,merge,update_merge_requests merge,merge,update_merge_requests update_merge_requests,post_receive\ngit       8700  8693 55 12:37 ?        00:13:32         sidekiq 5.2.7 queues: post_receive, merge, update_merge_requests, gitlab_shell, email_receiver, repository_fork, reactive_caching, project_update_repository_storage, ldap_group_sync, new_issue, new_merge_request [3 of 12 busy]\ngit       8702  8693 24 12:37 ?        00:05:55         sidekiq 5.2.7 queues: update_merge_requests, post_receive [0 of 3 busy]\ngit       8704  8693  9 12:37 ?        00:02:18         sidekiq 5.2.7 queues: process_commit (3) [0 of 4 busy]\ngit       8706  8693  9 12:37 ?        00:02:21         sidekiq 5.2.7 queues: process_commit (3) [0 of 4 busy]\ngit       8708  8693  7 12:37 ?        00:01:45         sidekiq 5.2.7 queues: authorized_projects (2) [0 of 3 busy]\ngit       8710  8693  8 12:37 ?        00:02:03         sidekiq 5.2.7 queues: new_note (2) [0 of 3 busy]\ngit       8712  8693 13 12:37 ?        00:03:12         sidekiq 5.2.7 queues: merge (2), update_merge_requests [1 of 4 busy]\ngit       8714  8693 13 12:37 ?        00:03:13         sidekiq 5.2.7 queues: merge (2), update_merge_requests [0 of 4 busy]\ngit       8716  8693 29 12:37 ?        00:07:13         sidekiq 5.2.7 queues: update_merge_requests, post_receive [1 of 3 busy]\n```\n\nThis means that some jobs could be saturated by busy workers while other worker processes _in the same fleet_ sit idle. \n\nIt also means that we need to be able to _manually_ monitor the fleet and make constant _manual_ adjustments. \n\nUnfortunately, as far as I can tell, we don't have metrics to alert us when all the workers for a certain subset of the fleet are busy.\n\nInstead we will reactively respond when worker queues lengths start climbing.\n\n---------------------------------------------------------------------------------------------\n\n# Proposal\n\nI propose a simpler approach, which should be easier to manage.\n\n1. Priority queues are strictly based on throughput requirements and job latency. \n1. Each priority queue has strict SLO requirements for latency. If the apdex for a particular job consistently does not meet the required SLO, development teams will be notified and the job will be de-prioritised to a high-latency queue. \n1. Each priority queue will have its own fleet (same as present)\n1. Each worker process will process all jobs for a given priority queue, not a subset\n1. Each worker will have the same number of threads\n\nThis approach will be easier to manage and will not require manual adjustment. If the `realtime` queue is not keeping up with jobs, it can be scaled up to process more. If saturation of worker threads across a fleet drops below a threshold for a certain period, the fleet can be scaled back.\n\nThis will also be much simpler to deal with in a k8s world (@skarbek what strategy are we using here?)","state":"closed","created_at":"2019-07-10T16:23:20.331Z","updated_at":"2022-08-09T02:04:21.950Z","closed_at":"2019-09-30T07:39:48.327Z","closed_by":{"id":895869,"username":"andrewn","name":"Andrew Newdigate","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/895869/avatar.png","web_url":"https://gitlab.com/andrewn"},"labels":["Background Processing","Service::Sidekiq","workflow-infra::Done"],"milestone":null,"assignees":[{"id":895869,"username":"andrewn","name":"Andrew Newdigate","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/895869/avatar.png","web_url":"https://gitlab.com/andrewn"}],"author":{"id":895869,"username":"andrewn","name":"Andrew Newdigate","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/895869/avatar.png","web_url":"https://gitlab.com/andrewn"},"type":"ISSUE","assignee":{"id":895869,"username":"andrewn","name":"Andrew Newdigate","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/895869/avatar.png","web_url":"https://gitlab.com/andrewn"},"user_notes_count":26,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7219","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7219","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7219/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7219/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7219","relative":"#7219","full":"gitlab-com/gl-infra/reliability#7219"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":125,"epic":{"id":10677,"iid":125,"title":"Investigate and Improve queue implementation (aka 10x Initiative)","url":"/groups/gitlab-com/-/epics/125","group_id":6543},"iteration":null,"health_status":null},{"id":22647225,"iid":7212,"project_id":1304532,"title":"Add thanos-query from GKE to the rest of our thanos infra","description":"Currently our GKE clusters thanos-queries are it's own datasource in grafana.  We should connect these to the ops thanos query instance such that we get metric data from all of our infrastructure.\n\n1. [x] Write the ability to add additional query targets\n1. [x] Wire it up\n\n/cc @gitlab-com/gl-infra","state":"closed","created_at":"2019-07-09T20:47:42.107Z","updated_at":"2022-08-09T22:03:55.908Z","closed_at":"2019-07-12T14:37:42.677Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["auto updated","chef","kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7212","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":5,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7212","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7212/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7212/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7212","relative":"#7212","full":"gitlab-com/gl-infra/reliability#7212"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":77,"epic":{"id":8806,"iid":77,"title":"Sort out monitoring and alerting for Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/77","group_id":1112072},"iteration":null,"health_status":null},{"id":22641309,"iid":7206,"project_id":1304532,"title":"DR vs GPRD file server count differences","description":"Currently we have 32 file servers in `dr` while `gprd` has 36 file servers.  This would seem to break the Geo feature.  Use this issue to discuss why we are missing 4 servers in the `dr` environment, and bolster our documentation to ensure that when we scale up file servers, the same occurs in `dr`.  We should also consider alerting on a situation like this as this is one of our ways to recover data.\n\n/cc @gitlab-com/gl-infra","state":"closed","created_at":"2019-07-09T17:14:14.410Z","updated_at":"2022-08-09T22:03:57.718Z","closed_at":"2019-07-24T17:40:47.565Z","closed_by":{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"},"labels":["Infrastructure","auto updated","chef","priority::1","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7206","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7206","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7206/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7206/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7206","relative":"#7206","full":"gitlab-com/gl-infra/reliability#7206"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22632250,"iid":7201,"project_id":1304532,"title":"Ensure that the zpool is cleanly reimported when instances are destroyed and recreated","description":"If I GCP-destroy a ZFS-backed storage node and use terraform to reprovision it, we are confident that the correct disks will be reattached, but will the zpool be reimported after chef runs? If not, fix it!\n\nWe already know the zpool is imported and the relevant filesystem(s) mounted when the instance is rebooted.","state":"closed","created_at":"2019-07-09T12:48:00.868Z","updated_at":"2022-08-09T22:04:01.522Z","closed_at":"2019-07-11T11:08:12.871Z","closed_by":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"labels":["Global:In Progress","workflow-infra::Done"],"milestone":{"id":881181,"iid":29,"group_id":1112072,"title":"Dev \u0026 Ops - FY20Q2::KR::Migrate repos to ZFS storage","description":"","state":"closed","created_at":"2019-05-21T07:03:02.439Z","updated_at":"2019-10-09T16:21:23.068Z","due_date":"2019-07-31","start_date":null,"expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/29"},"assignees":[{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"}],"author":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"type":"ISSUE","assignee":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7201","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7201","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7201/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7201/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7201","relative":"#7201","full":"gitlab-com/gl-infra/reliability#7201"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":65,"epic":{"id":7474,"iid":65,"title":"migrate repos to ZFS storage - 60%","url":"/groups/gitlab-com/gl-infra/-/epics/65","group_id":1112072,"human_readable_end_date":"Jul 31, 2019","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":22617197,"iid":7197,"project_id":1304532,"title":"Register prometheus service on consul","description":"Necessary for us to be able to do dynamic inventory for consul (e.g. for gitlab-org/release/framework#354).","state":"closed","created_at":"2019-07-09T03:31:25.039Z","updated_at":"2022-08-09T22:04:06.040Z","closed_at":"2019-07-09T18:27:57.814Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["auto updated","team::Reliability","workflow-infra::Done"],"milestone":{"id":878550,"iid":26,"group_id":1112072,"title":"CI/CD \u0026 Enablement - FY20Q2::KR::Chef 15 and Consul for service registration","description":"We are currently running most chef clients on Chef 12 and the current version is Chef 15.  This KR will scope the size of the effort to upgrade nodes in production to chef 15 and pick a reasonable effort to do in Q2.\r\n\r\nWe also had carry over for finishing Consul service registration work from 2019FYQ1.\r\n\r\nEpics:\r\n1. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/69\r\n2. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/57","state":"closed","created_at":"2019-05-17T22:46:07.911Z","updated_at":"2019-12-04T21:44:14.005Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/26"},"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7197","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7197","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7197/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7197/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7197","relative":"#7197","full":"gitlab-com/gl-infra/reliability#7197"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":69,"epic":{"id":7633,"iid":69,"title":"Wrap up of Consul Deployment","url":"/groups/gitlab-com/gl-infra/-/epics/69","group_id":1112072},"iteration":null,"health_status":null},{"id":22616232,"iid":7195,"project_id":1304532,"title":"Increase in Postgres Dead Tuple alerts","description":"We have seen an increase in unactionable Postgres alerts over the last on-call shift.  This always recovers on its own, but it is a change in behavior, so we should understand what is causing it. \n\nThe alerts are:\n- PostgreSQL_TooManyDeadTuples\n- PostgreSQL_ReplicaStaleXmin\n\nDead Tuples Percentage over the last 7 days:\n\n![Screen_Shot_2019-07-08_at_3.42.29_PM](/uploads/65f55700269e60bed022be613169ee5d/Screen_Shot_2019-07-08_at_3.42.29_PM.png)\n\nDead Tuple Rates over the last 7 days:\n\n![Screen_Shot_2019-07-08_at_3.43.36_PM](/uploads/74e0659763f5c2e7d3068d5f7eb0df19/Screen_Shot_2019-07-08_at_3.43.36_PM.png)\n\nTotal Dead Tuples over the last 7 days:\n\n![Screen_Shot_2019-07-08_at_3.56.54_PM](/uploads/d65634813fcb836d0edb5e273855d447/Screen_Shot_2019-07-08_at_3.56.54_PM.png)\n\nAutovacuum per table over the last 7 days (note the last day or so):\n\n![Screen_Shot_2019-07-08_at_3.44.15_PM](/uploads/92830f308f32e07553904aab39d3ea32/Screen_Shot_2019-07-08_at_3.44.15_PM.png)\n\nAll of these metrics are here:\n\nhttps://dashboards.gitlab.net/d/000000167/postgresql-tuple-statistics?orgId=1\u0026refresh=1m\u0026var-environment=gprd\u0026var-prometheus=Global\u0026var-instance=patroni-04-db-gprd.c.gitlab-production.internal\u0026from=1562031895380\u0026to=1562636695380\n\n/cc @dawsmith @Finotto","state":"closed","created_at":"2019-07-09T01:57:44.633Z","updated_at":"2022-08-09T22:04:07.449Z","closed_at":"2021-03-12T03:07:01.619Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["Alert Fatigue","Database","OnGres::Support","Service::Postgres","auto updated","priority::2","workflow-infra::Done"],"milestone":{"id":989400,"iid":38,"group_id":1112072,"title":"Database September part 1","description":"","state":"closed","created_at":"2019-09-03T10:14:40.685Z","updated_at":"2019-10-09T16:21:15.363Z","due_date":"2019-09-13","start_date":"2019-09-02","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/38"},"assignees":[{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"}],"author":{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"},"type":"ISSUE","assignee":{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7195","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7195","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7195/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7195/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7195","relative":"#7195","full":"gitlab-com/gl-infra/reliability#7195"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22615000,"iid":7194,"project_id":1304532,"title":"Renew SSL cert for status.gitlab.com","description":"Hello,\n\nThis is an automated message to inform you that the SSL certificate for your status page (status.gitlab.com) is expiring soon.\n\nPlease login to the Status.io Dashboard and upload a new certificate in the Settings / SSL tab.","state":"closed","created_at":"2019-07-08T23:06:00.733Z","updated_at":"2022-08-09T22:04:08.457Z","closed_at":"2019-07-12T16:35:58.301Z","closed_by":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"labels":["SRE:On-call","auto updated","priority::2","toil","workflow-infra::Done"],"milestone":null,"assignees":[{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},{"id":3417286,"username":"mwasilewski-gitlab","name":"Michal Wasilewski","state":"blocked","avatar_url":"https://secure.gravatar.com/avatar/2a9fc70321a9df494ecdc8f178df11dd?s=80\u0026d=identicon","web_url":"https://gitlab.com/mwasilewski-gitlab"}],"author":{"id":2222520,"username":"dawsmith","name":"Dave Smith","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ef341e061f6b86461626e64c5fbcfe52?s=80\u0026d=identicon","web_url":"https://gitlab.com/dawsmith"},"type":"ISSUE","assignee":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-26","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7194","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7194","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7194/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7194/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7194","relative":"#7194","full":"gitlab-com/gl-infra/reliability#7194"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22594425,"iid":7187,"project_id":1304532,"title":"Do we still need to provision git storage nodes to be overweighted towards one zone in a region?","description":"Our git storage fleet is provisioned by the generic-stor terraform module, which provisions node_count nodes in the configured zone, and multizone_node_count nodes in the configured region, allocated across zones in that region by round robin. In this way file store nodes are \"overweight\" in the configured zone.\n\nhttps://ops.gitlab.net/gitlab-com/gl-infra/terraform-modules/google/generic-stor/merge_requests/7 proposes breaking this feature of generic-stor (for reasons discussed in that MR), and implementing any required zone overweightness by provisioning 2 file store pools, 1 which specifies a zone, and 1 which specifies a region for round robin node allocation.\n\nThis issue aims to address whether we even need to do this: can we simply provision regional pools with round robin allocation, and not be overweight in any one zone?","state":"closed","created_at":"2019-07-08T10:22:35.327Z","updated_at":"2022-08-09T22:04:13.424Z","closed_at":"2019-07-25T08:18:33.989Z","closed_by":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"labels":["Global:In Progress","auto updated","workflow-infra::Done"],"milestone":{"id":881181,"iid":29,"group_id":1112072,"title":"Dev \u0026 Ops - FY20Q2::KR::Migrate repos to ZFS storage","description":"","state":"closed","created_at":"2019-05-21T07:03:02.439Z","updated_at":"2019-10-09T16:21:23.068Z","due_date":"2019-07-31","start_date":null,"expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/29"},"assignees":[{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"}],"author":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"type":"ISSUE","assignee":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"user_notes_count":11,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7187","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7187","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7187/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7187/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7187","relative":"#7187","full":"gitlab-com/gl-infra/reliability#7187"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":65,"epic":{"id":7474,"iid":65,"title":"migrate repos to ZFS storage - 60%","url":"/groups/gitlab-com/gl-infra/-/epics/65","group_id":1112072,"human_readable_end_date":"Jul 31, 2019","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":22557161,"iid":7182,"project_id":1304532,"title":"Create a consul server fleet for ops","description":"For all ops exclusive services (e.g. alertmanager. Necessary for https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7181)","state":"closed","created_at":"2019-07-05T20:55:03.290Z","updated_at":"2022-08-09T22:04:16.730Z","closed_at":"2019-07-08T21:42:05.914Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["auto updated","team::Reliability","workflow-infra::Done"],"milestone":{"id":878550,"iid":26,"group_id":1112072,"title":"CI/CD \u0026 Enablement - FY20Q2::KR::Chef 15 and Consul for service registration","description":"We are currently running most chef clients on Chef 12 and the current version is Chef 15.  This KR will scope the size of the effort to upgrade nodes in production to chef 15 and pick a reasonable effort to do in Q2.\r\n\r\nWe also had carry over for finishing Consul service registration work from 2019FYQ1.\r\n\r\nEpics:\r\n1. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/69\r\n2. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/57","state":"closed","created_at":"2019-05-17T22:46:07.911Z","updated_at":"2019-12-04T21:44:14.005Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/26"},"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7182","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7182","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7182/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7182/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7182","relative":"#7182","full":"gitlab-com/gl-infra/reliability#7182"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":69,"epic":{"id":7633,"iid":69,"title":"Wrap up of Consul Deployment","url":"/groups/gitlab-com/gl-infra/-/epics/69","group_id":1112072},"iteration":null,"health_status":null},{"id":22556971,"iid":7181,"project_id":1304532,"title":"Register alertmanager service on consul","description":"Necessary for us to be able to do dynamic inventory for consul (e.g. for gitlab-org/release/framework#354).","state":"closed","created_at":"2019-07-05T20:36:03.241Z","updated_at":"2022-08-09T22:04:19.616Z","closed_at":"2019-07-08T21:52:08.607Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["auto updated","team::Reliability","workflow-infra::Done"],"milestone":{"id":878550,"iid":26,"group_id":1112072,"title":"CI/CD \u0026 Enablement - FY20Q2::KR::Chef 15 and Consul for service registration","description":"We are currently running most chef clients on Chef 12 and the current version is Chef 15.  This KR will scope the size of the effort to upgrade nodes in production to chef 15 and pick a reasonable effort to do in Q2.\r\n\r\nWe also had carry over for finishing Consul service registration work from 2019FYQ1.\r\n\r\nEpics:\r\n1. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/69\r\n2. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/57","state":"closed","created_at":"2019-05-17T22:46:07.911Z","updated_at":"2019-12-04T21:44:14.005Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/26"},"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7181","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7181","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7181/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7181/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7181","relative":"#7181","full":"gitlab-com/gl-infra/reliability#7181"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":69,"epic":{"id":7633,"iid":69,"title":"Wrap up of Consul Deployment","url":"/groups/gitlab-com/gl-infra/-/epics/69","group_id":1112072},"iteration":null,"health_status":null},{"id":22552517,"iid":7180,"project_id":1304532,"title":"Import prometheus rules into our GKE prometheus-operator configuration","description":"We have a lot of rules https://gitlab.com/gitlab-com/runbooks/tree/master/rules that now need to be imported into the prometheus-operator running in GKE.\n\n/cc @bjk-gitlab \n/cc @gitlab-org/delivery","state":"closed","created_at":"2019-07-05T15:34:23.527Z","updated_at":"2022-08-09T22:04:20.164Z","closed_at":"2019-07-19T11:42:02.523Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["auto updated","kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":7,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7180","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7180","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7180/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7180/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7180","relative":"#7180","full":"gitlab-com/gl-infra/reliability#7180"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":77,"epic":{"id":8806,"iid":77,"title":"Sort out monitoring and alerting for Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/77","group_id":1112072},"iteration":null,"health_status":null},{"id":22550222,"iid":7178,"project_id":1304532,"title":"Consider the removal of the nginx ingress for the GKE Container Registry","description":"With the recent implementation of the Container Registry into GKE, we went the quick route and utilized the nginx ingress provided by our helm chart in order to quickly utilize this as a PoC.  This adds a few things:\n1. Complexity with the way our haproxy must transfer data to and from the GKE cluster\n    * https://gitlab.com/gitlab-cookbooks/gitlab-haproxy/commit/29e5dab8aab05d1118df46a0f84f1e47f706dd6c\n    * https://gitlab.com/gitlab-cookbooks/gitlab-haproxy/commit/b7c806f4b77ffa37e30bf429ddc295c388589568\n1. Adds an extra network hop that we don't REALLY need:\n    * Current: GLB -\u003e haproxy -\u003e registry nodes\n    * Proposed: GLB -\u003e haproxy -\u003e nginx ingress -\u003e pods\n    * Ningx is not doing anything out of the ordinary other than forwarding traffic\n1. With this configuration we are using Let's Encrypt on this new external endpoint `registry.gke.\u003cENV\u003e.gitlab.\u003cROOT\u003e`.  This adds a layer of configuration that we could potentially eliminate\n1. This makes it hard to slowly roll traffic into either our VM's or GKE.  Instead our solution is an on/off switch\n    * https://gitlab.com/gitlab-cookbooks/gitlab-haproxy/merge_requests/159/diffs#20875b27e096b4a4356a90b6ae97d03a1dbf877a_114_117\n\n## Proposal\n1. Configure the container registry without an ingress\n1. Expose the container registry service with an internal static IP that we can feed to haproxy\n\n/cc @gitlab-org/delivery","state":"closed","created_at":"2019-07-05T14:12:50.571Z","updated_at":"2022-08-09T22:04:21.406Z","closed_at":"2019-07-23T15:11:38.450Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["TechnicalDebt","chef","kubernetes","priority::1","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":13,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7178","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7178","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7178/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7178/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7178","relative":"#7178","full":"gitlab-com/gl-infra/reliability#7178"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":79,"epic":{"id":8808,"iid":79,"title":"Kubernetes Pre Migration Technical Debt","url":"/groups/gitlab-com/gl-infra/-/epics/79","group_id":1112072},"iteration":null,"health_status":null},{"id":22499039,"iid":7170,"project_id":1304532,"title":"Dead Tuples and Stale Replica","description":"These two errors are intermittently flapping.\n\nAdditionally, the runbook has a lot of information which is misleading or not up to date with our current environment.\n\n```\n*patroni-04-db-gprd.c.gitlab-production.internal*\n PostgreSQL dead tuples is too large\n\n The dead tuple ratio of import_export_uploads is greater than 5%\n```\n\n```\n *patroni-04-db-gprd.c.gitlab-production.internal*\n PostgreSQL replication slot patroni_01_db_gprd_c_gitlab_production_internal on patroni-04-db-gprd.c.gitlab-production.internal is\nfalling behind.\n\n\n The replication slot patroni_01_db_gprd_c_gitlab_production_internal on patroni-04-db-gprd.c.gitlab-production.internal is using\na minimum transaction ID that is 861.3k transactions old.\nThis can cause an increase in dead tuples on the primary. This can be\ncaused by long-running transactions on the master or any standby, or unused replication.\n```","state":"closed","created_at":"2019-07-03T22:38:07.524Z","updated_at":"2022-08-09T22:04:27.260Z","closed_at":"2019-07-04T11:16:07.325Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["Database","SRE:On-call","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7170","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7170","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7170/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7170/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7170","relative":"#7170","full":"gitlab-com/gl-infra/reliability#7170"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22498589,"iid":7169,"project_id":1304532,"title":"Register haproxy service on consul","description":"Necessary for us to be able to do dynamic inventory for consul (e.g. for gitlab-org/release/framework#354).","state":"closed","created_at":"2019-07-03T21:53:30.191Z","updated_at":"2022-08-09T22:04:27.757Z","closed_at":"2019-07-04T16:10:29.964Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["team::Reliability","workflow-infra::Done"],"milestone":{"id":878550,"iid":26,"group_id":1112072,"title":"CI/CD \u0026 Enablement - FY20Q2::KR::Chef 15 and Consul for service registration","description":"We are currently running most chef clients on Chef 12 and the current version is Chef 15.  This KR will scope the size of the effort to upgrade nodes in production to chef 15 and pick a reasonable effort to do in Q2.\r\n\r\nWe also had carry over for finishing Consul service registration work from 2019FYQ1.\r\n\r\nEpics:\r\n1. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/69\r\n2. https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/57","state":"closed","created_at":"2019-05-17T22:46:07.911Z","updated_at":"2019-12-04T21:44:14.005Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/26"},"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7169","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7169","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7169/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7169/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7169","relative":"#7169","full":"gitlab-com/gl-infra/reliability#7169"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":69,"epic":{"id":7633,"iid":69,"title":"Wrap up of Consul Deployment","url":"/groups/gitlab-com/gl-infra/-/epics/69","group_id":1112072},"iteration":null,"health_status":null},{"id":22498216,"iid":7168,"project_id":1304532,"title":"git-over-SSH errors debugging","description":"Following on from https://gitlab.com/gitlab-com/gl-infra/production/issues/844 there are still some underlying issues to resolve. In particular the regularity of issues reported in https://gitlab.com/gitlab-com/gl-infra/production/issues/844#note_187833688 suggests we could track that instance down specifically and hopefully capture enough data to find a source of at least one cause.\n\nCurrent status:\nProblem alleviated; some followup still to occur regarding unicorn queuing on git front-end servers","state":"closed","created_at":"2019-07-03T21:21:21.611Z","updated_at":"2022-08-09T22:04:28.366Z","closed_at":"2019-11-21T00:25:17.892Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"user_notes_count":49,"merge_requests_count":0,"upvotes":14,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7168","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7168","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7168/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7168/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7168","relative":"#7168","full":"gitlab-com/gl-infra/reliability#7168"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22487647,"iid":7165,"project_id":1304532,"title":"GKE Prometheus does not store data persistently","description":"Our prometheus instance in GKE is not storing data persistently when the pod is removed.  Despite configuring data to be stored for 4 weeks per our configurations, once the prometheus Pod is removed, an data older than the new pod is lost.  The helm chart defaults to using an EmptyDir instead of a disk.  We can solve this in 2 ways:\n\n1. Add data persistence to the prometheus-operator\n1. Finish this issue: https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7068\n\nI think we should pursue option 1 as there exists the potential that a pod will disappear before thanos has had a chance to grab the data and push the data into cloud storage.  **This is not a replacement for issue #7068**\n\n/cc @gitlab-org/delivery \n/cc @bjk-gitlab","state":"closed","created_at":"2019-07-03T15:13:33.696Z","updated_at":"2022-08-09T22:04:30.159Z","closed_at":"2019-07-11T17:15:33.292Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":8,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7165","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7165","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7165/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7165/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7165","relative":"#7165","full":"gitlab-com/gl-infra/reliability#7165"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":77,"epic":{"id":8806,"iid":77,"title":"Sort out monitoring and alerting for Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/77","group_id":1112072},"iteration":null,"health_status":null},{"id":22483996,"iid":7164,"project_id":1304532,"title":"DRY up terraform module code","description":"With the upgrade to terraform 0.12 complete, and availability of HCL 2.0, we can now take advantage of the new language features to reduce duplication across our terraform codebase, in particular within our modules.\n\n1. [ ] Identify near-identical modules for refactor (e.g. `generic-sv-with-group`, `generic-stor`, `generic-stor-with-group`)\n1. [ ] Create/relate issues for refactor work on specific modules\n1. [ ] Create/relate issues to update version pinning / deploy all changes via `gitlab-com-infrastructure` pipelines","state":"closed","created_at":"2019-07-03T13:48:37.790Z","updated_at":"2022-08-09T23:03:14.219Z","closed_at":"2019-09-23T21:13:48.451Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["auto updated","priority::3","team::Reliability","terraform","workflow-infra::Done"],"milestone":null,"assignees":[{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"}],"author":{"id":3417286,"username":"mwasilewski-gitlab","name":"Michal Wasilewski","state":"blocked","avatar_url":"https://secure.gravatar.com/avatar/2a9fc70321a9df494ecdc8f178df11dd?s=80\u0026d=identicon","web_url":"https://gitlab.com/mwasilewski-gitlab"},"type":"ISSUE","assignee":{"id":693144,"username":"craig","name":"Craig Barrett","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c8dfa1ca41754b9409068e5e42080cd2?s=80\u0026d=identicon","web_url":"https://gitlab.com/craig"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7164","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7164","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7164/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7164/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7164","relative":"#7164","full":"gitlab-com/gl-infra/reliability#7164"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":93,"epic":{"id":12515,"iid":93,"title":"DRY up terraform module code","url":"/groups/gitlab-com/gl-infra/-/epics/93","group_id":1112072},"iteration":null,"health_status":null},{"id":22453338,"iid":7157,"project_id":1304532,"title":"RCA: Degraded performance because of Redis-cache overload.","description":"**Please note:** if the incident relates to sensitive data, or is security related consider\nlabeling this issue with ~security and mark it confidential.\n***\n\n## Summary\n\nSince July 1st, 8:00 UTC we were seeing degraded performance and elevated 500 errors for Web, API and delayed CI jobs. The imminent root cause turned out to be maxing out the CPU on the redis-cache primary by many expensive calls to redis-cache from the application. \n\nService(s) affected : ~\"Service:Web\"\n\nTeam attribution : \n\nMinutes downtime or degradation : 540m based on web below 95% latency APDEX\n\n## Impact \u0026 Metrics\n\nStart with the following:\n\n- What was the impact of the incident?\n  - degraded performance and elevated error rate on Web and API component, delayed CI jobs.\n- Who was impacted by this incident?\n  - All users of GitLab.com, mostly during EMEA business times\n- How did the incident impact customers?\n  - slow loading pages, 500 errors, delayed CI jobs and pull mirrors\n- How many attempts were made to access the impacted service/feature?\n- How many customers were affected?\n- How many customers tried to access the impacted service/feature?\n\nInclude any additional metrics that are of relevance.\n\nProvide any relevant graphs that could help understand the impact of the incident and its dynamics.\n\n![image](/uploads/417ce8afae1b29255173602a3fe98872/image.png)\n\n## Detection \u0026 Response\n\nStart with the following:\n\n- How was the incident detected?\n  - [Pagerduty alert](https://gitlab.pagerduty.com/incidents/PETCR1R) on `GitLabComLatencyWebCritical`\n- Did alarming work as expected?\n  - yes\n- How long did it take from the start of the incident to its detection?\n - 5 minutes\n- How long did it take from detection to remediation?\n  - 27h until a patch eliminated heavy app config requests to redis\n- Were there any issues with the response to the incident? (i.e. bastion host used to access the service was not available, relevant team memeber wasn't page-able, ...)\n  - we should have been detecting Redis-cache slowly becoming saturated earlier\n\n## Timeline\n\n2019-07-01\n\n- 07:56 UTC - connections queueing up at unicorn workers, latencies rise for web and api\n- 08:01 UTC - [Pagerduty alert](https://gitlab.pagerduty.com/incidents/PETCR1R) on `GitLabComLatencyWebCritical`\n- 08:05 UTC - Alert acknowledged by SRE on call\n- 08:15 UTC - Job queue durations rise\n- 08:54 UTC - Incident issue [928](https://gitlab.com/gitlab-com/gl-infra/production/issues/928) opened\n- 09:06 UTC - status.io [incident](https://app.status.io/dashboard/5b36dc6502d06804c08349f7/incident/5d19cd0d0d4f23274506e6f4/edit) opened\n- 09:56 UTC - status.io update: \"We are adding more workers...\"\n- 10:30 UTC - 4 new api and 4 web workers added to LBs https://ops.gitlab.net/gitlab-cookbooks/chef-repo/merge_requests/1338\n- 11:24 UTC - support reports stuck CI jobs for customers (https://gitlab.zendesk.com/agent/tickets/125409)\n- 12:09 UTC - new incident issue [929](https://gitlab.com/gitlab-com/gl-infra/production/issues/929) opened for reports of delayed CI runners\n- 12:11 UTC - [tweet](https://twitter.com/gitlabstatus/status/1145666158382604289) \"jobs on shared runners being picked up at a low rate or appear being stuck...\"\n- 13:14 UTC - status.io update acknowledging CI pipeline delays\n- 13:15 UTC - incident issue [929](https://gitlab.com/gitlab-com/gl-infra/production/issues/929) closed again as it is related to [928](https://gitlab.com/gitlab-com/gl-infra/production/issues/928)\n- 13:51 UTC - status.io update: \"continue to investigate...\", announcing incident issue URL\n- 14:20 UTC - additional workers removed again to reduce connections to redis-cache\n- 16:51 UTC - status.io update: status changed to \"monitoring\", \"CI jobs are catching up...\"\n- 18:11 UTC - status.io update: \"back to normal levels...\"\n- 19:40 UTC - status.io incident resolved\n\n2019-07-02\n\n- 09:45 UTC - kernel update and reboot of redis-cache-03 \n- 10:06 UTC - unexpected failover to redis-cache-01\n- 10:50 UTC - redis-cache-02 kernel upgrade and reboot\n- 11:22 UTC - unexpected failover to redis-cache-02\n- 11:20 UTC - patch eliminating application config requests to redis-cache deployed: https://ops.gitlab.net/gitlab-com/gl-infra/patcher/merge_requests/113 (https://gitlab.com/gitlab-org/gitlab-ee/merge_requests/14500)\n- 11:20 UTC - CPU usage drops to 85%, network from 300Mb/s to under 100Mb/s, all metrics improve\n- 12:15 UTC - redis-cache-01 kernel update and reboot\n\n\n\n## Root Cause Analysis\n\nThe web component had slower response times.\n\n1. Why? - Redis-cache had slower response times.\n2. Why? - Redis-cache was saturating it's CPU.\n3. Why? - Too many and too heavy requests to Redis from the application.\n4. Why? - Missing awareness and testing for how many and how expensive Redis-cache requests would be generated from the application.\n\n\n## What went well\n\n- Alerting worked for getting aware of web performance issues immediately.\n- A lot support from all over engineering to find the root cause and working on several remediations.\n\n## What can be improved\n\n* detection of Redis performance issues (or generally: detecting saturation of a service/system)\n* trend analysis, capacity planning\n* finding the root cause of performance degradations - we sometimes don't followup on degradations if they resolved from self and we didn't see a direct root cause at first sight, but they might be an indication of a deeper issue or trend.\n\n## Corrective actions\n\n- List issues that have been created as corrective actions from this incident.\n- For each issue, include the following:\n    - \u003cBare Issue link\u003e - Issue labeled as ~\"corrective action\".\n    - Include an estimated date of completion of the corrective action.\n    - Incldue the named individual who owns the delivery of the corrective action.\n\nper @andrewn:\n1. [x] Start monitoring on various saturation metrics: https://gitlab.com/gitlab-com/runbooks/merge_requests/1188, add per-service SLOs\n1. [x] Distributed tracing instrumentation of Rails caching: https://gitlab.com/gitlab-org/labkit-ruby/merge_requests/12\n1. [x] Distributed tracing instrumentation of Redis calls: https://gitlab.com/gitlab-org/labkit-ruby/issues/2\n1. [ ] Discuss adding `n+1` style limits on Redis calls, in development and testing environments (no issue yet)\n1. [ ] Discuss adding size limits on Redis keys stored in the cache (no issue yet)\n1. [x] Stop caching junit files in Redis: https://gitlab.com/gitlab-org/gitlab-ce/issues/64035\n1. [ ] Monitor cache misuse of Redis by application teams `redis-cli --bigkeys`\n1. [ ] Add `redis_duration_ms` field to our Rails+API structured logs (no issue yet)\n1. [x] Add documentation on how to monitor redis instances: https://gitlab.com/gitlab-com/runbooks/merge_requests/1187\n1. [x] Consider breaking our Redis instances down further than the current persistent/cache pair - for example, CI-cache, MergeRequest-cache, etc\n1. [ ] Discuss the possibility of moving over to Redis-cluster or managed Redis instances (eg Redis Labs) (no issue yet)\n1. [x] Use cached markdown fields for calculating participants https://gitlab.com/gitlab-org/gitlab-ce/issues/63967\n1. [x] Bandaid: Disable juint reports: https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/30254\n\nper @stanhu:\n1. [x] Move Flipper caching away from Redis to in-memory cache: https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/30276\n1. [x] Move Geo checks away from Redis to in-memory cache: https://gitlab.com/gitlab-org/gitlab-ee/merge_requests/14513\n1. [x] Add Redis details to Peek performance bar: https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/30191\n\nper @rymai:\n1. [ ] compress `Rails.cache` payloads that are bigger than a certain threshold\n\nper @bjk-gitlab:\n\n1. [x] cleanup/improve the redis cache metrics to be more useful: https://gitlab.com/gitlab-org/gitlab-ce/issues/64064\n\n\n## Guidelines\n\n* [Blameless RCA Guideline](https://about.gitlab.com/handbook/infrastructure/#rca)\n* [5 whys](https://en.wikipedia.org/wiki/5_Whys)","state":"closed","created_at":"2019-07-02T16:30:54.793Z","updated_at":"2020-03-06T09:31:57.037Z","closed_at":"2019-09-03T12:54:40.941Z","closed_by":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"labels":["IncidentReview","Service::Redis","oncall","team::Reliability","unscheduled","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7157","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":18,"completed_count":12},"weight":1,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7157","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7157/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7157/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7157","relative":"#7157","full":"gitlab-com/gl-infra/reliability#7157"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":80,"epic":{"id":9012,"iid":80,"title":"Improve Redis cache scalability","url":"/groups/gitlab-com/gl-infra/-/epics/80","group_id":1112072},"iteration":null,"health_status":null},{"id":22441524,"iid":7147,"project_id":1304532,"title":"Make redis-cache instances reboot-safe","description":"When rebooting redis-cache instances for a kernel upgrade, the redis process wasn't starting from self.\nWe need to make the redis process reboot-safe.","state":"closed","created_at":"2019-07-02T11:03:37.172Z","updated_at":"2019-12-06T21:46:07.672Z","closed_at":"2019-09-27T20:38:18.593Z","closed_by":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"labels":["Service::Redis","corrective action","team::Reliability","workflow-infra::Done"],"milestone":{"id":989649,"iid":40,"group_id":1112072,"title":"CI/CD \u0026 Enablement September 2019","description":"","state":"closed","created_at":"2019-09-03T14:00:40.199Z","updated_at":"2019-10-07T17:05:43.892Z","due_date":"2019-09-30","start_date":"2019-09-01","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/40"},"assignees":[{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":367626,"username":"alejandro","name":"Alejandro Rodríguez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/367626/avatar.png","web_url":"https://gitlab.com/alejandro"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7147","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7147","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7147/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7147/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7147","relative":"#7147","full":"gitlab-com/gl-infra/reliability#7147"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22438562,"iid":7146,"project_id":1304532,"title":"turn off junit config, uploading junit artifacts","description":"As part of the effort to alleviate saturation on Redis nodes related to https://gitlab.com/gitlab-com/gl-infra/production/issues/928, we're going to turn off junit config and, uploading junit artifacts.","state":"closed","created_at":"2019-07-02T09:31:28.448Z","updated_at":"2022-08-09T23:03:23.440Z","closed_at":"2019-07-15T22:47:27.426Z","closed_by":{"id":116,"username":"marin","name":"Marin Jankovski","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5154f0b0eda3f798c8a254962d57192f?s=80\u0026d=identicon","web_url":"https://gitlab.com/marin"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[{"id":116,"username":"marin","name":"Marin Jankovski","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5154f0b0eda3f798c8a254962d57192f?s=80\u0026d=identicon","web_url":"https://gitlab.com/marin"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":116,"username":"marin","name":"Marin Jankovski","state":"active","avatar_url":"https://secure.gravatar.com/avatar/5154f0b0eda3f798c8a254962d57192f?s=80\u0026d=identicon","web_url":"https://gitlab.com/marin"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-02","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7146","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7146","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7146/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7146/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7146","relative":"#7146","full":"gitlab-com/gl-infra/reliability#7146"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22438505,"iid":7145,"project_id":1304532,"title":"Redis nodes kernel upgrades","description":"As part of the effort to alleviate saturation on Redis nodes related to https://gitlab.com/gitlab-com/gl-infra/production/issues/928, we're going to upgrade kernels on Redis nodes. @bjk-gitlab noted that the nodes are spending about 50% of their time on system, and we expect the kernel upgrades to reduce this.\n\n@bjk-gitlab and @jarv are working on this.","state":"closed","created_at":"2019-07-02T09:29:11.163Z","updated_at":"2022-08-09T23:03:24.211Z","closed_at":"2019-07-02T13:51:14.395Z","closed_by":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"labels":["Service::Redis","incident","toil","unscheduled","workflow-infra::Done"],"milestone":null,"assignees":[{"id":928230,"username":"bjk-gitlab","name":"Ben Kochie","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/928230/avatar.png","web_url":"https://gitlab.com/bjk-gitlab"},{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"},{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"INCIDENT","assignee":{"id":928230,"username":"bjk-gitlab","name":"Ben Kochie","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/928230/avatar.png","web_url":"https://gitlab.com/bjk-gitlab"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-02","confidential":false,"discussion_locked":null,"issue_type":"incident","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7145","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7145","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7145/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7145/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7145","relative":"#7145","full":"gitlab-com/gl-infra/reliability#7145"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22425562,"iid":7143,"project_id":1304532,"title":"clean up production severity labels","description":"Some **Incident** issues in the production queue use the `Sn` label and others use the `severity::n` label. Some use both and some use none. We need to clean this up:\n\n* use one label or the other\n* ensure all incidents have severity labels","state":"closed","created_at":"2019-07-01T21:32:13.475Z","updated_at":"2022-08-09T23:03:27.479Z","closed_at":"2019-07-08T20:11:49.268Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},{"id":2222520,"username":"dawsmith","name":"Dave Smith","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ef341e061f6b86461626e64c5fbcfe52?s=80\u0026d=identicon","web_url":"https://gitlab.com/dawsmith"},{"id":2759709,"username":"Finotto","name":"Jose Finotto","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2759709/avatar.png","web_url":"https://gitlab.com/Finotto"}],"author":{"id":2360513,"username":"glopezfernandez","name":"Gerardo Lopez-Fernandez","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2360513/avatar.png","web_url":"https://gitlab.com/glopezfernandez"},"type":"ISSUE","assignee":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-02","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7143","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7143","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7143/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7143/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7143","relative":"#7143","full":"gitlab-com/gl-infra/reliability#7143"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22400153,"iid":7136,"project_id":1304532,"title":"Chef runs fail because user databag is not formatted","description":"The `check` [job](https://ops.gitlab.net/gitlab-cookbooks/chef-repo/-/jobs/547453) failed with:\n\n```\n$ find [a-z]* -type f -name \\*json | xargs -I{} -r -n 1 bash -c 'jq . {} \u003e /dev/null || ( echo \"bad JSON {}\" \u0026\u0026 exit 1 )'\n$ find [a-z]* nodes -type f -name '*.json' | xargs -I{} -r -n 1 bash -c 'diff \u003c(cat {}) \u003c(jq . {}) \u003e /dev/null || ( echo \"You must format this file {}\" \u0026\u0026 exit 1 )'\nYou must format this file data_bags/users/cshobe.json\nYou must format this file data_bags/users/yguo.json\nERROR: Job failed: exit code 1\n```","state":"closed","created_at":"2019-07-01T09:39:47.610Z","updated_at":"2019-12-06T21:43:33.054Z","closed_at":"2019-07-01T09:50:47.748Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["chef","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7136","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7136","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7136/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7136/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7136","relative":"#7136","full":"gitlab-com/gl-infra/reliability#7136"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22357954,"iid":7132,"project_id":1304532,"title":"Apply vault terraform config via CI/CD","description":"For consistency, testing and keeping vault deployment secrets in one place we should apply terraform changes for the vault GKE cluster only via CI/CD pipeline.\n\nOther jobs that should be run via CI:\n- re-keying (adding a new pgp key to the repo should trigger a re-keying and pgp encryption of all unseal keys)\n- changes of the basic vault config (accounts/roles/policies)\n- ...","state":"closed","created_at":"2019-06-28T18:52:40.630Z","updated_at":"2019-12-03T22:28:34.387Z","closed_at":"2019-07-14T14:32:04.886Z","closed_by":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"labels":["team::Reliability","workflow-infra::Done"],"milestone":{"id":878522,"iid":21,"group_id":1112072,"title":"Secure and Defend - Deploy Vault to provide a solution for secrets management and use","description":"","state":"closed","created_at":"2019-05-17T21:56:44.114Z","updated_at":"2019-09-09T20:43:58.114Z","due_date":"2019-07-31","start_date":"2019-05-01","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/21"},"assignees":[{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":"2019-07-05","confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7132","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7132","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7132/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7132/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7132","relative":"#7132","full":"gitlab-com/gl-infra/reliability#7132"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":62,"epic":{"id":7471,"iid":62,"title":"Deploy Vault to provide a solution for secrets management and use","url":"/groups/gitlab-com/gl-infra/-/epics/62","group_id":1112072},"iteration":null,"health_status":null},{"id":22354600,"iid":7124,"project_id":1304532,"title":"Metrics from GKE do not have an environment label applied to them","description":"Unlike the majority of our infrastructure we are not applying the `env` label to any metrics that are being captured inside of GKE.  This will pose a problem as we heavily rely on this label for alerting and greatly w/i our dashboards.  Utilize this issue to track adding that label to our metrics.","state":"closed","created_at":"2019-06-28T16:27:23.104Z","updated_at":"2022-08-09T23:03:45.158Z","closed_at":"2019-07-02T14:59:57.488Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7124","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7124","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7124/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7124/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7124","relative":"#7124","full":"gitlab-com/gl-infra/reliability#7124"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":77,"epic":{"id":8806,"iid":77,"title":"Sort out monitoring and alerting for Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/77","group_id":1112072},"iteration":null,"health_status":null},{"id":22354510,"iid":7123,"project_id":1304532,"title":"Add GCP provider (or alternative)  to dev-resources and deprecate DO","description":"Recently, we've seen an increase in random errors in [dev-resources](https://gitlab.com/gitlab-com/dev-resources/) in the past couple of months. \n\nIt has been a source of frustration for the support team when creating instances for reproducing issues or handling interviews.\n* https://gitlab.slack.com/archives/C4Y5DRKLK/p1561730479035000\n* https://gitlab.slack.com/archives/C4Y5DRKLK/p1561711484479900\n* https://gitlab.slack.com/archives/C4Y5DRKLK/p1561564095249700\n* https://gitlab.slack.com/archives/C4Y5DRKLK/p1559761492127800\n* https://gitlab.slack.com/archives/C4Y5DRKLK/p1559759365125100\n\nI don't think DO is scaling well. Some of the errors appear to be responses from DO's API (500s). We should consider [adding a GCP provider](https://cloud.google.com/community/tutorials/managing-gcp-projects-with-terraform) and start migrating off DO and maybe eventually deprecating it. \n\nRelated to https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/6526","state":"closed","created_at":"2019-06-28T16:23:51.090Z","updated_at":"2022-08-09T23:03:45.960Z","closed_at":"2019-07-22T22:13:51.054Z","closed_by":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"labels":["team::Reliability","workflow-infra::Done"],"milestone":{"id":918500,"iid":31,"group_id":1112072,"title":"CI/CD \u0026 Enablement Team July 2019","description":"","state":"closed","created_at":"2019-06-28T23:28:40.137Z","updated_at":"2019-08-06T13:08:46.604Z","due_date":"2019-07-31","start_date":"2019-07-01","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/31"},"assignees":[{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"}],"author":{"id":136229,"username":"cindy","name":"Cindy Pallares 🦉","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/136229/avatar.png","web_url":"https://gitlab.com/cindy"},"type":"ISSUE","assignee":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"user_notes_count":15,"merge_requests_count":0,"upvotes":9,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7123","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":6,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7123","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7123/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7123/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7123","relative":"#7123","full":"gitlab-com/gl-infra/reliability#7123"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22334879,"iid":7119,"project_id":1304532,"title":"Camoproxy URL blacklist tooling","description":"To implement the URL blacklisting proposed in https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/6836#note_182241021","state":"closed","created_at":"2019-06-28T01:27:54.707Z","updated_at":"2022-08-09T23:03:47.167Z","closed_at":"2019-07-05T03:35:24.399Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7119","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7119","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7119/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7119/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7119","relative":"#7119","full":"gitlab-com/gl-infra/reliability#7119"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":66,"epic":{"id":7491,"iid":66,"title":"Deploy Camo proxy server [100%]","url":"/groups/gitlab-com/gl-infra/-/epics/66","group_id":1112072,"human_readable_end_date":"Jul 18, 2019","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":22325891,"iid":7111,"project_id":1304532,"title":"gitlab-com repo pulling master branch of our charts from pages","description":"The gitlab-com repo pulls a version specified by an ENV variable, defaulting to `master` to determine which version of the chart we want.  Prior to switching to helm tiller we were relying on a version specified in a file: https://gitlab.com/gitlab-com/gl-infra/k8s-workloads/gitlab-com/blob/master/GITLAB_CHARTS_VERSION\n\nhttps://gitlab.com/gitlab-com/gl-infra/k8s-workloads/gitlab-com/blob/master/bin/.gitlab.bash#L9\n\nSetup this repo such that we are pulling a specific version again as defined in this provided file.  Ensure that the file is updated to match that of master which is what we've been using to deploy lately.\n\nConsider the fact that our helm charts are also running on GitLab pages.  Should pages be down for any reason, we secondary place to grab our charts.  \n\n/cc @gitlab-org/delivery \n/cc @gitlab-com/gl-infra","state":"closed","created_at":"2019-06-27T16:00:54.758Z","updated_at":"2022-08-09T23:03:52.953Z","closed_at":"2019-08-02T12:23:47.491Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["TechnicalDebt","kubernetes","priority::2","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7111","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7111","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7111/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7111/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7111","relative":"#7111","full":"gitlab-com/gl-infra/reliability#7111"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":79,"epic":{"id":8808,"iid":79,"title":"Kubernetes Pre Migration Technical Debt","url":"/groups/gitlab-com/gl-infra/-/epics/79","group_id":1112072},"iteration":null,"health_status":null},{"id":22325710,"iid":7110,"project_id":1304532,"title":"Our CI Images pull master for the helm components, consider locking these down","description":"Both the installation of helm and the helm tiller plugin are using the latest and/or master during it's build process: https://gitlab.com/gitlab-com/gl-infra/k8s-workloads/common/blob/master/Dockerfile-ci#L5-9\n\nConsider pinning the versions to specific releases of these to prevent issues or breakages.","state":"closed","created_at":"2019-06-27T15:54:44.977Z","updated_at":"2022-08-09T23:03:54.274Z","closed_at":"2019-08-02T12:26:55.642Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["TechnicalDebt","kubernetes","priority::3","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"user_notes_count":3,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7110","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7110","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7110/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7110/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7110","relative":"#7110","full":"gitlab-com/gl-infra/reliability#7110"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":79,"epic":{"id":8808,"iid":79,"title":"Kubernetes Pre Migration Technical Debt","url":"/groups/gitlab-com/gl-infra/-/epics/79","group_id":1112072},"iteration":null,"health_status":null},{"id":22273197,"iid":7103,"project_id":1304532,"title":"Build the staging Kubernetes Cluster for the Container Registry","description":"Utilize this issue to track progress in creating the container registry for the staging environment.\n\nKeep https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/6862 updated to ensure we get ourselves fully documented as we proceed.\n\nThe end goal of this issue, is to have all registry traffic destined for the staging environment sent inside of the GKE platform","state":"closed","created_at":"2019-06-26T14:10:05.735Z","updated_at":"2022-08-09T23:03:59.943Z","closed_at":"2019-06-27T11:56:10.353Z","closed_by":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"labels":["Service::Container Registry","kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"},{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"}],"author":{"id":2524675,"username":"skarbek","name":"John Skarbek","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c6455ce4726023aac6dd7fb0acd1f236?s=80\u0026d=identicon","web_url":"https://gitlab.com/skarbek"},"type":"ISSUE","assignee":{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"},"user_notes_count":10,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7103","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7103","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7103/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7103/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7103","relative":"#7103","full":"gitlab-com/gl-infra/reliability#7103"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":70,"epic":{"id":7650,"iid":70,"title":"Migrate the GitLab Registry Service to Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/70","group_id":1112072},"iteration":null,"health_status":null},{"id":22261446,"iid":7100,"project_id":1304532,"title":"Upgrade gitlab packages on postgres DR hosts","description":"This is a proposed ~\"corrective action\" for https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7090.\n\nWe employ two DR replicas which run on the standard omnibus package. However, we don't upgrade the package with a regular deploy and the current version is `11.2.0-rc2.ee.0`. This is because we rarely use the codebase on these hosts and only cared about postgres so far.\n\nHowever, especially in the DR context, it is beneficial to have the latest codebase installed. This allows us to easily run a Rails console which talks to the delayed replica, for example. This is helpful when we recover an accidentally deleted project. It is currently not possible because the Rails console with the old codebase doesn't even start anymore on that instance.\n\nThe two DR replicas in question are (gprd here, similar in gstg):\n\n* `postgres-dr-delayed-01-db-gprd`\n* `postgres-dr-archive-01-db-gprd`","state":"closed","created_at":"2019-06-26T10:06:23.383Z","updated_at":"2021-06-24T08:09:23.049Z","closed_at":"2019-07-01T10:18:27.328Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["Database","auto updated","corrective action","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7100","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7100","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7100/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7100/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7100","relative":"#7100","full":"gitlab-com/gl-infra/reliability#7100"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22261178,"iid":7099,"project_id":1304532,"title":"Start rails console with read-only database session by default","description":"This is a proposed ~\"corrective action\" for https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7090.\n\nWe employ a \"console host\" on `console-01-sv-gprd` which people can use to start a Rails console (via SSH, using either the console user that starts the console automatically or by excecuting `gitlab-rails c` on the host).\n\n### Proposal\n\nBy default, the Rails console should have a read-only database session. This allows for safe(r) use of the Rails console without risk of altering any database data accidentally. When read-write access is necessary, the session can be promoted read-write from the console.\n\n### Implementation\n\nIn postgres, a database session can be set [read-only](https://www.postgresql.org/docs/9.6/sql-set-transaction.html) with `SET SESSION CHARACTERISTICS AS TRANSACTION READ ONLY`. When we start the Rails console, we would have to SET this attribute. This may be possible by configuring `database.yml` accordingly or by using a postgres user dedicated to console access which would have this as a default.\n\nIn order to promote a session read-write, we'd simply set it back with `SET SESSION CHARACTERISTICS AS TRANSACTION READ WRITE`. This can be shipped as part of the codebase in `Gitlab::Database` for convenience.","state":"closed","created_at":"2019-06-26T10:02:27.756Z","updated_at":"2020-11-05T21:51:06.604Z","closed_at":"2019-07-10T09:25:09.659Z","closed_by":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"labels":["Database","auto updated","corrective action","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"}],"author":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"type":"ISSUE","assignee":{"id":1562869,"username":"abrandl","name":"Andreas Brandl","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1562869/avatar.png","web_url":"https://gitlab.com/abrandl"},"user_notes_count":3,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7099","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7099","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7099/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7099/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7099","relative":"#7099","full":"gitlab-com/gl-infra/reliability#7099"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22260511,"iid":7098,"project_id":1304532,"title":"Validate/Establish backup strategy","description":"It's possible that slight \"time alignment\" / consistency differences between disk snapshots in a raidz array will result in an umountable zfs dataset.\n\nIf we can't restore a raidz array from GCP snapshots, then we will need to propose an alternative, i.e. by periodically shipping ZFS snapshots elsewhere from day 1 of git storage nodes on ZFS so that we do not lose our ability to recover data from several hours/days ago.\n\ncc @T4cC0re","state":"closed","created_at":"2019-06-26T09:50:47.905Z","updated_at":"2022-08-09T23:04:03.381Z","closed_at":"2019-07-11T10:44:18.340Z","closed_by":{"id":555989,"username":"T4cC0re","name":"Hendrik Meyer","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/555989/avatar.png","web_url":"https://gitlab.com/T4cC0re"},"labels":["Global:In Progress","auto updated","workflow-infra::Done"],"milestone":{"id":881181,"iid":29,"group_id":1112072,"title":"Dev \u0026 Ops - FY20Q2::KR::Migrate repos to ZFS storage","description":"","state":"closed","created_at":"2019-05-21T07:03:02.439Z","updated_at":"2019-10-09T16:21:23.068Z","due_date":"2019-07-31","start_date":null,"expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/29"},"assignees":[{"id":555989,"username":"T4cC0re","name":"Hendrik Meyer","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/555989/avatar.png","web_url":"https://gitlab.com/T4cC0re"}],"author":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"type":"ISSUE","assignee":{"id":555989,"username":"T4cC0re","name":"Hendrik Meyer","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/555989/avatar.png","web_url":"https://gitlab.com/T4cC0re"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7098","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7098","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7098/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7098/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7098","relative":"#7098","full":"gitlab-com/gl-infra/reliability#7098"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":65,"epic":{"id":7474,"iid":65,"title":"migrate repos to ZFS storage - 60%","url":"/groups/gitlab-com/gl-infra/-/epics/65","group_id":1112072,"human_readable_end_date":"Jul 31, 2019","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":22249328,"iid":7097,"project_id":1304532,"title":"Replace uses of monitoring-lb with https-lb","description":"As soon as https-lb (a slightly more generic version of monitoring-lb) has been proven to work for camoproxy (should be fine, just prove it), circle back and replace uses of monitoring-lb with https-lb, then remove/archive monitoring-lb.","state":"closed","created_at":"2019-06-25T23:42:37.321Z","updated_at":"2019-12-06T21:43:32.765Z","closed_at":"2019-09-06T03:19:31.714Z","closed_by":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"labels":["team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"}],"author":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"type":"ISSUE","assignee":{"id":3623028,"username":"cmiskell","name":"Craig Miskell","state":"active","avatar_url":"https://secure.gravatar.com/avatar/852a93b505b1f4a5549595792035f445?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmiskell"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7097","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7097","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7097/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7097/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7097","relative":"#7097","full":"gitlab-com/gl-infra/reliability#7097"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22246545,"iid":7095,"project_id":1304532,"title":"Make it possible to whitelist an IP for all of GitLab.com, not just the API","description":"Currently we are able to whitelist IPs to get around our rate limiting for the API (`/api`) but we have no way to do it for the site as a whole. In order to facilitate an internal request for whitelisting, we need to implement a way to whitelist an IP from the rate limit for the entire site.\n\ncc/ @cmcfarland @jsalazar-gitlab","state":"closed","created_at":"2019-06-25T20:27:45.861Z","updated_at":"2022-08-09T23:04:04.957Z","closed_at":"2020-03-13T22:08:27.104Z","closed_by":{"id":528408,"username":"asandov","name":"AnthonySandoval","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/528408/avatar.png","web_url":"https://gitlab.com/asandov"},"labels":["team::Reliability","workflow-infra::Done"],"milestone":{"id":918500,"iid":31,"group_id":1112072,"title":"CI/CD \u0026 Enablement Team July 2019","description":"","state":"closed","created_at":"2019-06-28T23:28:40.137Z","updated_at":"2019-08-06T13:08:46.604Z","due_date":"2019-07-31","start_date":"2019-07-01","expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/31"},"assignees":[{"id":194566,"username":"cmcfarland","name":"Cameron McFarland","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0fea59864aa5c034e15089251bf9fa8f?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmcfarland"},{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"}],"author":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"type":"ISSUE","assignee":{"id":194566,"username":"cmcfarland","name":"Cameron McFarland","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0fea59864aa5c034e15089251bf9fa8f?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmcfarland"},"user_notes_count":6,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7095","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7095","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7095/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7095/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7095","relative":"#7095","full":"gitlab-com/gl-infra/reliability#7095"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22240869,"iid":7091,"project_id":1304532,"title":"Registry 5xx alerts are numerous with no obvious problem to resolve.","description":"The on-call SRE's receive alerts that indicate a high number of 5xx errors from the registry service. But there are no obvious service problems (registry is down, serving requests slowly, etc.) that can be repaired. The issue often recovers before any action is taken.\n\nEither our alerting for 5xx errors in registry are too stringent, or there is a legitimate issue with registry that needs to be fixed.\n\nOne of these should be the criteria to close this issue:\n* Do we have an SLO that we must keep registry 5xx errors below a threshold? If so, are our current alerts enforcing that level, or a level higher? Create an issue(s) or merge request(s) to address the changes to our alerting.\n* If the alerting is correct, what is the underlying issue? Create an issue (or issues) to resolve that problem.","state":"closed","created_at":"2019-06-25T17:11:33.889Z","updated_at":"2022-08-09T23:04:07.767Z","closed_at":"2019-07-03T19:36:43.419Z","closed_by":{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"}],"author":{"id":194566,"username":"cmcfarland","name":"Cameron McFarland","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0fea59864aa5c034e15089251bf9fa8f?s=80\u0026d=identicon","web_url":"https://gitlab.com/cmcfarland"},"type":"ISSUE","assignee":{"id":2336046,"username":"devin","name":"Devin Sylva","state":"active","avatar_url":"https://secure.gravatar.com/avatar/424b025122218e9a586245e301c1c725?s=80\u0026d=identicon","web_url":"https://gitlab.com/devin"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7091","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7091","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7091/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7091/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7091","relative":"#7091","full":"gitlab-com/gl-infra/reliability#7091"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22217251,"iid":7085,"project_id":1304532,"title":"Create environment for migration testing","description":"Create an easily re-creatable sandbox environment to test gitaly node migration from ones that are backed by ext4 to ones that are backed by ZFS.\n\nIdeally, the deliverable will be a repository including:\n\n* Terraform for a GitLab environment where everything is minimal except gitaly shards, where we will need a few (3?) for testing. Initially the Gitaly shards will use ext4.\n* Integration with chef. Consider whether it's worth using another chef organisation or not.\n* Scripts to fill the Gitaly nodes with dummy data.\n* A readme explaining how everything is set up, how to use it, and how to tear it down.\n\nUse as much resource isolation as possible, in a separate GCP project.","state":"closed","created_at":"2019-06-25T09:05:31.797Z","updated_at":"2022-08-09T23:04:14.040Z","closed_at":"2019-07-09T14:39:30.689Z","closed_by":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"labels":["Global:In Progress","auto updated","workflow-infra::Done"],"milestone":{"id":881181,"iid":29,"group_id":1112072,"title":"Dev \u0026 Ops - FY20Q2::KR::Migrate repos to ZFS storage","description":"","state":"closed","created_at":"2019-05-21T07:03:02.439Z","updated_at":"2019-10-09T16:21:23.068Z","due_date":"2019-07-31","start_date":null,"expired":true,"web_url":"https://gitlab.com/groups/gitlab-com/gl-infra/-/milestones/29"},"assignees":[{"id":3417286,"username":"mwasilewski-gitlab","name":"Michal Wasilewski","state":"blocked","avatar_url":"https://secure.gravatar.com/avatar/2a9fc70321a9df494ecdc8f178df11dd?s=80\u0026d=identicon","web_url":"https://gitlab.com/mwasilewski-gitlab"},{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"}],"author":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"type":"ISSUE","assignee":{"id":3417286,"username":"mwasilewski-gitlab","name":"Michal Wasilewski","state":"blocked","avatar_url":"https://secure.gravatar.com/avatar/2a9fc70321a9df494ecdc8f178df11dd?s=80\u0026d=identicon","web_url":"https://gitlab.com/mwasilewski-gitlab"},"user_notes_count":9,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7085","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7085","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7085/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7085/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7085","relative":"#7085","full":"gitlab-com/gl-infra/reliability#7085"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":65,"epic":{"id":7474,"iid":65,"title":"migrate repos to ZFS storage - 60%","url":"/groups/gitlab-com/gl-infra/-/epics/65","group_id":1112072,"human_readable_end_date":"Jul 31, 2019","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":22213445,"iid":7084,"project_id":1304532,"title":"Blueprint for Encrypting (TLS) internal Gitaly traffic","description":"During the work on https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/6484, it became evident that we should write a blueprint and a design doc so that: \n1. Our work is well thought out in advance\n2. The implementation is documented so that our customers can refer to it\n3. Provides us pinning points to iterate in the future \n\nWill work on an MR for it.","state":"closed","created_at":"2019-06-25T07:03:03.575Z","updated_at":"2022-08-09T23:04:14.566Z","closed_at":"2022-08-02T06:05:06.287Z","closed_by":{"id":1786152,"username":"gitlab-bot","name":"🤖 GitLab Bot 🤖","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1786152/avatar.png","web_url":"https://gitlab.com/gitlab-bot"},"labels":["auto updated","blueprint","workflow-infra::Done"],"milestone":null,"assignees":[],"author":{"id":2601632,"username":"aamarsanaa","name":"Amarbayar Amarsanaa","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2601632/avatar.png","web_url":"https://gitlab.com/aamarsanaa"},"type":"ISSUE","assignee":null,"user_notes_count":6,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7084","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":6,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7084","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7084/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7084/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7084","relative":"#7084","full":"gitlab-com/gl-infra/reliability#7084"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22211442,"iid":7083,"project_id":1304532,"title":"Service inventory catalog to product","description":"### Background\nIn 2019Q1, we delivered Service Inventory Catalog ([Design Doc](https://about.gitlab.com/handbook/engineering/infrastructure/design/service-inventory-catalog/) | [Production App](https://us-central1-gitlab-infra-automation-stg.cloudfunctions.net/ui/services)) in an effort to help centralize tribal knowledge of our production services, reduce time to search for information and reduce onboarding time among other benefits. \n\nGiven that the Service Inventory Catalog (SIC) takes a step in the direction of addressing problems that are common across teams, organizations and companies, not just GitLab, there is an interest of exploring options to take this solution to product so that our customers can run something similar for their need. \n\nIn all, we believe that any individual or a team building service(s) (requirements, designs, ownerships, dependencies, documentations, configurations, runbooks, playbooks, security aspects) should document and maintain them. SIC aims to find a home for all of these information. Just like how it is a good practice for every version controlled project to have a README.md file, can a service-inventory-catalog become a good practice, too?\n\n### Objective \nThe objective of this issue is to keep track of the work to:\n* Investigate whether it is feasible to deliver SIC to product\n* Explore option(s) of how we want to deliver it (thinking from the perspective on how our customers would/might use it)\n* Scope the effort and identify dependencies/resources\n* Implement\n* Announce\n\n### References \n- [Service Inventory Catalog design doc](https://about.gitlab.com/handbook/engineering/infrastructure/design/service-inventory-catalog)\n- [Service Catalog YML file](https://gitlab.com/gitlab-com/runbooks/blob/master/services/service-catalog.yml)\n- [Team YML file](https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/data/team.yml)\n- [Deployed version](https://us-central1-gitlab-infra-automation.cloudfunctions.net/ui/)\n- [Source code](https://gitlab.com/gitlab-com/gl-infra/service-catalog-app)\n\ncc @Finotto","state":"closed","created_at":"2019-06-25T04:53:39.956Z","updated_at":"2022-08-09T23:04:15.034Z","closed_at":"2022-08-02T06:05:07.199Z","closed_by":{"id":1786152,"username":"gitlab-bot","name":"🤖 GitLab Bot 🤖","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1786152/avatar.png","web_url":"https://gitlab.com/gitlab-bot"},"labels":["auto updated","dogfooding","workflow-infra::Done"],"milestone":null,"assignees":[],"author":{"id":2601632,"username":"aamarsanaa","name":"Amarbayar Amarsanaa","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2601632/avatar.png","web_url":"https://gitlab.com/aamarsanaa"},"type":"ISSUE","assignee":null,"user_notes_count":12,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7083","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7083","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7083/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7083/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7083","relative":"#7083","full":"gitlab-com/gl-infra/reliability#7083"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22194004,"iid":7078,"project_id":1304532,"title":"Use common CI image for k8s-workloads/gitlab-com and turn on registry metrics","description":"Now that we have a common project https://gitlab.com/gitlab-com/gl-infra/k8s-workloads/common for the CI image and some CI config we can utilize it for `gitlab-com`. This issue tracks the following:\n\n- [x] Use the common CI image for running pipelines in ops\n- [x] Adapt pipelines so we have similar job names for applying updates\n- [x] Adjust configuration so we can start scraping metrics","state":"closed","created_at":"2019-06-24T14:13:09.566Z","updated_at":"2022-08-10T00:03:11.739Z","closed_at":"2019-06-28T07:56:05.302Z","closed_by":{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"},"labels":["kubernetes","team::Delivery","workflow-infra::Done"],"milestone":null,"assignees":[{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"}],"author":{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"},"type":"ISSUE","assignee":{"id":1254817,"username":"jarv","name":"John Jarvis","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1254817/avatar.png","web_url":"https://gitlab.com/jarv"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7078","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":3},"weight":2,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7078","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7078/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7078/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7078","relative":"#7078","full":"gitlab-com/gl-infra/reliability#7078"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":70,"epic":{"id":7650,"iid":70,"title":"Migrate the GitLab Registry Service to Kubernetes","url":"/groups/gitlab-com/gl-infra/-/epics/70","group_id":1112072},"iteration":null,"health_status":null},{"id":22192027,"iid":7076,"project_id":1304532,"title":"Alert if redis process is down","description":"We don't get any alerts if the redis process on a slave is down: https://gitlab.com/gitlab-com/gl-infra/production/issues/914","state":"closed","created_at":"2019-06-24T13:15:53.824Z","updated_at":"2022-08-10T00:03:13.744Z","closed_at":"2019-06-24T16:17:36.096Z","closed_by":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"labels":["SRE:On-call","alert","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"}],"author":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"type":"ISSUE","assignee":{"id":3059703,"username":"hphilipps","name":"Henri Philipps","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3059703/avatar.png","web_url":"https://gitlab.com/hphilipps"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7076","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7076","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7076/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7076/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7076","relative":"#7076","full":"gitlab-com/gl-infra/reliability#7076"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22183983,"iid":7074,"project_id":1304532,"title":"Move gitlab-cookbooks group under gl-infra","description":"# What?\n\nTransfer the gitlab-cookbooks group to be a subgroup of gitlab-com/gl-infra on both .com and ops.\n\n# Why?\n\nPermissions inheritance from gl-infra, and organisation.\n\n# How?\n\n1. Prepare an MR to chef-repo updating all of the Berkshelf references to use the new subgroup path.\n1. Move the group in .com.\n1. Move the group in ops.\n1. Merge that chef-repo MR.\n1. Notify the infrastructure team that this has been done so that people can update their remotes. This can be done using this issue.\n\n@gitlab-com/gl-infra what do you think of the idea? IIRC this has been discussed before. Have I missed any considerations in the \"how\" section?","state":"closed","created_at":"2019-06-24T09:00:20.176Z","updated_at":"2022-09-01T01:28:19.719Z","closed_at":"2022-09-01T01:28:19.123Z","closed_by":{"id":10167447,"username":"afappiano","name":"Anthony Fappiano","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/10167447/avatar.png","web_url":"https://gitlab.com/afappiano"},"labels":["chef","priority::4"],"milestone":null,"assignees":[],"author":{"id":3911656,"username":"craigf","name":"Craig Furman","state":"blocked","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3911656/avatar.png","web_url":"https://gitlab.com/craigf"},"type":"ISSUE","assignee":null,"user_notes_count":13,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7074","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7074","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7074/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7074/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7074","relative":"#7074","full":"gitlab-com/gl-infra/reliability#7074"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22171958,"iid":7073,"project_id":1304532,"title":"Fix or remove Redis role portion of shell prompt","description":"I just noticed that our custom shell prompt is broken on the Redis servers.  The prompt always shows the string `REDIS_CHECKCMD_ERROR`.\n\nThat string is set by `/usr/local/bin/custom_ps1.sh`, which on a Redis host tries to determine the current role (primary or secondary) of the local Redis instance by connecting to the instance via Unix socket:\n```\n    check_cmd=\"$(/opt/gitlab/embedded/bin/redis-cli -s /var/opt/gitlab/redis/redis.socket role 2\u003e/dev/null)\"\n    if [[ $? -ne 0 ]]; then\n        echo -n \"REDIS_CHECKCMD_ERROR\"\n        return\n    fi\n    if [[ \"${check_cmd}\" == *\"master\"* ]]; then\n        echo -n \"PRIMARY-REDIS\"\n    else\n        echo -n \"secondary-redis\"\n    fi\n```\n\nHowever, our Redis instance isn't currently configured to accept Unix socket connections.  In `/var/opt/gitlab/redis/redis.conf` we set `unixsocketperms` but not `unixsocket` itself.  Also, Redis is configured to require authentication (`requirepass`), which `custom_ps1.sh` does not do.\n\nAsk the SRE/DBRE team whether we should fix or remove this portion of the shell prompt.\n\nIf we decide to fix it, should we make a helper script in /usr/local/bin to successfully open a redis-cli session?  That would follow the pattern we use for psql access on Postgres hosts.  We'd also need to decide whether to re-enable Unix socket listener or use the TCP listener.  TCP is a simpler fix, since it would not require bouncing Redis.","state":"closed","created_at":"2019-06-23T18:13:38.750Z","updated_at":"2022-08-10T00:03:14.878Z","closed_at":"2019-11-26T20:40:12.134Z","closed_by":{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"},"labels":["TechnicalDebt","auto updated","team::Reliability","workflow-infra::Done"],"milestone":null,"assignees":[{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"}],"author":{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"},"type":"ISSUE","assignee":{"id":3947902,"username":"msmiley","name":"Matt Smiley","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3947902/avatar.png","web_url":"https://gitlab.com/msmiley"},"user_notes_count":9,"merge_requests_count":1,"upvotes":3,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7073","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7073","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7073/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7073/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7073","relative":"#7073","full":"gitlab-com/gl-infra/reliability#7073"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":22146023,"iid":7072,"project_id":1304532,"title":"Investigate why API whitelist isn't working","description":"We added a whitelist entry for @jsalazar-gitlab in [chef-repo!1280](https://ops.gitlab.net/gitlab-cookbooks/chef-repo/merge_requests/1280), but when applied and reloaded it did not seem to work. \n\n@cmcfarland, @alejandro, and I have spent a while investigating this today and thus I decided to make an issue about it.\n\nAs of now we are in the process of trying to restart haproxy to see if that resolves the issue.\n\nOtherwise, I'm pretty stumped.","state":"closed","created_at":"2019-06-21T22:32:39.424Z","updated_at":"2022-08-10T00:03:15.689Z","closed_at":"2019-06-25T19:29:44.871Z","closed_by":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"labels":["workflow-infra::Done"],"milestone":null,"assignees":[{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"}],"author":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"type":"ISSUE","assignee":{"id":429540,"username":"ahanselka","name":"Alex Hanselka","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/429540/avatar.png","web_url":"https://gitlab.com/ahanselka"},"user_notes_count":5,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/7072","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/1304532/issues/7072","notes":"https://gitlab.com/api/v4/projects/1304532/issues/7072/notes","award_emoji":"https://gitlab.com/api/v4/projects/1304532/issues/7072/award_emoji","project":"https://gitlab.com/api/v4/projects/1304532","closed_as_duplicate_of":null},"references":{"short":"#7072","relative":"#7072","full":"gitlab-com/gl-infra/reliability#7072"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null}]