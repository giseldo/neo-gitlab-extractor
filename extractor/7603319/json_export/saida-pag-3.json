[{"id":80284911,"iid":2627,"project_id":7603319,"title":"Meltano Invoke/Select does not invalidate catalog cache after reinstalling a tap","description":"\u003c!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n---\u003e\n\n### What is the current *bug* behavior?\nTaps are using cached properties for `meltano invoke/select` even if the tap's properties have changed after `meltano install`.\n\n\n\n### What is the expected *correct* behavior?\nWhen running `meltano install`, a tap's properties cache should be invalidated so that `meltano invoke/select` should effectively \"rediscover\" the tap's properties.\n\n\n\n### Steps to reproduce\n```\n# install all taps\n1. meltano install\n2. meltano invoke tap-custom-tap\n# update tap-custom-tap repo with some new schema properties\n3. meltano install tap-custom-tap\n4. meltano invoke tap-custom-tap\n```\n\n\n### Relevant logs and/or screenshots\nAfter running `meltano install extractor tap-s3-toast`\n```\n\u003e meltano --log-level=debug invoke tap-s3-toast\n[2021-03-04 21:28:53,618] [1|MainThread|root] [DEBUG] Creating engine \u003cmeltano.core.project.Project object at 0x7f510102d160\u003e@sqlite:////projects/.meltano/meltano.db\n[2021-03-04 21:28:54,642] [1|MainThread|root] [DEBUG] Created configuration at /projects/.meltano/run/tap-s3-toast/tap.config.json\n[2021-03-04 21:28:54,643] [1|MainThread|root] [DEBUG] Could not find tap.properties.json in /projects/.meltano/extractors/tap-s3-toast/tap.properties.json, skipping.\n[2021-03-04 21:28:54,643] [1|MainThread|root] [DEBUG] Could not find tap.properties.cache_key in /projects/.meltano/extractors/tap-s3-toast/tap.properties.cache_key, skipping.\n[2021-03-04 21:28:54,643] [1|MainThread|root] [DEBUG] Could not find state.json in /projects/.meltano/extractors/tap-s3-toast/state.json, skipping.\n[2021-03-04 21:28:54,643] [1|MainThread|meltano.core.plugin.singer.tap] [DEBUG] Using cached catalog file\n```\n\n### Possible fixes\nAccording to @DouweM and my [Slack conversation](https://meltano.slack.com/archives/C013EKWA2Q1/p1614892532050300), `meltano invoke/select` should have some logic to invalidate caches. Other options are removing the cache when running `meltano install` either by default or with an optional cli flag.\n\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team","state":"closed","created_at":"2021-03-04T21:55:13.432Z","updated_at":"2021-08-27T12:26:32.923Z","closed_at":"2021-08-17T18:19:28.445Z","closed_by":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"labels":["Accepting Merge Requests","Extract","flow::To Do","kind::Bug","urgency::default","valuestream::Meltano"],"milestone":{"id":2169712,"iid":179,"group_id":2524164,"title":"Fri: Aug 20, 2021","description":"","state":"closed","created_at":"2021-08-01T22:31:40.812Z","updated_at":"2021-08-23T17:49:59.327Z","due_date":"2021-08-20","start_date":"2021-08-14","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/179"},"assignees":[{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"}],"author":{"id":7836798,"username":"macoop2363","name":"Michael Cooper","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7836798/avatar.png","web_url":"https://gitlab.com/macoop2363"},"type":"ISSUE","assignee":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"user_notes_count":4,"merge_requests_count":1,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2627","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2627","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2627/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2627/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2627","relative":"#2627","full":"meltano/meltano#2627"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":79729839,"iid":2605,"project_id":7603319,"title":"Add Superset as a plugin","description":"- https://superset.apache.org/\n- https://github.com/apache/superset\n- https://pypi.org/project/apache-superset\n\n```bash\nmeltano add analyzer superset\n\nmeltano invoke superset db upgrade # Run automatically?\nmeltano invoke superset fab create-admin\nmeltano invoke superset init # Run automatically?\nmeltano invoke superset run\n```\n\nMeltano can manage Superset configuration (https://superset.apache.org/docs/installation/configuring-superset) by allowing values to be set for the keys in https://github.com/apache/superset/blob/master/superset/config.py, automatically generating `superset_config.py`, and pointing Superset there by using the `SUPERSET_CONFIG_PATH` env var. Users should also be able to set `SUPERSET_CONFIG_PATH` (or `meltano config superset set config_path \u003cpath\u003e`) themselves to use their own config file.\n\nIdeally, Meltano would also be able to inject database connection strings corresponding to loaders directly into Superset so that these don't need to be managed in two places: https://superset.apache.org/docs/databases/installing-database-drivers, https://superset.apache.org/docs/databases/postgres. Possibly through the `DB_CONNECTION_MUTATOR` setting? https://github.com/apache/superset/issues/9045","state":"closed","created_at":"2021-02-24T16:52:39.171Z","updated_at":"2022-05-25T21:48:14.055Z","closed_at":"2022-05-25T21:48:13.612Z","closed_by":{"id":1942272,"username":"tayloramurphy","name":"Taylor A Murphy","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png","web_url":"https://gitlab.com/tayloramurphy"},"labels":["CLI","Integrations","OKR: Be the DataOps OS","Office Hours::Discussed","Plugin Management","Roadmap","Visualization","flow::Doing","kind::Feature","valuestream::Meltano"],"milestone":{"id":2351599,"iid":209,"group_id":2524164,"title":"May 2022","description":"","state":"active","created_at":"2021-11-29T21:38:23.665Z","updated_at":"2021-11-29T21:38:23.665Z","due_date":"2022-05-31","start_date":"2022-05-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/209"},"assignees":[{"id":8668050,"username":"pnadolny13","name":"Pat Nadolny","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png","web_url":"https://gitlab.com/pnadolny13"}],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":{"id":8668050,"username":"pnadolny13","name":"Pat Nadolny","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png","web_url":"https://gitlab.com/pnadolny13"},"user_notes_count":23,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2605","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2605","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2605/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2605/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2605","relative":"#2605","full":"meltano/meltano#2605"},"severity":"UNKNOWN","moved_to_id":109130037,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":79000530,"iid":2575,"project_id":7603319,"title":"Let plugin `pip_url` take into account Python version","description":"The `pip_url` for `airflow` is currently `apache-airflow==1.10.14 --constraint https://raw.githubusercontent.com/apache/airflow/constraints-1.10.14/constraints-3.6.txt`, using a constraints file built specifically for Python 3.6, regardless of the version that's actually used.\n\nWith Airflow 1.10.14, this is OK, because the constraints file is actually valid on 3.7 and 3.8 as well, but this is not the case for Airflow 2.0.1's https://raw.githubusercontent.com/apache/airflow/constraints-2.0.1/constraints-3.6.txt.\n\nThis can be seen in https://gitlab.com/meltano/meltano/-/merge_requests/2032 and pipelines https://gitlab.com/michelrado/meltano/-/jobs/1026252711 (3.7) and https://gitlab.com/michelrado/meltano/-/jobs/1025856502 (3.8).\n\nOne way to solve this would be to let a `PYTHON_VERSION` environment variable to referenced from `pip_url`, like so:\n\n```yaml\npip_url: 'apache-airflow==2.0.1 --constraint https://raw.githubusercontent.com/apache/airflow/constraints-2.0.1/constraints-${PYTHON_VERSION}.txt'\n```","state":"closed","created_at":"2021-02-12T20:43:52.805Z","updated_at":"2022-04-18T17:50:38.750Z","closed_at":"2021-08-12T15:52:02.218Z","closed_by":{"id":22132,"username":"pandemicsyn","name":"Florian","state":"active","avatar_url":"https://secure.gravatar.com/avatar/88529f59d3f298bcc9e2a705dc1f1c68?s=80\u0026d=identicon","web_url":"https://gitlab.com/pandemicsyn"},"labels":["Accepting Merge Requests","flow::Doing","kind::Feature","urgency::high","valuestream::Meltano"],"milestone":{"id":2169711,"iid":178,"group_id":2524164,"title":"Fri: Aug 13, 2021","description":"","state":"closed","created_at":"2021-08-01T22:31:19.622Z","updated_at":"2021-08-17T18:17:27.101Z","due_date":"2021-08-13","start_date":"2021-08-07","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/178"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":9,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2575","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2575","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2575/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2575/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2575","relative":"#2575","full":"meltano/meltano#2575"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":78832542,"iid":2566,"project_id":7603319,"title":"Document how to manage incremental replication state without a persistent system database","description":"As I wrote on Slack:\n\n\u003e\u003e\u003e\nNote that there's already a workaround for state management with ephemeral system databases: since `meltano elt` (and `meltano schedule run`) can take a `--state` argument to run with a specific state, and can be run with `--dump=state` to dump the current state instead of running the underlying pipeline, a serverless ELT wrapper can:\n1. download the state from S3\n2. run the pipeline with `--state=\u003cdownloaded state\u003e`\n3. dump the current state (from the local ephemeral system database) to a file with `--dump=state \u003e new-state.json`\n4. upload the new state to S3\n\u003e\u003e\u003e","state":"closed","created_at":"2021-02-10T16:46:47.822Z","updated_at":"2022-05-30T06:52:59.328Z","closed_at":"2022-05-30T06:52:59.240Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Accepting Merge Requests","Documentation","Extract","flow::Triage","kind::Tech Debt","valuestream::Meltano"],"milestone":{"id":2286180,"iid":206,"group_id":2524164,"title":"Q2-2022","description":"","state":"active","created_at":"2021-10-18T15:22:10.509Z","updated_at":"2022-01-24T17:51:23.679Z","due_date":"2022-06-30","start_date":"2022-04-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/206"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2566","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2566","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2566/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2566/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2566","relative":"#2566","full":"meltano/meltano#2566"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":81,"epic":{"id":94267,"iid":81,"title":"Meltano Documentation improvements","url":"/groups/meltano/-/epics/81","group_id":2524164,"human_readable_end_date":"Sep 30, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":77710021,"iid":2528,"project_id":7603319,"title":"Pipelines UI should let an arbitrary cron expression be chosen as a schedule interval","description":"`meltano schedule` already supports arbitrary cron expressions, e.g. `0 */6 * * *` to mean \"every 6 hours\": https://meltano.com/docs/command-line-interface.html#schedule\n\nThe UI should support this as well, both when creating a new pipeline and editing an existing one.\n\nAt the same time, we should show these intervals correctly: https://gitlab.com/meltano/meltano/-/issues/2527\n\nUpdate (2021-11-29): To provide a good user experience, I (AJ) think we should also preview the \"next 10 occurrences\" (or similar) so the user can ensure the cron expression is valid and meets their intended schedule.","state":"closed","created_at":"2021-01-22T22:00:04.111Z","updated_at":"2022-02-26T02:20:14.658Z","closed_at":"2022-02-26T02:20:14.627Z","closed_by":{"id":10324033,"username":"alex1126","name":"Alex Marple","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ccf23db1b9586149d9b9568d7ea42e10?s=80\u0026d=identicon","web_url":"https://gitlab.com/alex1126"},"labels":["Accepting Merge Requests","Frontend","Office Hours::Discussed","UI","flow::Doing","kind::Feature"],"milestone":{"id":2286177,"iid":204,"group_id":2524164,"title":"February 2022","description":"","state":"closed","created_at":"2021-10-18T15:21:35.408Z","updated_at":"2022-03-01T20:28:25.106Z","due_date":"2022-02-28","start_date":"2022-02-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/204"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":4,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2528","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2528","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2528/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2528/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2528","relative":"#2528","full":"meltano/meltano#2528"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":77189415,"iid":2520,"project_id":7603319,"title":"Remove flakehell now that it's no longer being maintained","description":"https://github.com/life4/flakehell was added in https://gitlab.com/meltano/meltano/-/merge_requests/1970, but the maintainer has now archived the project: https://github.com/wemake-services/wemake-python-styleguide/issues/1817.\n\nSince it's no longer being maintained, we should move away from it and start using `flake8 --diff` directly.\nThe docs at https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/legacy.html will likely come in handy as well.","state":"closed","created_at":"2021-01-13T22:09:47.612Z","updated_at":"2022-02-01T20:03:48.460Z","closed_at":"2022-02-01T20:03:48.433Z","closed_by":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"labels":["Accepting Merge Requests","flow::Review","kind::Risk","urgency::default","valuestream::Meltano"],"milestone":{"id":2363645,"iid":216,"group_id":2524164,"title":"Fri: Jan 28, 2022","description":"","state":"closed","created_at":"2021-12-06T17:19:34.985Z","updated_at":"2022-01-31T16:59:52.796Z","due_date":"2022-01-28","start_date":"2022-01-22","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/216"},"assignees":[{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"}],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"user_notes_count":8,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2520","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2520","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2520/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2520/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2520","relative":"#2520","full":"meltano/meltano#2520"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":76599958,"iid":2490,"project_id":7603319,"title":"Reuse parent plugin installation directory using `inherit_from` and matching `pip_url` (prevent venv duplication)","description":"Original Description\n\n\u003cdetails\u003e\u003csummary\u003eClick to expand\u003c/summary\u003e\n\nWhen a plugin inherits from another, both get their packages installed into their own venvs at `.meltano/{type}s/{name}` (e.g. `.meltano/extractors/tap-gitlab` and `.meltano/extractors/tap-gitlab--inherited`), even though they could reuse the same package on-disk, which would speed up `meltano install` and reduce the installation footprint.\n\nOne way to accomplish this would be to have plugins that share a `pip_url` share an installation directory, by using `.meltano/{type}s/{pip_url}` as the path, with `pip_url` hashed or transformed to a valid directory name. The resulting dirnames are pretty unwieldy though, and this would make it much harder to find a given plugin's installation directory just by browsing the filesystem and looking for its name. Adding a command to print the path (https://gitlab.com/meltano/meltano/-/issues/2337) would help, but there's a cost.\n\nAlternatively, we could have plugins fall back on their parent's installation dir if their `pip_url`s match, so that we'd only have `.meltano/extractors/tap-gitlab` until `tap-gitlab--inherited` changes its `pip_url` and gets a `.meltano/extractors/tap-gitlab--inherited`. Note that the directory names should always correspond to plugins _in the project_, so that names are known to be unique and map 1:1 to `pip_url`s. Plugins inheriting directly from a discoverable plugin (e.g. `tap-postgres--db-one` and `tap-postgres--db-two` both inheriting from `tap-postgres`, without a plugin by that name existing in the project) would not use their parent plugin's name for the installation directory, since the name could refer to multiple variants with their own `pip_url`s.\n\nThis approach is consistent with the current behavior, where plugin dir names match project plugin names, with the addition of inheritance (unless `pip_url` is overridden). I think the limitation that it doesn't apply to plugins that don't share a common ancestor in the project, but do share a `pip_url`, is acceptable.\n\n\u003c/details\u003e\n\n## Updated Summary (2022-03-03)\n\nThere are a few paths forward on this which each have their own pros/cons.\n\nThere are also a couple related issues that make the matter overall more complex:\n\n- #3068+\n- #2701+ \n\n## Simplest solution, using `inherits_from`\n\nThe simplest solution is to use the `inherits_from` option as a trigger for leveraging the same installation `venv_path` internally within Meltano. \n\nThis rule would apply _only_ if the plugin inheriting from does not also define `pip_url`. If `pip_url` is also defined _and is different_, the `venv_path` for that plugin would be based only on its own name rather than its parent (meaing, a unique venv).\n\nPseudocode:\n\n```py\n    @property\n    def venv_name(self) -\u003e string:\n        \"\"\"Get the venv name this plugin should use.\"\"\"\n        if not self.inherits_from:\n            # No parent. Use a unique venv per plugin.\n            return self.plugin_name\n\n        if not self.pip_url or self.inherits_from.pip_url == self.pip_url:\n            # Use the parent's venv. Plugin is inheriting and there's no difference in pip_url.\n            return self.parent.name\n\n        # Default to unique venv per plugin.\n        return self.plugin_name\n```\n\nPros:\n\n- It works automatically with users' existing project definitions.\n- It speeds up the installation for most projects if they use `inherits_from` at least once in their project.\n\nCons:\n\n- This would not solve for #3068 or #2701.\n  - It doesn't solve for detecting changes in `pip_url`. (#2701)\n  - It may or may not be able to solve for inheritance between plugins of different types, for instance: the scenario described in #3068 where it is desirable for `dbt` and `sqlfluff` to share a venv.\n    - This is tricky because `inherits_from` was never imagined to solve for inheritance across a `transformer` plugin, for instance, and a `utility` plugin.\n    - In theory, this too could be made to work, but even so, the other implications of `inherits_from` seem broader than would applicable to diverse utilities of fundamentally different functions and configuration options.\n- It doesn't solve for reconciling plugin names with their venvs if a plugin is renamed within `meltano.yml`.\n- It doesn't solve for `pip_url` which just _happen_ to be identical. (Not a common use case anyway.)\n\n\n## Possible resolution strategy\n\nIn sequence, this might get us where we want to go:\n\n1. Solve for the simplest `inherits_from` cases, as described above. This would probably solve for 90% of the venv duplication issues for an average project.\n2. To solve for the \"pip_url drift\" issue described in #2701, leave a marker file within the venv page during installation with the text of `pip_url` text. Then check the pip_url against the marker file on each execution. If it differs from the current value of `pip_url`, raise a warning or error that prompts the user to reinstall.\n3. To resolve complex venv sharing use cases described in #3068, expand the spec so that plugins can \"inherit\" or \"share\" _only_ the venv of another plugin, without having to inherit all the other types of functionality, such as config, commands, etc. (More details on alternatives are in #3608, and presumably those solutions would stack with the `inherits_from` and 'pip_url drift detection' in the above two issues.)","state":"closed","created_at":"2020-12-30T23:23:54.256Z","updated_at":"2022-05-03T17:30:51.931Z","closed_at":"2022-05-03T17:30:51.905Z","closed_by":{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"},"labels":["Accepting Merge Requests","Extract","Load","Office Hours::Discussed","Performance","flow::Doing","kind::Tech Debt","valuestream::Meltano"],"milestone":{"id":2351599,"iid":209,"group_id":2524164,"title":"May 2022","description":"","state":"active","created_at":"2021-11-29T21:38:23.665Z","updated_at":"2021-11-29T21:38:23.665Z","due_date":"2022-05-31","start_date":"2022-05-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/209"},"assignees":[{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"}],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"},"user_notes_count":5,"merge_requests_count":1,"upvotes":5,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2490","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2490","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2490/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2490/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2490","relative":"#2490","full":"meltano/meltano#2490"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":76434934,"iid":2484,"project_id":7603319,"title":"Health endpoint requires auth","description":"The healthcheck endpoint (api/v1/health) always returns a 401 when requested from curl.","state":"closed","created_at":"2020-12-23T19:06:21.486Z","updated_at":"2022-05-30T06:43:04.347Z","closed_at":"2022-05-30T06:43:04.332Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Accepting Merge Requests","UI","flow::Triage","kind::Bug","valuestream::Meltano"],"milestone":{"id":2351602,"iid":211,"group_id":2524164,"title":"Q3-2022","description":"","state":"active","created_at":"2021-11-29T21:39:41.523Z","updated_at":"2021-11-29T21:39:41.523Z","due_date":"2022-09-30","start_date":"2022-07-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/211"},"assignees":[],"author":{"id":3804920,"username":"jwaldrip","name":"Jason Waldrip","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ca94b06e32f746968f0aec970a702a0c?s=80\u0026d=identicon","web_url":"https://gitlab.com/jwaldrip"},"type":"ISSUE","assignee":null,"user_notes_count":2,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2484","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2484","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2484/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2484/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2484","relative":"#2484","full":"meltano/meltano#2484"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":76109014,"iid":2481,"project_id":7603319,"title":"Environment Variable Substitution doesn't work with array values","description":"### What is the current *bug* behavior?\nEnvironment variables can't be used in the `meltano.yml` file for arrays.\n\n\n\n### What is the expected *correct* behavior?\nThe yaml parser should traverse arrays to substitute environment variables. It would also be nice to add custom yaml variable support to the parser. (e.g. `custom_var: var` -\u003e `database: '{{ custom_var }}'`)\n\n\n\n### Steps to reproduce\n- In a `meltano.yml` file try to use an environement variable in an array.\n\n\n### Relevant logs and/or screenshots\n```\nplugins:\n  extractors:\n  - name: tap-mysql\n    variant: transferwise\n    pip_url: pipelinewise-tap-mysql\n    config:\n      host: host\n      user: root\n      database: ${DB_NAME}\n    select:\n    - ${DB_NAME}-users.id\n    - ${DB_NAME}-users.email\n    metadata:\n      ${DB_NAME}-users:\n        replication-method: FULL_TABLE\n```\n`database: ${DB_NAME}` works because it's an object. But it doesn't work in the select because it's an array.\n\n### Possible fixes\nNot sure, sorry.\n\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team","state":"closed","created_at":"2020-12-16T00:40:22.011Z","updated_at":"2022-05-30T06:42:42.163Z","closed_at":"2022-05-30T06:42:42.144Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Accepting Merge Requests","Configuration","Needs Refinement","kind::Bug","valuestream::Meltano"],"milestone":{"id":2286180,"iid":206,"group_id":2524164,"title":"Q2-2022","description":"","state":"active","created_at":"2021-10-18T15:22:10.509Z","updated_at":"2022-01-24T17:51:23.679Z","due_date":"2022-06-30","start_date":"2022-04-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/206"},"assignees":[],"author":{"id":7811051,"username":"cooley1","name":"Matthew Cooley","state":"active","avatar_url":"https://secure.gravatar.com/avatar/44349b7cc4c865194d92da70e286b4c6?s=80\u0026d=identicon","web_url":"https://gitlab.com/cooley1"},"type":"ISSUE","assignee":null,"user_notes_count":4,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2481","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2481","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2481/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2481/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2481","relative":"#2481","full":"meltano/meltano#2481"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":79,"epic":{"id":53029,"iid":79,"title":"Running pipelines in production","url":"/groups/meltano/-/epics/79","group_id":2524164,"human_readable_end_date":"Sep 30, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":74578751,"iid":2456,"project_id":7603319,"title":"Let project plugin definitions and config be defined in multiple individual YAML files instead of `meltano.yml`","description":"As I wrote in https://gitlab.com/meltano/meltano/-/issues/2206#note_388496082:\n\n\u003e\u003e\u003e\nI think we could also allow users to define their project's taps and targets in their own YAML files, instead of having everything live in `meltano.yml`, since the `select`, `metadata`, `schema`, and `config` properties can grow quite large.\n\nThese files could live at `\u003ctype\u003e/\u003cname\u003e.yml` in the project, e.g. `extractors/tap-example.yml`:\n\n```yaml\nvariant: meltano\npip_url: git+https://gitlab.com/meltano/tap-example.git\nselect: ...\nmetadata: ...\nschema: ...\nconfig: ...\n```\n\nWe wouldn't need to support variant subdirectories in this case, since only a single variant of a plugin should exist in a project anyway, which also goes for custom plugins.\n\u003e\u003e\u003e\n\n------------------\n\n## [Update] Latest spec description:\n\nIn `meltano.yml` specifying an include directory:\n\n```yaml\nproject_id: ...\ninclude_paths:\n  - connectors/*.yml\n  - schedules/*.yml\n...\nplugins: ...\nschedules: ...\n```\n\nOr explicitly with exact file paths:\n\n```yaml\nproject_id: ...\ninclude_paths:\n  - connectors/data-team.yml\n  - connectors/business-team.yml\n  - schedules/prod-refreshes.yml\n...\nplugins: ...\nschedules: ...\n```\n\nAnd the companion files can be defined as:\n\n```yaml\n# connectors/data-team.yml\nplugins:\n  extractors:\n    - name:...\n\n  loaders:\n    - name:...\n```\n\n```yml\n# connectors/business-team.yml\nplugins:\n  extractors:\n    - name:...\n\n  loaders:\n    - name:...\n```\n\n```yml\n# schedules/prod-refreshes.yml\nschedules:\n  ...\n```\n\nAdditional info:\n- The included files have the same spec as `meltano.yml`, with the exception that some top-level entries like `project_id` might not be permitted.\n- Rather than establish a priority between file declarations, collisions would be treated as errors, for instance if two files both declare an `extractor` with the name `tap-gitlab`.","state":"closed","created_at":"2020-11-18T16:40:53.090Z","updated_at":"2022-01-13T21:16:57.865Z","closed_at":"2021-11-04T22:22:53.822Z","closed_by":{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"},"labels":["Accepting Merge Requests","Community-Contributed MR","Configuration","Marketing::Blog Feature","Office Hours::Up Next","flow::Review","kind::Feature","urgency::high","valuestream::Meltano"],"milestone":{"id":2286166,"iid":194,"group_id":2524164,"title":"Fri: Nov 5, 2021","description":"","state":"closed","created_at":"2021-10-18T15:18:13.737Z","updated_at":"2021-11-08T18:35:10.866Z","due_date":"2021-11-05","start_date":"2021-10-30","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/194"},"assignees":[{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"},{"id":9150958,"username":"mathurmag","name":"Matthew Thurman","state":"active","avatar_url":"https://secure.gravatar.com/avatar/c185bfef78714b72f07f43a4ee6a1ec9?s=80\u0026d=identicon","web_url":"https://gitlab.com/mathurmag"}],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"},"user_notes_count":38,"merge_requests_count":2,"upvotes":4,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2456","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2456","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2456/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2456/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2456","relative":"#2456","full":"meltano/meltano#2456"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":74453850,"iid":2454,"project_id":7603319,"title":"Support for data validation with Great Expectations","description":"### Problem to solve\nThis started with a conversation with @DouweM: We were wondering if it was possible to integrate data validation with Great Expectations more tightly into a Meltano workflow. This could be as simple as a \"meltano add validator\" type wrapper and integration into the elt runs, or some other form of integration\n\nIt would also be neat for Great Expectations to show up in the Meltano UI, maybe with Data Docs/validation results integrated into the UI, potentially even with a \"configure\" interface to the great_expectations.yml config file (although that is definitely a stretch).\n\nOne example for a UI integration of GE validation results is Dagster: https://dagster.io/blog/great-expectations-for-dagster\n\n### Target audience\nThe target audience would be two-fold: \n1. Data engineers/owners of the Meltano workflow who run the pipelines and want to see whether all source data was correctly extracted and whether data was correctly transformed, and \n2. data consumers (stakeholders) that want to use Data Docs for data documentation and to see the most recent validation status.\n\n### Further details\nNot much to add - data validation is crucial to pipelines, and I think making it more accessible/part of Meltano would be really beneficial for users!\n\n### Proposal (older)\n\n\u003cdetails\u003e\u003csummary\u003eClick to expand\u003c/summary\u003e\n\nI would love to hear from existing GE users how they envision this could work - here are some of my thoughts:\n- At a very high level, maybe we could add another key concept like a \"validator\" that can be added to a Meltano project. This could potentially even be a wrapper for \"great_expectations init\" to initialize a GE data context in the Meltano project. \n- A user would then either configure a GE datasource manually, or all data connections could be inherited from Meltano. \n- The user would then create Expectation Suites and Checkpoints. Running \"meltano elt\" (possibly with a --run-validation flag?) could then trigger running all configured Checkpoints as part of a pipeline. I'm not quite clear yet how or whether a user would specify when exactly to run validation.\n\n\u003c/details\u003e\n\n\n### What does success look like, and how can we measure that?\nAcceptance criteria: a user can run validation with GE as part of a Meltano pipeline run without having to invoke GE separately, and can see the results either in Data Docs or directly in the Meltano UI.\n\nSuccess: people actually run validation with GE in Meltano!\n\n\n### Links / references\n\n* GE homepage: greatexpectations.io\n* Dagster integration: https://dagster.io/blog/great-expectations-for-dagster\n* Airflow operator (as an example of how to invoke validation): https://github.com/great-expectations/airflow-provider-great-expectations\n\n### Updated Proposal (2022-01-05)\n\n1. Using the recently released Meltano features `dbt test` and `test commands`, Meltano users should be able to add Great Expectations as a utility plugin.\n    1. First phase: Great Expectations can be added manually to `meltano.yml` by users familiar with Great Expectations (or in Meltano-owned projects like the Hub).\n    2. Second phase: Assuming positive results from \"first phase\" above, Great Expectations will be added to `discovery.yml` so that users can add it using the command `meltano add utility great-expectations` (with no `--custom` flag).\n2. Within `meltano.yml`, users will add `commands` with names starting with a `test*` prefix.\n3. Tests will be runnable using any of these:\n    - `meltano test --all`\n    - `meltano test great-expectations`\n    - `meltano test great-expectations:test-foo great-expectations:test-bar`\n    - `meltano run great-expectations:test-foo great-expectations:test-bar` (because tests are also commands)\n\n### Special commands and functions\n\nDocs/UI:\n\nWe may also need to come up with a `great-expectations:ui` command which would build and launch\n\nInit:\n\nWe may also want a predefined `init` command and perhaps commands for other administrative operations.","state":"closed","created_at":"2020-11-16T19:17:23.490Z","updated_at":"2022-02-17T18:14:52.814Z","closed_at":"2022-02-16T13:41:04.589Z","closed_by":{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"},"labels":["Accepting Merge Requests","Integrations","Office Hours::Discussed","Roadmap","flow::Review","kind::Feature"],"milestone":{"id":2286177,"iid":204,"group_id":2524164,"title":"February 2022","description":"","state":"closed","created_at":"2021-10-18T15:21:35.408Z","updated_at":"2022-03-01T20:28:25.106Z","due_date":"2022-02-28","start_date":"2022-02-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/204"},"assignees":[{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"}],"author":{"id":7648421,"username":"spbail","name":"Sam Bail","state":"active","avatar_url":"https://secure.gravatar.com/avatar/46ee69b10ad91bdf47c4df1effeebb55?s=80\u0026d=identicon","web_url":"https://gitlab.com/spbail"},"type":"ISSUE","assignee":{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"},"user_notes_count":11,"merge_requests_count":1,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2454","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2454","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2454/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2454/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2454","relative":"#2454","full":"meltano/meltano#2454"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":111,"epic":{"id":311335,"iid":111,"title":"Add validator plugin type","url":"/groups/meltano/-/epics/111","group_id":2524164,"human_readable_end_date":"Feb 28, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":74172740,"iid":2444,"project_id":7603319,"title":"Consider renaming extractor \"entities\" and \"attributes\" to \"streams\" and \"properties\" for consistency with Singer","description":"This would prevent confusion and inconsistent/interchangeable use of the Meltano-specific and Singer-specific term in docs or conversation.\n\nMeltano users don't technically need to be familiar with underlying Singer concepts, and \"entities\" and \"attributes\" are arguably more user-friendly and less implementation-specific, but especially at this stage this is unrealistic since users will still often need to debug (and fix) taps and read their repositories and documentation, which use the Singer terms.\n\nIf Meltano were to at one point add support for a different open source EL standard that uses different terms, using \"streams\" and \"properties\" may no longer make sense, but that's a bridge we can cross then.","state":"closed","created_at":"2020-11-10T23:31:34.201Z","updated_at":"2021-11-29T22:10:30.632Z","closed_at":"2021-11-29T22:10:30.614Z","closed_by":{"id":1942272,"username":"tayloramurphy","name":"Taylor A Murphy","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png","web_url":"https://gitlab.com/tayloramurphy"},"labels":["Accepting Merge Requests","Documentation","Extract","flow::Triage","kind::Tech Debt","valuestream::Meltano"],"milestone":{"id":2136620,"iid":176,"group_id":2524164,"title":"Staging","description":"","state":"active","created_at":"2021-07-07T19:00:49.676Z","updated_at":"2021-07-07T19:00:49.676Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/meltano/-/milestones/176"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2444","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2444","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2444/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2444/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2444","relative":"#2444","full":"meltano/meltano#2444"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":81,"epic":{"id":94267,"iid":81,"title":"Meltano Documentation improvements","url":"/groups/meltano/-/epics/81","group_id":2524164,"human_readable_end_date":"Sep 30, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":74168158,"iid":2440,"project_id":7603319,"title":"`docs` job fails with vague `ERROR: Job failed: exit code 1`","description":"See https://gitlab.com/meltano/meltano/-/jobs/841670357:\n\n```bash\n\u003csnip\u003e\n/home/u894-pruvsekvb4qh/www/meltano.com/public_html/mstile-144x144.png\n/home/u894-pruvsekvb4qh/www/meltano.com/public_html/meltano-diagram.png\n/home/u894-pruvsekvb4qh/www/meltano.com/public_html/apple-touch-icon.png\n/home/u894-pruvsekvb4qh/www/meltano.com/public_html/mstile-310x150.png\nCleaning up file based variables\nERROR: Job failed: exit code 1\n```\n\nThe failing command is [`$REMOTE_EXEC \"mkdir -p $SSH_BACKUP_DIRECTORY; tar zcvf $SSH_BACKUP_DIRECTORY-$(date +%Y-%m-%dT%H:%M).tar.gz $SSH_DIRECTORY/$SSH_WWW_DIRECTORY\"`](https://gitlab.com/meltano/meltano/-/blob/master/.gitlab/ci/docs.gitlab-ci.yml#L25), where `$REMOTE_EXEC` is `ssh -o StrictHostKeyChecking=no $SSH_USER_DOMAIN -p$SSH_PORT`.\n\nAn earlier run (https://gitlab.com/meltano/meltano/-/jobs/841365856) logged those exact same output lines, but then was able to continue on to the next command:\n\n```bash\n\u003csnip\u003e\n/home/u894-pruvsekvb4qh/www/meltano.com/public_html/mstile-144x144.png\n/home/u894-pruvsekvb4qh/www/meltano.com/public_html/meltano-diagram.png\n/home/u894-pruvsekvb4qh/www/meltano.com/public_html/apple-touch-icon.png\n/home/u894-pruvsekvb4qh/www/meltano.com/public_html/mstile-310x150.png\n$ $REMOTE_EXEC \"cd $SSH_DIRECTORY \u0026\u0026 find ./$SSH_WWW_DIRECTORY -mindepth 1 -maxdepth 1 -not -name blog -not -name '.' -exec rm -rf  '{}' \\;\"\n$ scp -o stricthostkeychecking=no -P$SSH_PORT -r public/* $SSH_USER_DOMAIN:$SSH_DIRECTORY/$SSH_WWW_DIRECTORY\nSaving cache for successful job\nCreating cache default...\ndocs/node_modules/: found 25033 matching files and directories \nUploading cache.zip to https://storage.googleapis.com/gitlab-com-runners-cache/project/7603319/default \nCreated cache\nCleaning up file based variables\nJob succeeded\n```","state":"closed","created_at":"2020-11-10T20:39:58.958Z","updated_at":"2022-05-30T06:37:28.810Z","closed_at":"2022-05-30T06:37:28.788Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Documentation","flow::Triage","kind::Bug","urgency::low","valuestream::Meltano"],"milestone":{"id":2252673,"iid":193,"group_id":2524164,"title":"Internal WIP","description":"","state":"active","created_at":"2021-09-27T19:02:31.281Z","updated_at":"2021-09-28T18:29:26.781Z","due_date":null,"start_date":null,"expired":false,"web_url":"https://gitlab.com/groups/meltano/-/milestones/193"},"assignees":[{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"}],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"user_notes_count":13,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2440","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2440","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2440/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2440/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2440","relative":"#2440","full":"meltano/meltano#2440"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":72420621,"iid":2381,"project_id":7603319,"title":"Nested properties in discovered catalog are interpreted as `inclusion: automatic` even if their parent property is `inclusion: available`","description":"See https://gitlab.com/meltano/meltano/-/blob/master/src/meltano/core/plugin/singer/catalog.py#L284.\n\nAs a result, these nested properties will always show up as `automatic` in `meltano select --list --all`, cannot be deselected using `meltano select --except`, and end up having metadata `inclusion: automatic, selected: true` in the generated catalog file that's passed to the tap.\n\nIn reality, if a parent property is discovered as `inclusion: available`, changing `selected` or `inclusion` on an individual subproperty usually won't make a difference since taps typically only check the `selected` metadata for top-level properties, not nested ones.\n\nTo resolve this, then, we can have Meltano assume `inclusion: automatic` on top-level properties that lack metadata, but not on nested properties, (assuming their parent property does have metadata). In `meltano select --list --all`, nested properties without discovered(!) `inclusion` metadata shouldn't be listed at all, since they can't actually be individually selected. If a nested property does have discovered `inclusion` metadata, we can list it. \n\nWe could automatically have a top-level `selected` rule cascade down to its properties, but let's not get into that for now.\n\n---\n\nAs a temporary workaround, the following `metadata` rule can be added to a plugin definition to flip these nested `inclusion: automatic` metadatas to `inclusion: available`:\n\n```yaml\nextractors:\n- name: tap-facebook\n  # ...\n  metadata:\n    '*':\n      '*.*':\n        inclusion: available\n```","state":"closed","created_at":"2020-10-08T22:38:43.746Z","updated_at":"2021-08-10T22:54:37.023Z","closed_at":"2021-08-10T22:54:36.921Z","closed_by":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"labels":["Accepting Merge Requests","Extract","flow::Review","kind::Bug","urgency::default","valuestream::Meltano"],"milestone":{"id":2169711,"iid":178,"group_id":2524164,"title":"Fri: Aug 13, 2021","description":"","state":"closed","created_at":"2021-08-01T22:31:19.622Z","updated_at":"2021-08-17T18:17:27.101Z","due_date":"2021-08-13","start_date":"2021-08-07","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/178"},"assignees":[{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"}],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"user_notes_count":3,"merge_requests_count":1,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2381","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2381","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2381/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2381/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2381","relative":"#2381","full":"meltano/meltano#2381"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":70124985,"iid":2301,"project_id":7603319,"title":"Add `meltano run [\u003cplugin\u003e...]` to run arbitrary plugins in a pipeline","description":"As meltano run evolves we may opt to expand/change the invocation syntax but\n\n\u003e  a simple first iteration will be to focus on just the chain use case: we do a bit of work to validate blocks, but otherwise we run left to right and find ExtractLoad Blocks as appropriate. @tayloramurphy \n\nIt's simply `meltano run tap-gitlab target-jsonl tap-gitlab target-csv dbt:run` with blocks run in series (with ExtractLoad blocks parsed and linked as needed). \n\nOther sample valid invocations:\n\n- `meltano run tap-gitlab map-remove-nulls target-msyql dbt:run`\n- `meltano run tap-gitlab target-msyql dbt:run tap-msqyl target-json`\n- `meltano run tap-gitlab target-msyql dbt:run dbt:test superset:build`\n\nInvalid invocations:\n\n- command block between IOBlocks: `meltano run tap-gitlab dbt:run target-msyql`\n- starting IOBlock (tap-peloton) with no ending IOBlock (a target): `meltano run tap-peloton tap-gitlab target-mysql` \n- ending IOBlock (target-jsonl) with no starting IOBlock (a tap): `meltano run tap-gitlab target-mysql target-jsonl` \n- tap/target used as command block: `meltano run tap-gitlab:discovery`\n\nJob ID generation and STATE support:\n\n- If no environment is provided: job ID is not generated and STATE is not supported.\n- If environment is provided: job ID is automatically generated with a format such as `{environment_name}:{tap_name}-to-{target_name}`.\n\nExplicitly out of scope in the first version:\n\n- Running taps/targets as commands is out of scope at least in this first version. \n- Retries, permissive or selective failures is out of scope at least in this first version. A failure at any point halts execution and no further blocks are executed. \n\n\nFully out of scope:\n\n- There's no plan as of now to support individual block-level arg passing - and it will likely not be available in future revisions. For instance, this will not be possible: `meltano run dbt:run dbt:test[--verbose]`. Instead you'd need to use `meltano invoke` or create a custom `test-verbose` command and execute like this `meltano run dbt:run dbt:test-verbose`.\n\n\n\u003cdetails\u003e\n  \u003csummary\u003eOriginal issue body\u003c/summary\u003e\n  \nAs in:\n\n- `meltano elt \u003cextractor\u003e \u003cloader\u003e [--transform=skip]` -\u003e `meltano run \u003cextractor\u003e \u003cloader\u003e`, e.g. `meltano run tap-foo target-bar`\n- `meltano elt \u003cextractor\u003e \u003cloader\u003e --transform=run` -\u003e `meltano run \u003cextractor\u003e \u003cloader\u003e \u003ctransformer\u003e`, e.g. `meltano run tap-foo target-bar dbt`\n- `meltano elt \u003cextractor\u003e \u003cloader\u003e --transform=only` -\u003e `meltano run \u003ctransformer\u003e --with \u003cextractor\u003e --with \u003cloader\u003e`, e.g. `meltano run dbt --with tap-foo target-bar` (see https://gitlab.com/meltano/meltano/-/issues/2546)\n\nAnd instead of `meltano schedule gitlab-to-jsonl tap-gitlab target-jsonl @hourly --transform=run:\n\n```yaml\nschedules:\n- name: gitlab-to-jsonl\n  extractor: tap-gitlab\n  loader: target-jsonl\n  transform: run\n  interval: '@hourly'\n```\n\nWe get `meltano schedule gitlab-to-jsonl tap-gitlab target-jsonl dbt @hourly`:\n\n```yml\n- name: gitlab-to-jsonl\n  interval: '@hourly'\n  pipeline: # or `run`?\n  - tap-gitlab\n  - target-jsonl\n  - dbt\n```\n\u003c/details\u003e","state":"closed","created_at":"2020-08-21T18:40:56.781Z","updated_at":"2022-02-01T22:01:03.465Z","closed_at":"2021-12-15T23:22:29.556Z","closed_by":{"id":22132,"username":"pandemicsyn","name":"Florian","state":"active","avatar_url":"https://secure.gravatar.com/avatar/88529f59d3f298bcc9e2a705dc1f1c68?s=80\u0026d=identicon","web_url":"https://gitlab.com/pandemicsyn"},"labels":["Accepting Merge Requests","CLI","Demo Day::To Share","Marketing::Blog Feature","Office Hours::Discussed","flow::Review","kind::Feature","valuestream::Meltano"],"milestone":{"id":2286172,"iid":200,"group_id":2524164,"title":"Fri: Dec 17, 2021","description":"","state":"closed","created_at":"2021-10-18T15:20:21.743Z","updated_at":"2022-01-04T16:10:50.410Z","due_date":"2021-12-17","start_date":"2021-12-11","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/200"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":37,"merge_requests_count":1,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2301","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":12,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2301","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2301/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2301/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2301","relative":"#2301","full":"meltano/meltano#2301"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":116,"epic":{"id":331276,"iid":116,"title":"Enable ELT pipelines in Meltano to be composable","url":"/groups/meltano/-/epics/116","group_id":2524164,"human_readable_end_date":"Sep 30, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":70124963,"iid":2300,"project_id":7603319,"title":"Allow extractor Singer messages to be transformed using Python before passing them to loader (Stream Maps)","description":"We could support [`transformer` plugins](https://meltano.com/docs/plugins.html#transformers) other than `dbt`, that would follow extraction rather than loading, and would transform an extractor's output stream of Singer messages (`SCHEMA`, `RECORD`, etc), before they're streamed into the loader.\n\nThe two types of transformers could be distinguished using an extra, e.g. `type: {etl,elt}` or `{follows,acts_on,transforms}: {extractor,loader}`\n\nWe could support both pip packages, and local executable files, using either the `pip_url` or `executable` plugin setting.","state":"closed","created_at":"2020-08-21T18:39:37.722Z","updated_at":"2021-12-16T19:21:52.743Z","closed_at":"2021-12-16T19:21:52.498Z","closed_by":{"id":4809760,"username":"aaronsteers","name":"AJ Steers","state":"active","avatar_url":"https://secure.gravatar.com/avatar/8a3de9356eb65ac8ba021d4d3435299e?s=80\u0026d=identicon","web_url":"https://gitlab.com/aaronsteers"},"labels":["Extract","Transform","flow::Triage","kind::Feature","urgency::default","valuestream::Meltano"],"milestone":{"id":2286172,"iid":200,"group_id":2524164,"title":"Fri: Dec 17, 2021","description":"","state":"closed","created_at":"2021-10-18T15:20:21.743Z","updated_at":"2022-01-04T16:10:50.410Z","due_date":"2021-12-17","start_date":"2021-12-11","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/200"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":9,"merge_requests_count":0,"upvotes":2,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2300","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":12,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2300","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2300/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2300/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":"https://gitlab.com/api/v4/projects/7603319/issues/2299"},"references":{"short":"#2300","relative":"#2300","full":"meltano/meltano#2300"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":116,"epic":{"id":331276,"iid":116,"title":"Enable ELT pipelines in Meltano to be composable","url":"/groups/meltano/-/epics/116","group_id":2524164,"human_readable_end_date":"Sep 30, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":70124790,"iid":2299,"project_id":7603319,"title":"Allow stream-level and property-level transformations to be defined in `meltano.yml` (Stream Maps)","description":"\u003cdetails\u003e\u003csummary\u003eExpand Original Issue Description\u003c/summary\u003e\n\nInspired by https://www.dropbase.io/, PipelineWise transformations (https://transferwise.github.io/pipelinewise/user_guide/transformations.html), and our [existing extractor extras](https://meltano.com/docs/plugins.html#metadata-extra), I'm imagining something like:\n\n```yaml\nextractors:\n- name: tap-example\n  # ...\n  transform:\n    \u003centity\u003e:\n      \u003cfunction\u003e: \u003cargs\u003e\n      \u003cattribute\u003e:\n        \u003cfunction\u003e: \u003cargs\u003e\n```\n\nSince these transformations would act on an extractor's output: a stream of Singer `SCHEMA` and `RECORD` messages, we could relatively easily support functions for:\n- renaming (prefixing, suffixing) entity (stream, table) or attribute (property, column) names\n- dropping entities or attributes, in cases where a tap doesn't support discovery mode and entity selection\n- adding attributes with predefined or dynamic values, like PipelineWise's metadata columns: https://transferwise.github.io/pipelinewise/user_guide/metadata_columns.html\n- filtering records based on one or more attribute values, keeping only those that do (or don't!) match (`drop_if`, `drop_unless`?)\n- replacing text in attribute values\n- replacing empty strings with nulls\n- replacing nulls with a string\n- changing attribute types and casting values, which can go beyond overriding the JSON schema using the [`schema` extra](https://meltano.com/docs/plugins.html#schema-extra)\n\nFunctions could take arguments of any type: a simple string, an array of values, or an object with additional keys. If a function doesn't take any attribute (like `drop`), it could just take a `true` boolean.\n\nSince functions could have object arguments, Meltano would not immediately be able to distinguish between `{entity: {attribute: {function: scalar_value}}}` and `{entity: {function: {nested_key: nested_value}}}`, where the key nested under an entity identifier could either be an attribute identifier or a function name. We don't have this issue with [`metadata`](https://meltano.com/docs/plugins.html#metadata-extra) and [`schema`](https://meltano.com/docs/plugins.html#schema-extra) extras, because metadata values cannot (so far) be objects, and since schema info can only be specified for attributes, not entities as a whole. Perhaps we can add a special `_` or `_self` or `_entity` key at the attribute level to nest entity-level transformation functions under, in cases where they need object values.\n\n\u003c/details\u003e\n\n## Background (Updated 2021-12-15)\n\nThere would be a large advantage to being able to enable transformations like those from [pipelinewise-transform-field](https://github.com/transferwise/pipelinewise-transform-field) and Meltano SDK's [Inline Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html) to be defined natively in `meltano.yml` config.\n\nThis opens up a large number of use cases defined on the SDK docs site:\n\n\u003e ### Stream-Level Mapping Applications\n\u003e\n\u003e - Stream aliasing: streams can be aliased to provide custom naming downstream.\n\u003e - Stream filtering: streams records can be filtered based on any user-defined logic.\n\u003e - Stream duplication: streams can be split or duplicated and then sent as multiple distinct streams to the downstream target.\n\u003e \n\u003e ### Property-Level Mapping Applications\n\u003e\n\u003e - Property-level aliasing: properties can be renamed in the resulting stream.\n\u003e - Property-level transformations: properties can be transformed inline.\n\u003e - Property-level exclusions: properties can be removed from the resulting stream.\n\u003e - Property-level additions: new properties can be created based on inline user-defined expressions.\n\nAs well as fixes for these common issues:\n\n- Applying selection rules to taps that don't support selection.\n- Resolve issues caused by taps that use selection rules to filter `RECORD` messages but not the `SCHEMA` messages that is used to create target tables.\n- Resolve compatibility issues from taps that send data types that the chosen target cannot understand.\n- Resolve compatibility issues from taps that send `ACTIVATE_VERSION` messages to targets that don't understand them.\n- Need for \"record flattening\" when neither the tap or target supports this feature natively.\n\n## Proposal: Map transforms as properties of extractors and loaders (Updated 2021-12-15)\n\nAfter running the following...\n\n```bash\nmeltano add mapper meltano-map-transform\nmeltano add mapper pipelinewise-transform-field\n```\n\n... you would be able to provide a config such as:\n\n\n```yaml\nmappers:\n- name: meltano-map-transform\n  pip_url: meltano-map-transform\n  config:                         # Optionally, a default config.\n    # ...\n- name: pipelinewise-transform-field\n  pip_url: pipelinewise-transform-field\n- name: no-activate-version.      # A fictional mapper that removes ACTIVATE_VERSION messages\n  pip_url: no-activate-version\n  config:                         # Optionally, a default config.\n    # ...\nextractors:\n- name: tap-gitlab\n  # ...\n  mappings:\n  - name: pii-hasher               # The name of the map transform to apply.\n    mapper: meltano-map-transform  # The mapper plugin to use.\n    config:                        # What will be sent to the transformer in a config.json file.\n      stream_maps:\n        customers:\n          id_hashed: md5(record['id'])\n          id: None\nloaders:\n- name: target-salesforce\n  # ...\n  mappings:\n  - name: add-global-guid          # The name of the map transform to apply.\n    mapper: meltano-map-transform  # The mapper plugin to use.\n    config:                        # What will be sent to the transformer in a config.json file.\n      stream_maps:\n        customers:\n          guid: md5(record['id'])\n- name: target-csv\n  # ...\n  mappings:\n  - name: flatten-records          # The name of the map transform to apply.\n    mapper: meltano-map-transform  # The mapper plugin to use.\n    default: true                  # Transform prepended automatically if default=true.\n    config:                        # What will be sent to the transformer in a config.json file.\n      flatten_records: true\n  - name: compat-fix               # The name of the map transform to apply.\n    mapper: no-activate-version    # The mapper plugin to use.\n                                   # config is omitted if the generic config is sufficient\n```\n\nOne or more map transforms may be placed between tap and target:\n\n```bash\nmeltano run tap-gitlab pii-hasher target-salesfoce\nmeltano run tap-gitlab pii-hasher flatten-records target-csv\n```\n\nSince `default=true` for `flatten-records` and `compat-fix` on `target-csv`, these are all equivalent:\n\n```bash\nmeltano run tap-gitlab flatten-records target-csv\nmeltano run tap-gitlab target-csv\n```\n\nNote: For the example config above, this command would fail because `flatten-records` is only defined for `target-csv` and is not defined for `tap-gitlab` nor `target-salesforce`: `meltano run tap-gitlab flatten-records target-salesforce`.","state":"closed","created_at":"2020-08-21T18:32:43.092Z","updated_at":"2022-03-01T22:43:03.636Z","closed_at":"2022-02-18T22:02:17.099Z","closed_by":{"id":22132,"username":"pandemicsyn","name":"Florian","state":"active","avatar_url":"https://secure.gravatar.com/avatar/88529f59d3f298bcc9e2a705dc1f1c68?s=80\u0026d=identicon","web_url":"https://gitlab.com/pandemicsyn"},"labels":["Extract","Office Hours::Up Next","Roadmap","Transform","flow::Review","kind::Feature","valuestream::Meltano"],"milestone":{"id":2286177,"iid":204,"group_id":2524164,"title":"February 2022","description":"","state":"closed","created_at":"2021-10-18T15:21:35.408Z","updated_at":"2022-03-01T20:28:25.106Z","due_date":"2022-02-28","start_date":"2022-02-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/204"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":28,"merge_requests_count":1,"upvotes":3,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2299","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":12,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2299","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2299/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2299/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2299","relative":"#2299","full":"meltano/meltano#2299"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":116,"epic":{"id":331276,"iid":116,"title":"Enable ELT pipelines in Meltano to be composable","url":"/groups/meltano/-/epics/116","group_id":2524164,"human_readable_end_date":"Sep 30, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":69769623,"iid":2261,"project_id":7603319,"title":"Add new doc for `airflow` plugin and its settings","description":"It should be made clear that all of Airflow's settings can be managed through `meltano config` and `meltano.yml`.\n\n(Parts of) https://meltano.com/docs/production.html#airflow-orchestrator should be moved here too.","state":"closed","created_at":"2020-08-12T16:13:00.636Z","updated_at":"2022-05-30T06:15:33.079Z","closed_at":"2022-05-30T06:15:33.062Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Documentation","flow::To Do","kind::Feature","valuestream::Meltano"],"milestone":{"id":2351601,"iid":210,"group_id":2524164,"title":"June 2022","description":"","state":"active","created_at":"2021-11-29T21:39:02.417Z","updated_at":"2021-11-29T21:39:02.417Z","due_date":"2022-06-30","start_date":"2022-06-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/210"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":2,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2261","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2261","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2261/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2261/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2261","relative":"#2261","full":"meltano/meltano#2261"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":81,"epic":{"id":94267,"iid":81,"title":"Meltano Documentation improvements","url":"/groups/meltano/-/epics/81","group_id":2524164,"human_readable_end_date":"Sep 30, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":69183865,"iid":2205,"project_id":7603319,"title":"Add `container_spec` for containerized plugin commands","description":"The `tap-mssql` plugin is a good example of a non-standard, non-python tap which would nevertheless be desirable for mainstream support. One way to support this is by adding a docker_image option in discovery.yml and work through whatever issues come up in that process.\n\nOriginally started as a discussion here: https://meltano.slack.com/archives/C013Z450LCD/p1596043957041600?thread_ts=1595992122.035100\u0026cid=C013Z450LCD\n\n--------------\n\n## Update (2021-08-24)\n\n-----------------\n\nThe original use case for this issue (java-based `singer/tap-mssql`) is no longer a priority since we now have a python-based `tap-mssql` implementation and there just haven't been many (any?) other taps or targets requested which were not pip installable.\n\nA newer use case is Lightdash, which has a complex set of requirements and is recommended to be run via docker - or specifically via docker compose.\n\n## Update ~~(2021-10-05)~~ ~~(2021-11-29)~~ (2021-12-07)\n\nIn discussions around this topic, it appears clear we need to provide docker and non-docker invocation methods for plugins so that a `--container=True` flag (or similar) could toggle the behavior to dockerized vs native invocation methods. The docker config is then additive to existing `executable` and `pip_url` inputs.\n\n### New `container_spec` option for plugin commands\n\nThis feature would add a structured `container_spec` config option to each plugin command:\n\n```yml\nplugins:\n    utilities:\n        name: lightdash\n        commands:\n        - name: serve\n          executable: \"lightdash serve\"  # ignored when running via docker\n          container_spec:\n            image: lightdash\n            command: lightdash serve\n            entrypoint: \n            env:\n                ENVVAR1: foo\n                ENVVAR2: bar\n            ports:\n            - 5000\n            - 8080\n            volumes:\n            - \".:/project/myproject\"\n        - name: build\n          executable: \"lightdash build\"  # ignored when running via docker\n          container_spec:\n            image: lightdash\n            command: lightdash build\n            entrypoint: \n            env:\n                ENVVAR1: foo\n                ENVVAR2: bar\n            ports: [] # None needed\n            volumes:\n            - \".:/project/myproject\"\n```\n\n### Supported `container_spec` options in V1:\n\n* `image`\n* `vars`\n* `ports`\n* `command`\n* `entrypoint`\n* `volumes` - or *at least* a container path in which to mount the root project dir\n\nOnly `image` is required. All other options are optional.\n\n### New `--containers=true|false` flag for CLI commands `elt`, `invoke`, and `run`\n\nThe CLI commands `elt`, `invoke`, and `run` would all have a new `--containers` CLI arg. This arg has the following behaviors:\n\n- `true`: This uses `container_spec` whenever it is available.\n    - Important: `true` setting does not guarantee that all invocations will be run containerized. Any plugin or command that does not have a `container_spec` will be attempted to be invoked natively. If native invocation fails, the command will fail - as is the existing behavior today.\n- `false`: This users local invocation (non-containerized) for all plugins. (Assumption being that there is no container runtime available on the machine.)\n    - Note: If a plugin _only_ has a `container_spec` config and does not have any other means of being invoked, then the command will fail.\n\nNote that if multiple plugins need to be invoked, they will share the same preference setting across the entire meltano CLI command.\n\n#### Sample invocation\n\nFor instance, taking the following sample invocation: `meltano --containers=true run tap-gitlab target-snowflake dbt:run dbt:test lightdash:build` and assuming that only `tap-gitlab` and `lightdash:build` have a defined `container_spec`, the behavior will be as follows:\n\n- `tap-gitlab` will be invoked within a container and its data will be passed to the STDIN of `target-snowflake`, which will be running natively.\n- `dbt:run` and `dbt:test` will both be run natively, since no `container_spec` exists for those commands.\n- `lightdash:build` will be run within a container.\n\nAssuming the same command is run with `--containers=false`, and assuming `lightdash:build` does not also have an non-containerized `executable` set, then meltano will fail to build an execution plan and will abort immediately with something like:\n\n\u003e Execution of `lightdash:build` is not defined when container runtimes are disabled. To proceed, add a native `executable` definition to `lightdash:build` command or run with `--containers=true` to enable containerized execution.\n\nLastly, if `executable` and `container_spec` are both provided for the `lightdash:build` command, but the command is invoked natively (`--containers=false`) without the proper prerequisites installed, then the command will fail at the very end of the job when `meltano run` reaches the final `lightdash:build` step.\n\n#### Optional CLI conventions we could support:\n\n- `--containers` is short for `--containers=true`\n- `--no-containers` is short for `--containers=false`\n\n\n## Out of scope\n\n### Tap and Target containerization\n\nWe will probably build support for general plugins (`transformers`, `orchestrators`, and `utilities`) first - or more specifically for plugin `commands` first.\n\nDue to the additional complexity, containerized extractors and loaders would likely be a fast-follow on top of the first MVC release.\n\nUnlike for general utilities, the `container_spec` config for extractors and loaders needs to be at the plugin level, not the command level, and any `command` value will likely be ignored by Meltano at runtime, in favor of the ways that Meltano already knows to invoke a tap, especially: `tap-mytap --discover --config=/path/to/config.json` (discovery) and `tap-mytap --config=/path/to/config.json` (sync).\n\n### Compose Syntax and docker-compose.yml files\n\nOut of scope for now, but we _might_ also support docker-compose in future:\n\n```yml\nplugins:\n    utilities:\n        name: lighdash\n        commands:\n        - name: serve\n          container_spec:\n            compose: lightdash.docker-compose.yml\n```","state":"closed","created_at":"2020-07-29T17:55:52.517Z","updated_at":"2022-02-22T18:01:54.337Z","closed_at":"2022-02-18T03:08:07.730Z","closed_by":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"labels":["Accepting Merge Requests","Office Hours::Up Next","Roadmap","flow::Review","kind::Feature","valuestream::Meltano"],"milestone":{"id":2286177,"iid":204,"group_id":2524164,"title":"February 2022","description":"","state":"closed","created_at":"2021-10-18T15:21:35.408Z","updated_at":"2022-03-01T20:28:25.106Z","due_date":"2022-02-28","start_date":"2022-02-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/204"},"assignees":[{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"}],"author":{"id":4809760,"username":"aaronsteers","name":"AJ Steers","state":"active","avatar_url":"https://secure.gravatar.com/avatar/8a3de9356eb65ac8ba021d4d3435299e?s=80\u0026d=identicon","web_url":"https://gitlab.com/aaronsteers"},"type":"ISSUE","assignee":{"id":1134865,"username":"edgarrmondragon","name":"Edgar R. Mondragón","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png","web_url":"https://gitlab.com/edgarrmondragon"},"user_notes_count":57,"merge_requests_count":1,"upvotes":3,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2205","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":12,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2205","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2205/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2205/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2205","relative":"#2205","full":"meltano/meltano#2205"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":116,"epic":{"id":331276,"iid":116,"title":"Enable ELT pipelines in Meltano to be composable","url":"/groups/meltano/-/epics/116","group_id":2524164,"human_readable_end_date":"Sep 30, 2021","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":68280117,"iid":2192,"project_id":7603319,"title":"Add \"Configure\" buttons to extractor and loader in Pipelines list","description":"","state":"closed","created_at":"2020-07-20T20:39:16.224Z","updated_at":"2022-05-30T06:06:55.212Z","closed_at":"2022-05-30T06:06:55.194Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Accepting Merge Requests","Frontend","UI","flow::To Do","kind::Feature","valuestream::Meltano"],"milestone":{"id":2351599,"iid":209,"group_id":2524164,"title":"May 2022","description":"","state":"active","created_at":"2021-11-29T21:38:23.665Z","updated_at":"2021-11-29T21:38:23.665Z","due_date":"2022-05-31","start_date":"2022-05-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/209"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2192","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2192","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2192/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2192/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2192","relative":"#2192","full":"meltano/meltano#2192"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":78,"epic":{"id":48001,"iid":78,"title":"Meltano UI Improvements","url":"/groups/meltano/-/epics/78","group_id":2524164,"human_readable_timestamp":"\u003cstrong\u003e521\u003c/strong\u003e days elapsed"},"iteration":null,"health_status":null},{"id":68279587,"iid":2189,"project_id":7603319,"title":"Add \"Full Refresh\" button to UI","description":"- Only when pipeline actually has state\n- Update text in \"ConnectorSettings\" component about changing start date","state":"closed","created_at":"2020-07-20T20:38:22.127Z","updated_at":"2022-05-30T06:06:34.095Z","closed_at":"2022-05-30T06:06:34.075Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Accepting Merge Requests","Frontend","UI","flow::To Do","kind::Feature","valuestream::Meltano"],"milestone":{"id":2351599,"iid":209,"group_id":2524164,"title":"May 2022","description":"","state":"active","created_at":"2021-11-29T21:38:23.665Z","updated_at":"2021-11-29T21:38:23.665Z","due_date":"2022-05-31","start_date":"2022-05-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/209"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2189","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2189","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2189/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2189/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2189","relative":"#2189","full":"meltano/meltano#2189"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":78,"epic":{"id":48001,"iid":78,"title":"Meltano UI Improvements","url":"/groups/meltano/-/epics/78","group_id":2524164,"human_readable_timestamp":"\u003cstrong\u003e521\u003c/strong\u003e days elapsed"},"iteration":null,"health_status":null},{"id":63846865,"iid":2177,"project_id":7603319,"title":"Preserve comments and flow style when programmatically modifying `meltano.yml` (Ruamel)","description":"PyYAML doesn't support this currently (https://github.com/yaml/pyyaml/issues/90), but https://pypi.org/project/ruamel.yaml does.\n\nNote:\n\nOur usage of the Canonical class may also be a factor we need to consider in our implementation. Noted by @kgpayne below: https://gitlab.com/meltano/meltano/-/issues/2177#note_708071594","state":"closed","created_at":"2020-07-17T16:23:10.920Z","updated_at":"2022-05-30T06:05:02.929Z","closed_at":"2022-05-30T06:05:02.913Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Accepting Merge Requests","CLI","Roadmap","User Onboarding","flow::To Do","kind::Bug","valuestream::Meltano"],"milestone":{"id":2351601,"iid":210,"group_id":2524164,"title":"June 2022","description":"","state":"active","created_at":"2021-11-29T21:39:02.417Z","updated_at":"2021-11-29T21:39:02.417Z","due_date":"2022-06-30","start_date":"2022-06-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/210"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":4,"merge_requests_count":0,"upvotes":5,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2177","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":20,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2177","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2177/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2177/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2177","relative":"#2177","full":"meltano/meltano#2177"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":123,"epic":{"id":338495,"iid":123,"title":"Improve CLI User Experience","url":"/groups/meltano/-/epics/123","group_id":2524164,"human_readable_end_date":"Dec 31, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":54102788,"iid":2149,"project_id":7603319,"title":"Create Helm chart to deploy Meltano to Kubernetes","description":"The Helm chart should ideally run the Meltano schedule via Kubernetes orchestration without Airflow if possible.\n\nMinimum Goal:\nThe minimum goal will to be to provide a way to run a single `meltano elt` pipeline on a schedule with a Kubernetes job.\n\nIdeal Outcome:\nThe ideal outcome would be to support both running a project specific docker image and the default Meltano docker image in both readonly, as well as read-write mode to support the broadest possible user base. Each scheduled pipeline created using `meltano schedule` and available through `meltano schedule list --format=json` would result in its own scheduled `meltano elt` job.","state":"closed","created_at":"2020-07-08T14:16:00.817Z","updated_at":"2021-12-17T22:45:19.964Z","closed_at":"2021-12-17T22:42:45.251Z","closed_by":{"id":1942272,"username":"tayloramurphy","name":"Taylor A Murphy","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png","web_url":"https://gitlab.com/tayloramurphy"},"labels":["flow::Doing","kind::Feature","valuestream::Meltano"],"milestone":{"id":2286172,"iid":200,"group_id":2524164,"title":"Fri: Dec 17, 2021","description":"","state":"closed","created_at":"2021-10-18T15:20:21.743Z","updated_at":"2022-01-04T16:10:50.410Z","due_date":"2021-12-17","start_date":"2021-12-11","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/200"},"assignees":[{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"}],"author":{"id":6382744,"username":"vfnevin","name":"Nevin Morgan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/4cc59114b7a8d795a773748643bd78da?s=80\u0026d=identicon","web_url":"https://gitlab.com/vfnevin"},"type":"ISSUE","assignee":{"id":7646034,"username":"kgpayne","name":"Ken Payne","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png","web_url":"https://gitlab.com/kgpayne"},"user_notes_count":16,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2149","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":12,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2149","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2149/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2149/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2149","relative":"#2149","full":"meltano/meltano#2149"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":79,"epic":{"id":53029,"iid":79,"title":"Running pipelines in production","url":"/groups/meltano/-/epics/79","group_id":2524164,"human_readable_end_date":"Sep 30, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":35189225,"iid":2079,"project_id":7603319,"title":"Rename of internal (OLTP) \"Job\" tables and columns","description":"- [ ] Rename `job` table to `run(s)`\n- [ ] Rename `job_id` column to `job_name`\n\nNote: Since the concept of 'job' itself is changing, we should either wait until #2924+ is shipped - or else combine this with that.","state":"closed","created_at":"2020-05-29T15:15:14.135Z","updated_at":"2022-05-30T05:52:54.516Z","closed_at":"2022-05-30T05:52:54.496Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Accepting Merge Requests","Office Hours::To Discuss","Roadmap","flow::Triage","kind::Tech Debt","valuestream::Meltano"],"milestone":{"id":2351601,"iid":210,"group_id":2524164,"title":"June 2022","description":"","state":"active","created_at":"2021-11-29T21:39:02.417Z","updated_at":"2021-11-29T21:39:02.417Z","due_date":"2022-06-30","start_date":"2022-06-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/210"},"assignees":[{"id":4025463,"username":"cjohnhanson","name":"Cody Hanson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png","web_url":"https://gitlab.com/cjohnhanson"}],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":{"id":4025463,"username":"cjohnhanson","name":"Cody Hanson","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png","web_url":"https://gitlab.com/cjohnhanson"},"user_notes_count":17,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2079","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2079","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2079/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2079/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2079","relative":"#2079","full":"meltano/meltano#2079"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":136,"epic":{"id":421018,"iid":136,"title":"Meltano 2.0 Release","url":"/groups/meltano/-/epics/136","group_id":2524164,"human_readable_end_date":"Apr 29, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":{"id":56419,"iid":59,"sequence":6,"group_id":2524164,"title":null,"description":null,"state":3,"created_at":"2022-05-13T20:04:48.849Z","updated_at":"2022-06-20T00:05:02.366Z","start_date":"2022-06-13","due_date":"2022-06-19","web_url":"https://gitlab.com/groups/meltano/-/iterations/56419"},"health_status":null},{"id":34008395,"iid":2002,"project_id":7603319,"title":"Allow extractor entities to be selected in UI","description":"We already had an \"Entity selection\" modal before, but it was removed in https://gitlab.com/meltano/meltano/-/merge_requests/1157:\n\n![](https://gitlab.com/meltano/meltano/uploads/4d03378285cecd17fbb9e8e537838471/Screen_Shot_2019-08-14_at_8.30.04_AM.png)\n\nI think we should:\n- [ ] Restore the `EntitiesSelectorModal` component from that MR\n- [ ] Add a new \"Select entities\" button to installed extractors on the Extract page, provided they support the `discovery` and `catalog`/`properties` capabilities\n- [ ] Make it clear that with anything but the full set of properties, Meltano's built-in transforms may not work, as described in https://gitlab.com/meltano/meltano/-/issues/876#note_240275676","state":"closed","created_at":"2020-04-30T17:09:12.114Z","updated_at":"2022-05-30T05:43:26.314Z","closed_at":"2022-05-30T05:43:26.295Z","closed_by":{"id":11629953,"username":"MeltyBot","name":"Melty Bot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png","web_url":"https://gitlab.com/MeltyBot"},"labels":["Accepting Merge Requests","Frontend","Office Hours::Discussed","UI","flow::Doing"],"milestone":{"id":2351601,"iid":210,"group_id":2524164,"title":"June 2022","description":"","state":"active","created_at":"2021-11-29T21:39:02.417Z","updated_at":"2021-11-29T21:39:02.417Z","due_date":"2022-06-30","start_date":"2022-06-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/210"},"assignees":[],"author":{"id":87854,"username":"DouweM","name":"Douwe Maan","state":"active","avatar_url":"https://secure.gravatar.com/avatar/73d1548ae618321220679b3a4fda7fb1?s=80\u0026d=identicon","web_url":"https://gitlab.com/DouweM"},"type":"ISSUE","assignee":null,"user_notes_count":10,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/2002","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/2002","notes":"https://gitlab.com/api/v4/projects/7603319/issues/2002/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/2002/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#2002","relative":"#2002","full":"meltano/meltano#2002"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":132,"epic":{"id":400669,"iid":132,"title":"Meltano Frontend Refresh (2021Q1-2022Q2)","url":"/groups/meltano/-/epics/132","group_id":2524164,"human_readable_end_date":"Jun 30, 2022","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":{"id":56419,"iid":59,"sequence":6,"group_id":2524164,"title":null,"description":null,"state":3,"created_at":"2022-05-13T20:04:48.849Z","updated_at":"2022-06-20T00:05:02.366Z","start_date":"2022-06-13","due_date":"2022-06-19","web_url":"https://gitlab.com/groups/meltano/-/iterations/56419"},"health_status":null},{"id":29724563,"iid":1587,"project_id":7603319,"title":"Add \"Retry\" button to pipeline logs view and list when run failed","description":"### Problem to solve\n(Summarize the problem we are trying to solve in the form of we need to do [A], so that [B] can [C])\n\nWe need to *add a pipeline retry button to the Meltano UI Pipeline logs view*, so that when I see that something went wrong I can retry it easily. \n\n![Screen_Shot_2020-01-18_at_7.15.57_AM](/uploads/328de49638e6d3d5e4285cd0b07d5827/Screen_Shot_2020-01-18_at_7.15.57_AM.jpg)\n\nFor example, I can see that \"Nothing to do\" happened, but something should have happened. \nI want to be able to make changes and then just hit \"retry\".\n\n### Target audience\n(For whom are we doing this? Include a persona)\n\nAnyone who is editing or building their own analyses. \n\n### Further details\n(Include use cases, benefits, and/or goals)\n\nIt will make it easier to trouble shoot. \nThis helps make solve the \"Have you tried restarting it?\" problem.\n\n\n### Proposal\n(How are we going to solve the problem? Try to include the user journey)\nI propose a Retry button in the bottom right of the modal.\n\n\n### What does success look like, and how can we measure that?\n(Define both the success metrics and acceptance criteria. Note that success metrics indicate the desired business outcomes, while acceptance criteria indicate when the solution is working correctly. If there is no way to measure success, link to an issue that will implement a way to measure this)\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_","state":"closed","created_at":"2020-01-18T12:19:16.515Z","updated_at":"2022-02-03T22:04:17.090Z","closed_at":"2022-02-03T22:04:17.038Z","closed_by":{"id":10324033,"username":"alex1126","name":"Alex Marple","state":"active","avatar_url":"https://secure.gravatar.com/avatar/ccf23db1b9586149d9b9568d7ea42e10?s=80\u0026d=identicon","web_url":"https://gitlab.com/alex1126"},"labels":["Accepting Merge Requests","Frontend","Product","UI","flow::Doing","kind::Feature","valuestream::Meltano"],"milestone":{"id":2286177,"iid":204,"group_id":2524164,"title":"February 2022","description":"","state":"closed","created_at":"2021-10-18T15:21:35.408Z","updated_at":"2022-03-01T20:28:25.106Z","due_date":"2022-02-28","start_date":"2022-02-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/204"},"assignees":[],"author":{"id":2295562,"username":"emilie","name":"Emilie Schario","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2295562/avatar.png","web_url":"https://gitlab.com/emilie"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/1587","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/1587","notes":"https://gitlab.com/api/v4/projects/7603319/issues/1587/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/1587/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#1587","relative":"#1587","full":"meltano/meltano#1587"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":19359027,"iid":517,"project_id":7603319,"title":"Combine with ML Flow to Scale Knowledge","description":"### Problem to solve\n\nData science/ML experiments are often difficult to communicate to fellow team members and executive. When communicating to team members, the experiment has to be **reproducible** in order for them to have more technical depth. When communicating with executive, the experiment has to be **communicated in a simple manner** in order to have investment from leadership. Not only do executives and team members are stake holders, but other people in the company might be too. Scaling knowledge of experiments is difficult within any company. \n\n### Target audience\n\nData Scientist\n\n*  Frustrated at a company process designed for software engineers\n*  Might able to communicate success, but unable to explain the failed experiments leading up to that success. Failed experiments consists of the core pieces of insight gained by the scientist. Stakeholders often wonder why the process take so long.\n* .Might be able to communicate successful experiments to a few stakeholders, but unable to do so with all those that might be interested. Uable to scale their communication.\n* Frustrated at the slow decision making when the number of stakeholders that needed to be communicated to are high\n* Frustrated at the review process designed for software engineers -\u003e Git code management system like Bitbucket does not have the necessary features to support the review process needed for high quality feedback for peers -\u003e want to have high quality feedback on experiments to produce high quality results\n\n **As an organization grows, how do we make sure that an insight uncovered by one person effectively transfers beyond the targeted recipient?**\n\n### Further details\n\nOne of the major problems is not only sharing reports and analytics but also ML experiments so that knowledge can be pervasive. There have been attempts like this such as [Airbnb Knowledge Repo](https://github.com/airbnb/knowledge-repo) but it's an underinvested area. It's still an unsolved problem within the data science community.\n\n### Proposal\nCombine it with MLflow Projects to have reproducible experiments.\n\n### What does success look like, and how can we measure that?\n(Define both the success metrics and acceptance criteria. Note that success metrics indicate the desired business outcomes, while acceptance criteria indicate when the solution is working correctly. If there is no way to measure success, link to an issue that will implement a way to measure this)\n\nHave a solution that covers 5 main areas:\n1.  Reproduciblity\n2.  Quality\n3.  Consumability of content\n4.  Discoverability\n5.  Learning/growth\n\nReference: [Scaling Knowledge at Airbnb](https://medium.com/airbnb-engineering/scaling-knowledge-at-airbnb-875d73eff091)\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_\n\nhttps://github.com/airbnb/knowledge-repo\n\nhttps://mlflow.org\n\nhttps://medium.com/airbnb-engineering/scaling-knowledge-at-airbnb-875d73eff091","state":"closed","created_at":"2019-03-22T05:19:25.268Z","updated_at":"2021-09-03T16:01:48.724Z","closed_at":"2021-09-03T16:01:48.710Z","closed_by":{"id":1942272,"username":"tayloramurphy","name":"Taylor A Murphy","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png","web_url":"https://gitlab.com/tayloramurphy"},"labels":["Data science / ML"],"milestone":{"id":797629,"iid":42,"group_id":2524164,"title":"Backlog","description":"As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues","state":"active","created_at":"2019-02-21T14:50:28.741Z","updated_at":"2019-02-21T14:50:28.741Z","due_date":null,"start_date":"2019-02-25","expired":false,"web_url":"https://gitlab.com/groups/meltano/-/milestones/42"},"assignees":[],"author":{"id":2089907,"username":"phatlast96","name":"Phat T. Pham","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2089907/avatar.png","web_url":"https://gitlab.com/phatlast96"},"type":"ISSUE","assignee":null,"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/517","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/517","notes":"https://gitlab.com/api/v4/projects/7603319/issues/517/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/517/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#517","relative":"#517","full":"meltano/meltano#517"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":18781735,"iid":444,"project_id":7603319,"title":"Add Snowflake dialect to PyPIKA","description":"### Problem to solve\nWe are currently using PyPIKA to generate the SQL queries for the Meltano UI. As we want to use Snowflake as a data warehouse, we need to make sure our SQL generation engine supports it. We'll need to add a Snowflake dialect to PyPIKA, which might involve sending back as a contribution or as a separate package. Once the dialect in, PyPIKA should be able to generate queries compatible with Snowflake specifics.\n\n### Target audience\nData Analyst\n\n\n### Further details\nWithout this, the generated SQL might cause an error when queried.\n\n\n### Proposal\n\n  - [ ] Investigate Snowflake SQL support\n  - [ ] Investigate PyPIKA dialect handling \n  - [ ] Investigate PyPIKA dialect integration\n  - [ ] Build the dialect\n\n### What does success look like, and how can we measure that?\nOur SQL generation engine can output Snowflake compatible SQL.\n\n### Links / references\n\nRelated to #428 \n\nhttps://github.com/kayak/pypika/blob/master/pypika/dialects.py","state":"closed","created_at":"2019-03-04T15:20:31.688Z","updated_at":"2021-03-23T17:30:44.233Z","closed_at":"2021-03-23T17:30:44.088Z","closed_by":{"id":1942272,"username":"tayloramurphy","name":"Taylor A Murphy","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png","web_url":"https://gitlab.com/tayloramurphy"},"labels":["flow::To Do"],"milestone":{"id":797629,"iid":42,"group_id":2524164,"title":"Backlog","description":"As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues","state":"active","created_at":"2019-02-21T14:50:28.741Z","updated_at":"2019-02-21T14:50:28.741Z","due_date":null,"start_date":"2019-02-25","expired":false,"web_url":"https://gitlab.com/groups/meltano/-/milestones/42"},"assignees":[],"author":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/444","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/444","notes":"https://gitlab.com/api/v4/projects/7603319/issues/444/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/444/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#444","relative":"#444","full":"meltano/meltano#444"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":18781583,"iid":443,"project_id":7603319,"title":"Add Snowflake dialect the database settings","description":"Related to #428 \n\n### Problem to solve\nWe need to add a Snowflake dialect in the database settings, along with any dialect-specific configuration keys in the database settings so that Meltano API can connect to Snowflake for querying.\n\n\n### Target audience\nAudience: Data Analyst\n\n\n### What does success look like, and how can we measure that?\nWe are able to add a Snowflake connection in the Meltano UI database settings.\n\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_","state":"closed","created_at":"2019-03-04T15:15:18.164Z","updated_at":"2021-03-23T17:28:21.729Z","closed_at":"2021-03-23T17:28:21.654Z","closed_by":{"id":1942272,"username":"tayloramurphy","name":"Taylor A Murphy","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png","web_url":"https://gitlab.com/tayloramurphy"},"labels":["flow::To Do"],"milestone":{"id":797629,"iid":42,"group_id":2524164,"title":"Backlog","description":"As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues","state":"active","created_at":"2019-02-21T14:50:28.741Z","updated_at":"2019-02-21T14:50:28.741Z","due_date":null,"start_date":"2019-02-25","expired":false,"web_url":"https://gitlab.com/groups/meltano/-/milestones/42"},"assignees":[],"author":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"type":"ISSUE","assignee":null,"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/443","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/443","notes":"https://gitlab.com/api/v4/projects/7603319/issues/443/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/443/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#443","relative":"#443","full":"meltano/meltano#443"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":18696124,"iid":428,"project_id":7603319,"title":"Create a connector for Snowflake in the UI","description":"### Problem to solve\n(Summarize the problem we are trying to solve in the form of we need to do [A], so that [B] can [C])\nCurrently, if we want to use snowflake as a target, we can run the ETL, but a user cannot use the UI to analyze data\n\n### Target audience\n(For whom are we doing this? Include a persona)\nAnyone replicating the tutorials\n\n### Further details\n(Include use cases, benefits, and/or goals)\nHave a full working demo with snowflake as a target\n\n### Proposal\n(How are we going to solve the problem? Try to include the user journey)\nCreate a connector for Snowflake - @iroussos, let's break down the problem if needed\n\n### What does success look like, and how can we measure that?\n(Define both the success metrics and acceptance criteria. Note that success metrics indicate the desired business outcomes, while acceptance criteria indicate when the solution is working correctly. If there is no way to measure success, link to an issue that will implement a way to measure this)\nAC: We can run each demo e2e with target snowflake and play with the data in the UI\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_","state":"closed","created_at":"2019-02-28T21:23:07.690Z","updated_at":"2019-10-16T14:53:45.375Z","closed_at":"2019-10-16T14:53:45.335Z","closed_by":{"id":3601799,"username":"dmor","name":"Danielle Morrill","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3601799/avatar.png","web_url":"https://gitlab.com/dmor"},"labels":["Accepting Merge Requests","flow::To Do"],"milestone":{"id":797629,"iid":42,"group_id":2524164,"title":"Backlog","description":"As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues","state":"active","created_at":"2019-02-21T14:50:28.741Z","updated_at":"2019-02-21T14:50:28.741Z","due_date":null,"start_date":"2019-02-25","expired":false,"web_url":"https://gitlab.com/groups/meltano/-/milestones/42"},"assignees":[{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"}],"author":{"id":3511154,"username":"valexieva","name":"Virjinia Alexieva","state":"blocked","avatar_url":"https://secure.gravatar.com/avatar/bc036fa2e7b6fa926a175324a948169f?s=80\u0026d=identicon","web_url":"https://gitlab.com/valexieva"},"type":"ISSUE","assignee":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"user_notes_count":6,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/428","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/428","notes":"https://gitlab.com/api/v4/projects/7603319/issues/428/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/428/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#428","relative":"#428","full":"meltano/meltano#428"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":18266934,"iid":385,"project_id":7603319,"title":"Planning/Exploration Sprint - should Meltano offer a hosted sandbox experience?","description":"### Full Opportunity Assessment\n\n@valexieva please add link here once written: --\u003e both links below\n\n### Problem(s) to solve\nOur current product adoption path assumes users launch Meltano in their local development environment (their computer), however due to the size of many data sets this can cause issues with memory, performance, etc. which can limit user adoption and recurring MAU\n\nHowever, users also may be using Meltano on data that we do not want to responsible for hosting (PII, GDPR, etc.) so we also need to think about guiding them to use a production environment that makes sense for their needs.\n\n### Proposed Solution (to Validate)\nOffer the user a way to use Meltano while hosting their data somewhere that can handle a big data set. \n\nWill explore pros/cons of different options, including:\n* Self-hosting Meltano on the user's existing infrastructure\n* Self-hosting Meltano on a one-click install (e.g. Bitnami, Dreamhost, Amazon, etc.)\n* Meltano hosted sandbox\n\n\n### Tasks to Complete Planning/Exploration Sprint\n* [x] Write an opportunity assessment for a hosted sandbox experience (template here: https://docs.google.com/document/d/1rKEihpSxzC_a499xzbuIh9Jd-MfteOaUTMVqQJBzAtA/edit# - go / no-go + recommendation\n* [x] Write an opportunity assessment for docker (template here: https://docs.google.com/document/d/1OG2HzICuj0v2C1itznPoW4mI5KtroSDKSmDIPxet0OE/edit# - go / no-go + recommendation\n* [x] Collect and discuss advantages / disadvantages of all options in the context of the product\n* [ ] ~~Architectural design proposal, including development environment/ deployment to production~~\n* [ ] ~~Feasibility discussion~~\n* [ ] ~~Lightweight development design for a 1 week sprint experiment~~\n* [x] Go / no-go for immediate action versus place in the backlog. **Decision is: NO GO**, we will execute on our Docker image for now and revisit later","state":"closed","created_at":"2019-02-15T13:57:43.532Z","updated_at":"2019-04-10T19:33:04.504Z","closed_at":"2019-03-20T20:33:09.815Z","closed_by":{"id":3601799,"username":"dmor","name":"Danielle Morrill","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3601799/avatar.png","web_url":"https://gitlab.com/dmor"},"labels":["flow::Review"],"milestone":{"id":806546,"iid":46,"group_id":2524164,"title":"Fri: 22 Mar 2019","description":"","state":"closed","created_at":"2019-03-01T23:37:50.156Z","updated_at":"2019-03-29T17:59:43.310Z","due_date":"2019-03-22","start_date":"2019-03-18","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/46"},"assignees":[{"id":3511154,"username":"valexieva","name":"Virjinia Alexieva","state":"blocked","avatar_url":"https://secure.gravatar.com/avatar/bc036fa2e7b6fa926a175324a948169f?s=80\u0026d=identicon","web_url":"https://gitlab.com/valexieva"},{"id":3601799,"username":"dmor","name":"Danielle Morrill","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3601799/avatar.png","web_url":"https://gitlab.com/dmor"}],"author":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"type":"ISSUE","assignee":{"id":3511154,"username":"valexieva","name":"Virjinia Alexieva","state":"blocked","avatar_url":"https://secure.gravatar.com/avatar/bc036fa2e7b6fa926a175324a948169f?s=80\u0026d=identicon","web_url":"https://gitlab.com/valexieva"},"user_notes_count":10,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/385","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":7,"completed_count":4},"weight":4,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/385","notes":"https://gitlab.com/api/v4/projects/7603319/issues/385/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/385/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#385","relative":"#385","full":"meltano/meltano#385"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":9,"epic":{"id":2472,"iid":9,"title":"Meltano Testing","url":"/groups/meltano/-/epics/9","group_id":2524164,"human_readable_end_date":"Mar 22, 2019","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null},{"id":18053807,"iid":365,"project_id":7603319,"title":"to be reused for something else","description":"TBD","state":"closed","created_at":"2019-02-07T20:28:14.617Z","updated_at":"2019-07-17T14:57:30.283Z","closed_at":"2019-07-17T14:57:30.247Z","closed_by":{"id":3601799,"username":"dmor","name":"Danielle Morrill","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3601799/avatar.png","web_url":"https://gitlab.com/dmor"},"labels":["flow::To Do"],"milestone":null,"assignees":[],"author":{"id":253119,"username":"bencodezen","name":"Ben Hong","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/253119/avatar.png","web_url":"https://gitlab.com/bencodezen"},"type":"ISSUE","assignee":null,"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/365","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/365","notes":"https://gitlab.com/api/v4/projects/7603319/issues/365/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/365/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#365","relative":"#365","full":"meltano/meltano#365"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":17667095,"iid":327,"project_id":7603319,"title":"Add workflow for custom taps and targets","description":"### Problem to solve\n_Summarize the problem we are trying to solve in the form of we need to do [A], so that [B] can [C]_\n\nWe currently don't support many taps and targets and this poses risk to adoption. We would like to have a very clear explanation / workflow for anyone willing to contribute\n\n### Target audience\n(For whom are we doing this? Include a persona)\n\nDevelopers\n\n### Further details\n(Include use cases, benefits, and/or goals)\n\nBy adding more taps and targets, we hope to be able to increase adoption by allowing companies to bring many different data sources in 1.\nDeveloping taps and targets in Singer is painful and we believe that by making this process smoother, we can improve the Singer contributing community, which is currently a roadblock to adoption for us.\n\n\n### Proposal\n(How are we going to solve the problem? Try to include the user journey)\n\n- [x] Add custom switch to `meltano add` - we should be able to add any tap/target bypassing discovery.yml from the CLOI\n- [x] Document steps required to create a custom tap and target\n\n### What does success look like, and how can we measure that?\n(Define both the success metrics and acceptance criteria. Note that success metrics indicate the desired business outcomes, while acceptance criteria indicate when the solution is working correctly. If there is no way to measure success, link to an issue that will implement a way to measure this)\n\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_","state":"closed","created_at":"2019-01-25T15:57:36.900Z","updated_at":"2022-05-30T02:15:52.834Z","closed_at":"2019-04-03T22:18:46.013Z","closed_by":{"id":3601799,"username":"dmor","name":"Danielle Morrill","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3601799/avatar.png","web_url":"https://gitlab.com/dmor"},"labels":["flow::Review"],"milestone":{"id":827515,"iid":48,"group_id":2524164,"title":"Fri: 5 Apr, 2019","description":"","state":"closed","created_at":"2019-03-22T20:16:01.192Z","updated_at":"2019-04-11T15:19:00.529Z","due_date":"2019-04-05","start_date":"2019-03-30","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/48"},"assignees":[{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"}],"author":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"type":"ISSUE","assignee":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"user_notes_count":3,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/327","time_stats":{"time_estimate":57600,"total_time_spent":0,"human_time_estimate":"16h","human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":1,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/327","notes":"https://gitlab.com/api/v4/projects/7603319/issues/327/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/327/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#327","relative":"#327","full":"meltano/meltano#327"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":17331949,"iid":283,"project_id":7603319,"title":"Silence pip unless there is an error","description":"As per the 2018-01-14 demo, this was a feedback:\n\n\u003e Pip version 10.0.1 red warning.\n\u003e Micael: Should we silence pip?\n\u003e Micael: We can either upgrade pip (I don’t like that) or silence the ouput unless there is an error (I like that)\n\nI think we should simple silence pip unless there is a problem.\n\nMake the error YELLOW and not RED when it's a warning.","state":"closed","created_at":"2019-01-14T16:50:41.819Z","updated_at":"2022-05-30T02:09:49.051Z","closed_at":"2019-03-22T09:56:11.384Z","closed_by":{"id":300478,"username":"jschatz1","name":"Jacob Schatz","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/300478/avatar.png","web_url":"https://gitlab.com/jschatz1"},"labels":[],"milestone":{"id":806546,"iid":46,"group_id":2524164,"title":"Fri: 22 Mar 2019","description":"","state":"closed","created_at":"2019-03-01T23:37:50.156Z","updated_at":"2019-03-29T17:59:43.310Z","due_date":"2019-03-22","start_date":"2019-03-18","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/46"},"assignees":[{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"}],"author":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"type":"ISSUE","assignee":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"user_notes_count":4,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/283","time_stats":{"time_estimate":3600,"total_time_spent":0,"human_time_estimate":"1h","human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/283","notes":"https://gitlab.com/api/v4/projects/7603319/issues/283/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/283/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#283","relative":"#283","full":"meltano/meltano#283"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":17268497,"iid":280,"project_id":7603319,"title":"Remove `dbt` as a dependency in setup.py","description":"Meltano doesn't need **dbt** to be installed as a dependency.\n\nLet's remove it.","state":"closed","created_at":"2019-01-11T13:25:24.817Z","updated_at":"2019-07-17T16:14:22.272Z","closed_at":"2019-03-04T16:02:54.656Z","closed_by":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"labels":["kind::Tech Debt"],"milestone":null,"assignees":[{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"}],"author":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"type":"ISSUE","assignee":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/280","time_stats":{"time_estimate":3600,"total_time_spent":0,"human_time_estimate":"1h","human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/280","notes":"https://gitlab.com/api/v4/projects/7603319/issues/280/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/280/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#280","relative":"#280","full":"meltano/meltano#280"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":13,"epic":{"id":4347,"iid":13,"title":"Technical Debt","url":"/groups/meltano/-/epics/13","group_id":2524164},"iteration":null,"health_status":null},{"id":17139395,"iid":268,"project_id":7603319,"title":"Settings with SQLite","description":"- [x] Refactor the frontend of the setting page to accept connections for SQLite.","state":"closed","created_at":"2019-01-07T16:09:06.349Z","updated_at":"2019-01-10T16:14:35.007Z","closed_at":"2019-01-09T17:09:12.375Z","closed_by":{"id":300478,"username":"jschatz1","name":"Jacob Schatz","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/300478/avatar.png","web_url":"https://gitlab.com/jschatz1"},"labels":[],"milestone":{"id":745407,"iid":32,"group_id":2524164,"title":"0.16","description":"","state":"closed","created_at":"2018-12-27T15:42:44.309Z","updated_at":"2019-01-21T15:26:33.262Z","due_date":"2019-01-13","start_date":"2019-01-07","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/32"},"assignees":[{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},{"id":3014451,"username":"derek-knox","name":"Derek Knox","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/3014451/avatar.png","web_url":"https://gitlab.com/derek-knox"}],"author":{"id":300478,"username":"jschatz1","name":"Jacob Schatz","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/300478/avatar.png","web_url":"https://gitlab.com/jschatz1"},"type":"ISSUE","assignee":{"id":1491026,"username":"mbergeron","name":"Micaël Bergeron","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1491026/avatar.png","web_url":"https://gitlab.com/mbergeron"},"user_notes_count":0,"merge_requests_count":4,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/268","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":1},"weight":1,"blocking_issues_count":0,"has_tasks":false,"_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/268","notes":"https://gitlab.com/api/v4/projects/7603319/issues/268/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/268/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#268","relative":"#268","full":"meltano/meltano#268"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":null,"epic":null,"iteration":null,"health_status":null},{"id":14522544,"iid":100,"project_id":7603319,"title":"Snowflake Target","description":"Because we are starting to move in the direction of using the singer taps and target protocol we will need a snowflake target. \n\ncc @iroussos","state":"closed","created_at":"2018-09-27T13:53:09.751Z","updated_at":"2018-10-25T20:22:09.778Z","closed_at":"2018-10-17T17:37:53.707Z","closed_by":{"id":300478,"username":"jschatz1","name":"Jacob Schatz","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/300478/avatar.png","web_url":"https://gitlab.com/jschatz1"},"labels":[],"milestone":{"id":646118,"iid":18,"group_id":2524164,"title":"data-0.0.12","description":"","state":"closed","created_at":"2018-09-13T21:24:07.251Z","updated_at":"2018-10-24T22:31:35.764Z","due_date":"2018-10-14","start_date":"2018-10-01","expired":true,"web_url":"https://gitlab.com/groups/meltano/-/milestones/18"},"assignees":[{"id":1982738,"username":"iroussos","name":"Yannis Roussos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1982738/avatar.png","web_url":"https://gitlab.com/iroussos"}],"author":{"id":300478,"username":"jschatz1","name":"Jacob Schatz","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/300478/avatar.png","web_url":"https://gitlab.com/jschatz1"},"type":"ISSUE","assignee":{"id":1982738,"username":"iroussos","name":"Yannis Roussos","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/1982738/avatar.png","web_url":"https://gitlab.com/iroussos"},"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https://gitlab.com/meltano/meltano/-/issues/100","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":13,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https://gitlab.com/api/v4/projects/7603319/issues/100","notes":"https://gitlab.com/api/v4/projects/7603319/issues/100/notes","award_emoji":"https://gitlab.com/api/v4/projects/7603319/issues/100/award_emoji","project":"https://gitlab.com/api/v4/projects/7603319","closed_as_duplicate_of":null},"references":{"short":"#100","relative":"#100","full":"meltano/meltano#100"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"epic_iid":5,"epic":{"id":1299,"iid":5,"title":"Migration to Snowflake","url":"/groups/meltano/-/epics/5","group_id":2524164,"human_readable_end_date":"Dec 31, 2018","human_readable_timestamp":"\u003cstrong\u003ePast due\u003c/strong\u003e"},"iteration":null,"health_status":null}]