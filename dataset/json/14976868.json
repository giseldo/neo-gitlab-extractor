[{"id":28778832,"iid":17,"project_id":14976868,"title":"Automatically delete clones after N hours of inactivity","description":"Goal\n===\nWhen a clone is inactive during N hours (should be configurable; default: 2), it has to be destroyed unless it is marked as \"protected from deletion\".\n\n\"Inactive\" here means:\n\n- no new connections,\n- no SQL requests.\n\n\"during N hours\" here means \"at least N hours\". It may be several minutes more. N is \"global\" for Database Lab instance.\n\nTODO \/ How to implement\n===\n:question: implementation details are not defined, first we need design proposal and discussion.\n\nOn a separate note, do we need to tell the user somehow (in Database Lab API responses?) what is the current value of N?\n\nAcceptance criteria\n===\nAs a user, I know that if I don't use a clone, it will be deleted after N hours. I also know that if I mark it \"protected\" it will never get deleted.","state":"closed","created_at":1576515875927,"updated_at":1579828744033,"closed_at":1579828743738,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":[],"milestone":{"id":1125768,"iid":25,"group_id":4236843,"title":"Sprint 14.01.20-27.01.20","description":"","state":"closed","created_at":"2020-01-16T15:53:36.464Z","updated_at":"2020-02-06T20:00:08.481Z","due_date":"2020-01-27","start_date":"2020-01-14","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/25"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/17","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/17","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/17\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/17\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#17","relative":"#17","full":"postgres-ai\/database-lab#17"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":28690420,"iid":15,"project_id":14976868,"title":"Bug: Endless wait if not enough privileges","description":"Goal\n===\n\nTODO \/ How to implement\n===\n![Screenshot_2019-12-14_at_22.58.15](\/uploads\/fe961ceb6ff1e1c2dd8d8b27c6bae3f0\/Screenshot_2019-12-14_at_22.58.15.png)\n![Screenshot_2019-12-14_at_22.58.10](\/uploads\/9a5d5fb0bf27d59304e55066c375613a\/Screenshot_2019-12-14_at_22.58.10.png)\n\nAcceptance criteria\n===","state":"closed","created_at":1576353466668,"updated_at":1577799808473,"closed_at":1577799808294,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Bug"],"milestone":{"id":1109298,"iid":24,"group_id":4236843,"title":"Sprint 24.12.19-06.01.20","description":"","state":"closed","created_at":"2019-12-30T06:50:02.168Z","updated_at":"2020-01-16T15:52:49.559Z","due_date":"2020-01-06","start_date":"2019-12-24","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/24"},"assignees":[],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":null,"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/15","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/15","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/15\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/15\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#15","relative":"#15","full":"postgres-ai\/database-lab#15"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":28757360,"iid":16,"project_id":14976868,"title":"Use the real password","description":"1. [x] reset all the password for all existing users @NikolayS \n1. [x] when creating a clone, use the DB username\/password provided by a user @anatolystansler","state":"closed","created_at":1576256294563,"updated_at":1577799768453,"closed_at":1577799768239,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":[],"milestone":{"id":1109298,"iid":24,"group_id":4236843,"title":"Sprint 24.12.19-06.01.20","description":"","state":"closed","created_at":"2019-12-30T06:50:02.168Z","updated_at":"2020-01-16T15:52:49.559Z","due_date":"2020-01-06","start_date":"2019-12-24","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/24"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":4,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/16","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":4,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/16","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/16\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/16\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#16","relative":"#16","full":"postgres-ai\/database-lab#16"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":28316793,"iid":14,"project_id":14976868,"title":"Run DB Lab as a service","description":"Goal\n===\nReliable launch of DB Lab.\n\nTODO \/ How to implement\n===\n- Docker `restart` option\n- Orchestration?\n- Nginx like?\n\nAcceptance criteria\n===","state":"closed","created_at":1576077910689,"updated_at":1581006093845,"closed_at":1581006093797,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/14","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/14","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/14\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/14\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#14","relative":"#14","full":"postgres-ai\/database-lab#14"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":28144424,"iid":12,"project_id":14976868,"title":"Review all timestamps (db_state_at and others), clarify the meanings","description":"Goal\n===\n`db_state_at` corresponds \n\n- [x] UI @dmius \n- [x] the platform reads the value from DB Lab API @dmius \n- [ ] at snapshotting time on DB Lab instance, we need to determine `db_state_at` and store it somewhere\n    - [x] how do we get the timestamp if the originally we work with a replica? @NikolayS \n    - [ ] how do we get time timestamp if we deal with a master? @NikolayS \n    - [x] we do we store it? ---> in case of ZFS: zfs snapshot annotation, in other cases \u2013 depending on implementation (may be just files)\n- [ ] dblab API to provide the data @anatolystansler \n- [ ] review texts\n\nTODO \/ How to implement\n===\nReview all timestamps, clarify the meanings. The time of the latest available database state seems to be not correct (too fresh). UI expects db_state_at, if there is no such field, we show \"unknown\".\n\nThe logic for snapshots list exposure is needed. If a corresponding API call is made, we need to scan all existing snapshots, choose the proper ones according to some mask (should it be configurable?), and reply with list to the API call. Don't worry about long lists. Instead, consider providing a warning if the list exceeds 50 items (\"The list of available snapshots exceeds 50, clean up some old ones not to waste of disk space and avoid potential performance degradation\").\n\nAcceptance criteria\n===","state":"closed","created_at":1575911073595,"updated_at":1577799764916,"closed_at":1577799764566,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Bug"],"milestone":{"id":1109298,"iid":24,"group_id":4236843,"title":"Sprint 24.12.19-06.01.20","description":"","state":"closed","created_at":"2019-12-30T06:50:02.168Z","updated_at":"2020-01-16T15:52:49.559Z","due_date":"2020-01-06","start_date":"2019-12-24","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/24"},"assignees":[{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/12","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":8,"completed_count":4},"weight":5,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/12","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/12\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/12\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#12","relative":"#12","full":"postgres-ai\/database-lab#12"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":28144256,"iid":11,"project_id":14976868,"title":"Speed up cloning in the case of continuous WAL replay","description":"Goal\n===\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1575910738914,"updated_at":1577119641280,"closed_at":1577119641217,"closed_by":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"labels":[],"milestone":{"id":1101489,"iid":23,"group_id":4236843,"title":"Sprint 10.12.19-23.12.19","description":"","state":"closed","created_at":"2019-12-17T15:27:33.149Z","updated_at":"2019-12-30T06:49:02.667Z","due_date":"2019-12-23","start_date":"2019-12-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/23"},"assignees":[],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":null,"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/11","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/11","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/11\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/11\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#11","relative":"#11","full":"postgres-ai\/database-lab#11"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":28143021,"iid":10,"project_id":14976868,"title":"Declare Swagger and run it with DB lab instance","description":"Goal\n===\nProvide a clear insight to DB Lab API with Swagger specification and run Swagger UI with DB Lab.\n\nTODO \/ How to implement\n===\n- [x] Generate YAML file (API description for Swagger)\n- [ ] Add Swagger to the project, decide on URL (may be `\/`)\n- [ ] (optional) Demo setup -- point to in in the docs (API reference)\n\n\nAcceptance criteria\n===\nAs a DB Lab API user I am able to quickly see API reference provided by Swagger and I can experiment with API in the browser.","state":"closed","created_at":1575908963339,"updated_at":1580485603376,"closed_at":1580217468619,"closed_by":{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"},"labels":["m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/10","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":1},"weight":6,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/10","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/10\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/10\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#10","relative":"#10","full":"postgres-ai\/database-lab#10"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":28138900,"iid":8,"project_id":14976868,"title":"Postman collection for DBLab","description":"Goal\n===\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1575901895170,"updated_at":1580934122783,"closed_at":1580934122726,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/8","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/8","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/8\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/8\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#8","relative":"#8","full":"postgres-ai\/database-lab#8"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":28138881,"iid":7,"project_id":14976868,"title":"DBLab+GUI+Platform - in kind or minikube","description":"Goal\n===\nProvide an ability to launch platform and DB lab on user's machines using Docker or Kind.\n\nTODO \/ How to implement\n===\n\nAcceptance criteria\n===\n","state":"closed","created_at":1575901865565,"updated_at":1578199372016,"closed_at":1578199371917,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Flow::Backlog"],"milestone":{"id":1109298,"iid":24,"group_id":4236843,"title":"Sprint 24.12.19-06.01.20","description":"","state":"closed","created_at":"2019-12-30T06:50:02.168Z","updated_at":"2020-01-16T15:52:49.559Z","due_date":"2020-01-06","start_date":"2019-12-24","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/24"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/7","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":10,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/7","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/7\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/7\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#7","relative":"#7","full":"postgres-ai\/database-lab#7"},"severity":"UNKNOWN","moved_to_id":29300613.0,"service_desk_reply_to":null,"health_status":null},{"id":26711487,"iid":4,"project_id":14976868,"title":"If Postgres fatal error is not \u201cDB is not starting up\u201d, then we notify user about such a fatal, with details","description":"1) if cannot connect to 6xxx port (\"connection refused\" or so) \u2013 wait (but not more than 1min; after 1min give up and report an error),\n\n2) FATAL \"the database system is starting up\" \u2013 this is normal. Wait. (Can take long in case of PITR)\n\n3) any other FATALs -- give up immediately, report an error.","state":"closed","created_at":1572955505063,"updated_at":1585775132331,"closed_at":1585775132124,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Bug","Flow::Review\/QA","m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/4","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/4","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/4\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/4\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#4","relative":"#4","full":"postgres-ai\/database-lab#4"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":26240323,"iid":1,"project_id":14976868,"title":"DB Lab agent","description":"\n- [x] Update README\n- [x] Prepare Postila data for demo \n- [x] Move provision part of Joe to DB Lab as is\n- [ ] First version of REST API (see number 3 API Commands).\n- [ ] Joe works with REST API\n- [ ] Divide DB Lab in 2 parts: agent and control (orchestration) instance\n- [ ] Improve code (including AWS provision according to review done by Andrew)\n- [ ] 443 port? SSL configuration (Let's Encrypt certificates)\n\n1. Binary or container image\n1. API -- token\n1. API \u2013 commands:\n\n    - clone create (timestamp)\n    - clone reset (id)\n    - clone list \n    - clone destroy (id)\n    - status of DB Lab instance","state":"closed","created_at":1571842056924,"updated_at":1616988669856,"closed_at":1575319879838,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Flow::In Progress"],"milestone":{"id":1080671,"iid":22,"group_id":4236843,"title":"Sprint 19.11.2019-02-12-2019","description":"","state":"closed","created_at":"2019-11-26T10:29:39.070Z","updated_at":"2019-12-17T15:26:22.908Z","due_date":"2019-12-02","start_date":"2019-11-19","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/22"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/1","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":8,"completed_count":3},"weight":15,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/1","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/1\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/1\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#1","relative":"#1","full":"postgres-ai\/database-lab#1"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29301033,"iid":35,"project_id":14976868,"title":"Refactoring after code review","description":"Fix issues from code review:\n- [x] Use dep <s>or modules<\/s>\n- [x] Go modules https:\/\/gitlab.com\/postgres-ai\/database-lab\/issues\/34\n- [x] Add comments to exported functions\n- [x] Missed error processing https:\/\/goreportcard.com\/report\/gitlab.com\/postgres-ai\/joe#L278\n- [x] golint and misspell warning from the same link (@NikolayS: I suppose there are multiple tools around \u2013 various linters \u2013 are we sure with our choice? let's discuss in this issue)\n- [x] Use absolute path of package instead of dots in imports, e.g. \"..\/ec2ctrl\". Different in modules https:\/\/stackoverflow.com\/a\/53016796\/319692\n- [ ] Short write is possible here https:\/\/gitlab.com\/postgres-ai\/joe\/blob\/master\/src\/provision\/aws.go#L323 better to do it like here https:\/\/golang.org\/src\/io\/ioutil\/ioutil.go?s=2534:2602#L69 or use lib functions (@Nikolays: this was written before moving the DB Lab code to a separate repository; so, the link is to `joe` repository. We need to start with applying changes in `database-lab` first because Joe code will eventually be based on it as well)","state":"closed","created_at":1571238307583,"updated_at":1578636331985,"closed_at":1578636331917,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["List of tasks"],"milestone":{"id":1109298,"iid":24,"group_id":4236843,"title":"Sprint 24.12.19-06.01.20","description":"","state":"closed","created_at":"2019-12-30T06:50:02.168Z","updated_at":"2020-01-16T15:52:49.559Z","due_date":"2020-01-06","start_date":"2019-12-24","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/24"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/35","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":7,"completed_count":6},"weight":4,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/35","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/35\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/35\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#35","relative":"#35","full":"postgres-ai\/database-lab#35"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29194118,"iid":28,"project_id":14976868,"title":"Postgres connection by unix sockets for management","description":"Goal\n===\n\nTODO \/ How to implement\n===\nUse unix sockets instead of TCP\/IP to make Postgres connection. Better from security perspective and doesn't require port allocation. \n\nSwitch to work via Unix socket (can be `trust`) for everything (management tasks) except the end-user connections. End user connections can (should?) be via TCP socket, but with the password required. (Currently `md5`, but we will need to support `ldap` as well, enterprise users need it 100%).\n\nAcceptance criteria\n===","state":"closed","created_at":1568208171667,"updated_at":1634641813738,"closed_at":1578583249447,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":[],"milestone":{"id":997911,"iid":16,"group_id":4236843,"title":"Sprint 24.09.2019-7.10.2019","description":"","state":"closed","created_at":"2019-09-11T13:39:57.972Z","updated_at":"2019-10-08T14:27:20.752Z","due_date":"2019-10-07","start_date":"2019-09-24","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/16"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/28","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":10,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/28","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/28\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/28\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#28","relative":"#28","full":"postgres-ai\/database-lab#28"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":90458722,"iid":277,"project_id":14976868,"title":"\"logical\": support restoring from a plain-text file","description":"Goal\n===\nCurrently, restore is working using pg_restore -- it means that plain-text format is not supported (when we need to use psql). We need to work with any format of dump, including plain-text\n\n- auto-detect that we deal with plain-text format (might be compressed - is it possible to automatically handle popular compression formats too?)\n- check if parallelization is not requested. If it is, print an error and exit (for plain-text files, we are going to support only single thread)\n- use psql to load the file\n\nTODO \/ How to implement\n===\n- Detect plain text format:\n  - only work with plain text format\n  - use `pg_restore -l dump.sql`\n  - extract `dbname` - how to do it reliably :question: \n    - Parse database name from a dump file\n    - Consider dumps made by `dumpall`\n    - As a fallback (unless otherwise worked), we can use filename and convert (purify) it to a valid database name (manage the filename length and replace spaces, punctuation to underscore).\nhttps:\/\/www.postgresql.org\/docs\/current\/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS\n- Validate configuration (parallel jobs)\n- Build a psql restore command depends on format of a dump file:\n  - partial restore is not supported\n- Review and fix the docs:\n  - keep in mind potential configuration changes\n  - create a \"how-to\" guide to restore from plain-text files\n\nAcceptance criteria\n===\nAs a DLE admin, I can use any popular dump formats, including plain text files.","state":"closed","created_at":1626629711981,"updated_at":1631095667172,"closed_at":1627352285620,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","Requested"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":5,"merge_requests_count":3,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/277","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":16,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/277","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/277\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/277\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#277","relative":"#277","full":"postgres-ai\/database-lab#277"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":90389245,"iid":276,"project_id":14976868,"title":"Clean up a custom Docker network on DLE failure","description":"Goal\n===\nDLE creates its own Docker network. On a retrieval error, the Docker network continues to exist.\n\nIf there are too many networks on the machine, an error occurs:\n```\n[ERROR] Error response from daemon: could not find an available, \nnon-overlapping IPv4 address pool among the defaults to assign to the network\n```\n\nTODO \/ How to implement\n===\nOn DLE retrieval failure:\n- disconnect containers from a custom Docker network\n- clean up custom Docker networks\n\nAcceptance criteria\n===","state":"closed","created_at":1626437692690,"updated_at":1630390289471,"closed_at":1630390289461,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/276","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/276","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/276\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/276\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#276","relative":"#276","full":"postgres-ai\/database-lab#276"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":90089887,"iid":275,"project_id":14976868,"title":"DLE API\/CLI\u2013\u00a0extend to support multiple volumes","description":"Goal\n===\nDLE API\/CLI need to support the case of \"logical\" (dump\/restore) data provisioning when we have 2 or more volumes and some rotation logic:\n- which snapshot belongs to which volume\n- which clone belongs to clone volume\n- what volume is active\n- what are the characteristics of each volume (disk space used, etc)\n- do we have spare volumes or all volumes are \"busy\" so we won't be able to perform next refresh unless we delete some clones (perhaps, this should be a warning of the global state of DLE)\n- each volume is supposed to have a single snapshot \u2013\u00a0`dataStateAt` is also an attribute of a volume?\n\nTODO \/ How to implement\n===\n\nTBD \u2013 @akartasov please add details here\n- Add a new field `Pool string` to the `Snapshot` struct\n- Clone contains a link to a snapshot that will contain a mention of the pool\n- Add to the `GET \/status` response an active pool\n- Add to `GET \/status` disk space metrics \n  - Return \"N\/A\" if data cannot be provided, e.g. files-related details on LVM. \n  - Use both physical and logical sizes (`Used` and `LogicalReferenced`) for clones and snapshots.\n\n\nAcceptance criteria\n===\nAs an admin or user of DLE, I can see the info about all volumes available. Particularly, I can understand the details of data refresh policy and what to expect during the next refresh attempt.","state":"closed","created_at":1626060793181,"updated_at":1638389262355,"closed_at":1634007958254,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","Requested"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":3,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/275","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/275","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/275\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/275\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#275","relative":"#275","full":"postgres-ai\/database-lab#275"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":88006822,"iid":257,"project_id":14976868,"title":"Provide config and diagnostic details in API","description":"Goal\n===\nBe able to discover important (or all non-secret) configuration options and other valuable details.\n\nTODO \/ How to implement\n===\n* [x] Uptime (time from control container start) - `\/status`\n* [x] Current file system (aka thin clone manager)  - `\/status`\n* [x] Compression ratio (in addition to disk size\/usage) - `\/status`\n* [x] Clone size (in list)  - `\/status`\n* [x] Snapshot size (in list) - `\/snapshots`\n* [x] Total size of clones  - `\/status`\n* [x] Total size of snapshots  - `\/status`\n* [x] Docker image (used for clones, see the global config)  - `\/status`\n\nReturn \"N\/A\" if data cannot be provided, e.g. files-related details on LVM.\n\nUse both physical and logical sizes (`Used` and `LogicalReferenced`) for clones and snapshots.\n\nSee also: https:\/\/gitlab.com\/postgres-ai\/platform\/-\/issues\/156#data-thats-being-used\n\nExample\n```json\n{\n    \"status\": {\n        \"code\": \"OK\",\n        \"message\": \"Instance is ready\"\n    },\n    \"fileSystem\": {\n        \"mode\": \"zfs\",\n        \"sizeHR\": \"192 MiB\",\n        \"freeHR\": \"164 MiB\",\n        \"usedHR\": \"28 MiB\",\n        \"dataSizeHR\": \"121 MiB\",\n        \"usedBySnapshotsHR\": \"183 KiB\",\n        \"compressRatio\": 4.53\n    },\n    \"expectedCloningTime\": 0,\n    \"numClones\": 0,\n    \"clones\": [],\n    \"pools\": [\n        {\n            \"name\": \"oldest5\",\n            \"mode\": \"zfs\",\n            \"dataStateAt\": \"\",\n            \"status\": \"active\",\n            \"cloneList\": [],\n            \"disk\": {\n                \"size\": 201278976,\n                \"free\": 171785728,\n                \"used\": 29493248,\n                \"usedBySnapshots\": 187392,\n                \"usedByChildren\": 244224,\n                \"dataSize\": 127020544,\n                \"compressRatio\": 4.53\n            }\n        }\n    ],\n    \"retrieving\": {\n        \"mode\": \"\",\n        \"status\": \"finished\",\n        \"nextRefresh\": \"2021-08-26T12:15:00Z\",\n        \"alerts\": {\n            \"refresh_skipped\": {\n                \"level\": \"warning\",\n                \"message\": \"Pool to perform full refresh not found. Skip refreshing\",\n                \"lastSeen\": \"2021-08-26T12:10:00.001036446Z\",\n                \"count\": 1\n            }\n        }\n    },\n    \"provisioner\": {\n        \"dockerImage\": \"postgresai\/extended-postgres:11\",\n        \"containerConfig\": {\n            \"shm-size\": \"256MB\"\n        }\n    },\n    \"startedAt\": \"2021-08-26T12:09:50Z\"\n}\n```\n\nAcceptance criteria\n===","state":"closed","created_at":1622517358013,"updated_at":1634011829565,"closed_at":1634011829556,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","Starter"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/257","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":8,"completed_count":8},"weight":6,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/257","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/257\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/257\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#257","relative":"#257","full":"postgres-ai\/database-lab#257"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":87991548,"iid":256,"project_id":14976868,"title":"Add more details about snapshots","description":"Goal\n===\nIncrease snapshots observability.\n\nTODO \/ How to implement\n===\n- [x] Snapshot size\n- [x] Number of clones which use the snapshot\n\nReturn \"N\/A\" if data cannot be provided, e.g. details on LVM.\n\nAcceptance criteria\n===","state":"closed","created_at":1622482407777,"updated_at":1634011805107,"closed_at":1634011805095,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Starter"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/256","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":4,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/256","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/256\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/256\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#256","relative":"#256","full":"postgres-ai\/database-lab#256"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":77064826,"iid":223,"project_id":14976868,"title":"Basic clone observability","description":"Goal\n===\nTo detect dangerous DDL and slow queries and describe reasons for it, DBLab should provide more data about DB migrations and EXPLAIN plans\n\n\nTODO \/ How to implement\n===\n- [x] Add an additional mount point to store observation artifacts - 2h\n- [x] Define artifacts structure and provide artifact management - (6-8h)\n  ```\n  \/observer\/\n    clone_id\/\n        session_id\/\n            pg_stat_statements\/\n                statements.csv\n            pg_stats\/\n                pg_stats_database.csv\n                pg_stat_bgwriter.csv\n                pg_stat_user_tables.csv\n                objects_size.csv\n            summary.json\n   ```\n   \n   **summary.json**\n   ```\n    {\n      \"session_id\": 1,\n      \"clone_id\": \"c0nta38hmvj68nrgn7jg\",\n      \"duration\": {\n        \"total\": \"35s\",\n        \"started_at\": \"2021-02-19T15:11:23.508Z\",\n        \"finished_at\": \"2021-02-19T15:11:59.106167994Z\",\n        \"max_query\": \"239ms\"\n      },\n      \"db_size\": {\n        \"total\": \"7.7 MiB\",\n        \"diff\": \"10 B\",\n        \"objects_stat\": {\n          \"count\": 62,\n          \"row_estimate_sum\": 23232,\n          \"total_size_bytes_sum\": 8101888,\n          \"table_size_bytes_sum\": 4218880,\n          \"indexes_size_bytes_sum\": 3244032,\n          \"toast_size_bytes_sum\": 638976\n        }\n      },\n      \"locks\": {\n        \"total_interval\": 4,\n        \"warning_interval\": 0\n      },\n      \"stats\": {}\n    }\n   ```\n- [x] Collect data during observation sessions and store observation results as files - (14-18h)\n  - dangerous locks detected (consider as an artifact)\n  - duration\n    - duration in Lab\n    - estimated duration for prod\n  - pg_stat_statements - as an \u201camount of work\u201d - buffers read\/hit\/dirtied\/written\n  - pg_stat_*** standard views:\n    - op\/tuple stats\n    - pg_stat_bgwriter (checkpointer, bgwriter, backend buffer stats)\n    - WAL written\n  - DB and its objects sizes and changes (similarly to L001 in postgres-checkup)\n  - dead tuples and bloat: should we analyze them?\n    - autovacuum settings \u2013 so far we didn't take care of them! (match prod)\n  - summary: ???? (what should be there - discuss and decide)\n- [x] Serve results via DLE API - (8-10h)\n  - GET `\/observation\/results\/{clone_id}\/{session_id}` - returns a session summary\n  - GET `\/observation\/results\/{clone_id}\/{session_id}\/list` - returns a list of session result files\n  - GET `\/observation\/results\/{clone_id}\/{session_id}\/file?path=pg_stat_activity\/activity.csv` - download a session result file\n- [x] Clean up artifacts when destroying a clone - 2h\n\n\nAcceptance criteria\n===","state":"closed","created_at":1610432241719,"updated_at":1614352943112,"closed_at":1614352811686,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","List of tasks"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/223","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":5,"completed_count":5},"weight":36,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/223","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/223\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/223\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#223","relative":"#223","full":"postgres-ai\/database-lab#223"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":75901463,"iid":215,"project_id":14976868,"title":"Add an ability not to reset passwords of existing users in clones","description":"When a clone creates, an additional superuser is added and all passwords for current users are reset.\n\nThere are some cases when the DB instance has several dozen users with different privileges which are significant. In such conditions, it is not possible to test the difference in privileges. \n\nSo, we need an additional setting to avoid resetting the existing user passwords:\n\n``` yaml\n   provision: \n     keepUserPasswords: true\n```","state":"closed","created_at":1607606484082,"updated_at":1642719540028,"closed_at":1642719540020,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Flow::Backlog","Starter"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":7660204,"username":"ssi444","name":"ssi444","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/8423d5bf7a20a5dd71080325c9308490?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/ssi444"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/215","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/215","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/215\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/215\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#215","relative":"#215","full":"postgres-ai\/database-lab#215"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":75795142,"iid":213,"project_id":14976868,"title":"Clean up service containers on DLE failure","description":"Goal\n===\nOn a DLE error, the service containers continue to run. \n\nIf we use the restart on failure option for DLE, it creates another service container that can lead to data corruption.\n\nTODO \/ How to implement\n===\nCatch DLE error and stop service containers\n\n\nAcceptance criteria\n===","state":"closed","created_at":1607482736079,"updated_at":1668594111314,"closed_at":1624954989794,"closed_by":{"id":8931234,"username":"viktor38","name":"Viktor Grigorev","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/3c3eef2f72886ce9d7603b7fd569acd4?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/viktor38"},"labels":["Bug","Starter"],"milestone":null,"assignees":[{"id":8931234,"username":"viktor38","name":"Viktor Grigorev","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/3c3eef2f72886ce9d7603b7fd569acd4?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/viktor38"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":8931234,"username":"viktor38","name":"Viktor Grigorev","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/3c3eef2f72886ce9d7603b7fd569acd4?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/viktor38"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/213","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/213","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/213\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/213\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#213","relative":"#213","full":"postgres-ai\/database-lab#213"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74483400,"iid":204,"project_id":14976868,"title":"Allow running DLE with empty Platform configuration","description":"Goal\n===\nEmpty Platform configuration leads to an error:\n```\n2020\/11\/17 09:04:35 [FATAL] invalid config of Platform Client given: URL and AccessToken must not be empty\n```\n\nTODO \/ How to implement\n===\nMake Platform configuration parameters optional\n\nAcceptance criteria\n===","state":"closed","created_at":1605604078563,"updated_at":1605759877822,"closed_at":1605759877771,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/204","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/204","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/204\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/204\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#204","relative":"#204","full":"postgres-ai\/database-lab#204"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74482576,"iid":203,"project_id":14976868,"title":"Do not override user-defined configs in clones","description":"Goal\n===\nDo not override user-defined configs in clones\n\nTODO \/ How to implement\n===\nApply only additional configs when creating a clone.\n\nAcceptance criteria\n===","state":"closed","created_at":1605603299079,"updated_at":1605688815680,"closed_at":1605688815585,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/203","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/203","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/203\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/203\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#203","relative":"#203","full":"postgres-ai\/database-lab#203"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74406099,"iid":201,"project_id":14976868,"title":"Run sync instance asynchronously","description":"Goal\n===\nRun sync instance asynchronously not to wait while the database system is ready to accept connections\n\nTODO \/ How to implement\n===\nRun sync instance asynchronously as a separate goroutine\n\nAcceptance criteria\n===","state":"closed","created_at":1605498606542,"updated_at":1608704755120,"closed_at":1605680998455,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/201","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/201","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/201\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/201\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#201","relative":"#201","full":"postgres-ai\/database-lab#201"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74405995,"iid":200,"project_id":14976868,"title":"Automatically start PostgreSQL in a sync instance  + \"merge\" two Postgres images into one","description":"Goal\n===\nTo have an ability restart sync container manually\n\nTODO \/ How to implement\n===\n- prepare extended sync instance: add wal-g\n- adjust PostgreSQL configuration before start container\n- tune health checks, make sure it works\n- use one container to run them all\n- get rid of sync instance image\n\nAcceptance criteria\n===","state":"closed","created_at":1605498256389,"updated_at":1607480043744,"closed_at":1607479868941,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/200","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/200","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/200\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/200\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#200","relative":"#200","full":"postgres-ai\/database-lab#200"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74233890,"iid":199,"project_id":14976868,"title":"Stuck clones on reset","description":"Goal\n===\nFix the case when a clone is stuck on the reset operation \n\nTODO \/ How to implement\n===\nDo not reset the clone and do not change the clone status if it is not started yet\n\nAcceptance criteria\n===","state":"closed","created_at":1605151148474,"updated_at":1605518601612,"closed_at":1605518601581,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/199","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/199","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/199\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/199\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#199","relative":"#199","full":"postgres-ai\/database-lab#199"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74190289,"iid":197,"project_id":14976868,"title":"Build latest images for minor commit tags","description":"Goal\n===\nTo have the latest image of minor versions including bugfixes\n\nTODO \/ How to implement\n===\nBuild latest images for minor commit tags.\nExample: tag `2.0.1` additionally produces\n- `dblab:2.0-latest`\n- `dblab-server:2.0-latest`\n- `dblab-swagger-ui:2.0-latest`\n\nAcceptance criteria\n===","state":"closed","created_at":1605087057518,"updated_at":1605518577427,"closed_at":1605518577400,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/197","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/197","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/197\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/197\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#197","relative":"#197","full":"postgres-ai\/database-lab#197"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74180456,"iid":196,"project_id":14976868,"title":"Use an actual PostgreSQL port to check idleness of clones","description":"Goal\n===\nThe clone activity checker gets an error with the default PostgreSQL port and can stop idle clones.\n\nTODO \/ How to implement\n===\nUse the actual port to check active query.\n\nAcceptance criteria\n===","state":"closed","created_at":1605070287707,"updated_at":1605518592372,"closed_at":1605518592327,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/196","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/196","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/196\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/196\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#196","relative":"#196","full":"postgres-ai\/database-lab#196"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74064557,"iid":195,"project_id":14976868,"title":"Refactor output of service containers","description":"Goal\n===\nSince we use CSV logs by default, we cannot rely on Docker logs:\n- rewrite health checks for:\n  - starting a sync instance on physical restore\n- retrieve important output of commands:\n   - error logs on fail\n   - `InspectCommandResponse` and `ExecCommand` for operations while physical restore: \n      - running Postgres\n      - promotion Postgres\n      - restore command\n      - chown pgdata\n\nTODO \/ How to implement\n===\n- use `pg_isready` for health checks\n- forward output and errors\n\n\nAcceptance criteria\n===","state":"closed","created_at":1604905856199,"updated_at":1608704737676,"closed_at":1605535754472,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/195","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":6,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/195","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/195\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/195\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#195","relative":"#195","full":"postgres-ai\/database-lab#195"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74053554,"iid":193,"project_id":14976868,"title":"Show human-readable GiB\/MiB\/... numbers in API responses","description":"Goal\n===\nRight now, we show disk usage, DB size, cloneDiffSize, etc in bytes, such as:\n\n```\n\"cloneDiffSize\": 4792320\n```\n\nFor humans, it is much more convenient to see it in human-readable form.\n\nEspecially it makes sense for CLI.\n\nTODO \/ How to implement\n===\nIn addition to raw numbers, show human-readable string values (with TiB \/ GiB \/ MiB \/ KiB)\n\n\nAcceptance criteria\n===\nAs an API or CLI user, I can quickly understand the disk usage, object sizes.","state":"closed","created_at":1604897325172,"updated_at":1606357448004,"closed_at":1606357447862,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/193","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/193","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/193\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/193\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#193","relative":"#193","full":"postgres-ai\/database-lab#193"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74053443,"iid":192,"project_id":14976868,"title":"Stop all dependent containers when DLE is stopped","description":"Goal\n===\nWe need to stop (or even remove) the dependent containers when we stop the DLE's container.\n\nTODO \/ How to implement\n===\n- handle termination signals (os.Interrupt, syscall.SIGTERM)\n- stop processes inside control containers (PostgreSQL for sync instance)\n- remove control containers \n\nAcceptance criteria\n===","state":"closed","created_at":1604896979349,"updated_at":1607651864899,"closed_at":1607651864750,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Blocked","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/192","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/192","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/192\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/192\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#192","relative":"#192","full":"postgres-ai\/database-lab#192"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74053377,"iid":191,"project_id":14976868,"title":"Report DLE version in API responses","description":"Goal\n===\nAs an API or CLI user, I want to know the DLE version.\n\nTODO \/ How to implement\n===\n\n- create a new CLI command `dblab instance version`\n- make a request `GET \/healthz` from CLI\n\n```\ndblab instance version\n{\n    \"version\": \"2.0.3-1-ga9f501c-20201119-0417\"\n}\n\n```\n\n\nAcceptance criteria\n===\nWorking with DLE, I can always learn what DLE version it is.","state":"closed","created_at":1604896797590,"updated_at":1608704813507,"closed_at":1605848177881,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/191","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/191","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/191\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/191\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#191","relative":"#191","full":"postgres-ai\/database-lab#191"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74052706,"iid":188,"project_id":14976868,"title":"When DLE is restarted, do not lose clones","description":"Goal\n===\nIt's quite inconvenient that we lose all the close when restart is needed.\n\nA restart is needed when:\n- we need to change the config\n- during upgrades\n\nA restart might also happen unexpectedly (e.g., the machine rebooted).\n\nIn all these cases, we risk losing some important work. That's why thin clones need to survive DLE restarts (and machine reboots).\n\nTODO \/ How to implement\n===\n\n- reload configuration https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/134\n- upgrade:\n  - choose serialization format - 2\n  - handle an incoming signal - 2\n  - back up the state of running instances to file(?) on SIGUSR1 - 6\n    - InstanceID\n    - clone wrapper list (including clones, sessions)\n    - instance status\n    - port pool\n  - restore the state of backup instances - 12\n    - read serialized data\n    - initialize the state\n  - handle running processes inside DLE - 4\n  - add a configuration option to ignore restore file - 1\n  - merge existing configuration parameters with new ones - 6\n\nAcceptance criteria\n===\nAs a DLE admin, I can restart DLE not losing clones, so people do not lose their work.","state":"closed","created_at":1604895082438,"updated_at":1638386755834,"closed_at":1633658345951,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Details needed","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":6,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/188","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":33,"blocking_issues_count":1,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/188","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/188\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/188\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#188","relative":"#188","full":"postgres-ai\/database-lab#188"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":74052618,"iid":187,"project_id":14976868,"title":"On engine start, if there are some snapshots already, skip creation of the initial snapshot","description":"Goal\n===\nWhen we start\/restart the engine, if we have some snapshots already, it doesn't make sense to create another one immediately (and wait many minutes till opening the 2345 port). We can simply start working, and create snapshots on schedule.\n\nHowever, there is a question: what if we **need** to create a new snapshot? There is no API handler yet (related: https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/65), and there are no other means for the DLE admin to initiate snapshot creation. -- Let's understand what to do with this before implementing this issue.\n\nTODO \/ How to implement\n===\n\n- disable creation of the initial snapshot by default\n- create the initial snapshot only if there are no available snapshots\n\nAcceptance criteria\n===\nAs a DLE admin, I can start DLE much quicker (initial snapshot is not created if there are existing snapshots already).","state":"closed","created_at":1604894867985,"updated_at":1605518570078,"closed_at":1605518570044,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/187","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/187","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/187\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/187\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#187","relative":"#187","full":"postgres-ai\/database-lab#187"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":73968034,"iid":186,"project_id":14976868,"title":"Review default sync instance (and other Postgres containers) configuration","description":"Goal\n===\nTo make sync instance running is more reliable and observable, including but not limited to:\n\n- all log_*** (e.g., we need `log_checkpoints = on`, autovacuum logging)\n- set `hot_standby = 'on'` explicitly (because it's off in 9.6 and older)\n\nFor clones, we also need `track_io_timing = 'on'`.\n\nTODO \/ How to implement\n===\n\n- [x] Review and correct default configuration files for a sync instance: https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/tree\/master\/configs\/postgres\n- [x] Make a configuration plan for each stage (how, which, and where we can configure a PostgreSQL instance):\n   - Default adjustment\n   - Sync Instance\n   - Promote instance\n   - Database snapshot\n   - User clone\n- [x] Provide an ability to configure `recovery.conf`\n- [x] Provide an ability to configure sync and promotion instances\n- [x] Create a configuration manager to make easy customization for each stage, use include directives\n   ```\n   include_if_exists postgresql.dblab.postgresql.conf\n   include_if_exists postgresql.dblab.pg_control.conf\n   include_if_exists postgresql.dblab.sync.conf\n   include_if_exists postgresql.dblab.promotion.conf\n   include_if_exists postgresql.dblab.snapshot.conf\n   include_if_exists postgresql.dblab.user_defined.conf\n   ```\n- [x] Config management optimization(do not override basic configs if they are already initialized)\n\n\nAcceptance criteria\n===","state":"closed","created_at":1604662047276,"updated_at":1608712577680,"closed_at":1606918409949,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::In Progress"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},{"id":6449733,"username":"fomin.list","name":"Dmitry Fomin","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/6449733\/avatar.png","web_url":"https:\/\/gitlab.com\/fomin.list"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/186","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":6,"completed_count":6},"weight":10,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/186","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/186\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/186\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#186","relative":"#186","full":"postgres-ai\/database-lab#186"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":73710986,"iid":184,"project_id":14976868,"title":"CI observer: Allow regexp filtering for Postgres logs before sending to the Platform","description":"Goal\n===\nAs a DLE admin, I can set up regexp rules for Postgres logs. These rules are applied *before* sending the logs to the Platform, to ensure that personal data is masked properly.\n\nTODO \/ How to implement\n===\n- Extend database Lab configuration\n   ```yaml\n   observer:\n     replacementRules: \n       \"regex\": \"replace\"\n   ```\n- Build a map of processing fields \n   ```\n   Processed Fields:\n      - message\n      - detail\n      - hint\n      - internal_query\n      - query\n   ```\n- Replace matched strings\n\n   Regex syntax: https:\/\/github.com\/google\/re2\/wiki\/Syntax\n- Add regex tests\n- Add docs\n\n\nAcceptance criteria\n===\nAs a DLE admin, I can set up rules to avoid sending personal log-data (Postgres logs) to the Platform.","state":"closed","created_at":1604290889976,"updated_at":1608706397745,"closed_at":1606147710861,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Details needed","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/184","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/184","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/184\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/184\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#184","relative":"#184","full":"postgres-ai\/database-lab#184"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":73347487,"iid":181,"project_id":14976868,"title":"Improve preprocessing script experience","description":"Goal\n===\nFor now, it's quite difficult to run SQL-command in a preprocessing script because the PostgreSQL instance is not running\n\nTODO \/ How to implement\n===\nAllow users to run a preprocessing script during the promotion stage when PostgreSQL is running and ready to receive commands\n\n- I am able to execute SQL scripts without thinking of where to connect\n- I am able to execute Bash scripts too\n- <s>I am able to use env variables inside SQL scripts<\/s>\n- Add docs\n- Parallelization: alphabet order; if scripts are placed in a folder, run them simultaneously. For example,\n   ```\n   - abc.sql\n   - init.sql\n   parallel\/\n     - example.sql\n     - new_script.sql\n     - run.sql\n   - test.sql\n   - wrap.sql\n   ```\n\n\n### Example\n```yaml\n    physicalSnapshot:\n      options:\n...\n        # Promote PGDATA after data fetching.\n        promotion:\n...\n          # It is possible to define pre-precessing SQL queries. For example, \"\/tmp\/scripts\/sql\".\n          # Default: empty string (no pre-processing defined).\n          queryPreprocessing:\n            # Path to SQL pre-processing queries.\n            queryPath: \"\/sql-scripts\"\n\n            # Worker limit for parallel queries.\n            maxParallelWorkers: 2\n```\nAcceptance criteria\n===","state":"closed","created_at":1603689314028,"updated_at":1608712234756,"closed_at":1606383072875,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","enhancement"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/181","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":10,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/181","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/181\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/181\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#181","relative":"#181","full":"postgres-ai\/database-lab#181"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":72966456,"iid":179,"project_id":14976868,"title":"Fix DLE tests","description":"Goal\n===\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1603119193174,"updated_at":1603939800060,"closed_at":1603699383929,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::In Progress"],"milestone":null,"assignees":[{"id":6449733,"username":"fomin.list","name":"Dmitry Fomin","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/6449733\/avatar.png","web_url":"https:\/\/gitlab.com\/fomin.list"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":6449733,"username":"fomin.list","name":"Dmitry Fomin","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/6449733\/avatar.png","web_url":"https:\/\/gitlab.com\/fomin.list"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/179","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/179","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/179\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/179\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#179","relative":"#179","full":"postgres-ai\/database-lab#179"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":72250146,"iid":172,"project_id":14976868,"title":"DLE API for automatic checks of DB migrations","description":"Goal\n===\nCreate an API to provide automatic checks of DB migrations\n\nTODO \/ How to implement\n===\n`database-lab`: `observer-start`\/`observer-finish` using API, async (16h)\n* `observer-start` - starts dblab session and starts observing 3h\n  * create session on the platform\n  * session ID generated on the side of dblab (\\~UUID)\n* `observer-finish` - finished dblab session, makes summary, reports to the Platform 10h\n  * change clone status (OK -> EXPORTING -> OK)\n  * update session on the platform (upload meta)\n  * upload logs (single request, what is file size limit :question:; multipart upload\/gzip on NGINX)\n* do not idle delete clone in EXPORTING status 1h\n* CLI, API initiate the processes that is being executed on DLE side, async 2h\n\nhttps:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/171#note_424320002\n\nAcceptance criteria\n===","state":"closed","created_at":1601983819969,"updated_at":1604409812607,"closed_at":1603118605375,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["API"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/172","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":16,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/172","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/172\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/172\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#172","relative":"#172","full":"postgres-ai\/database-lab#172"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":72231631,"iid":171,"project_id":14976868,"title":"Design API contract for automatic checks of DB migrations","description":"Goal\n===\nDesign API contract\n\n* start\/finish on dblab\n* upsert session (or create and update session) and upload logs\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1601964128774,"updated_at":1603118517642,"closed_at":1603118517407,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["API"],"milestone":null,"assignees":[{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"},{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"},"user_notes_count":23,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/171","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/171","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/171\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/171\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#171","relative":"#171","full":"postgres-ai\/database-lab#171"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":71878288,"iid":169,"project_id":14976868,"title":"Synchronize max_connections parameter on restore","description":"Goal\n===\nSynchronize `max_connections` parameter to avoid errors on start:\n```\n2020\/09\/29 03:59:37 [INFO]   Running container: dblab_phr_btpb29m7graql4bukts0. ID: 62db8684e45f2dce119552f7aba9b123a1229e96a56901a7508a86176e914eda\n2020\/09\/29 03:59:37 [INFO]   Running restore command:  pgbackrest --process-max=4 --type=immediate restore\n2020\/09\/29 04:01:03 [INFO]   Restoring job has been finished\n2020\/09\/29 04:01:03 [DEBUG]  Configuring Postgres...\n2020\/09\/29 04:01:04 [INFO]   Running refresh command\nk2020-09-29 11:01:04.661 +07 [32]: [1-1] db=,user= (,) LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n\ufffd2020-09-29 11:01:04.663 +07 [32]: [2-1] db=,user= (,) LOG:  could not create IPv6 socket for address \"::\": Address family not supported by protocol\ny2020-09-29 11:01:04.664 +07 [32]: [3-1] db=,user= (,) LOG:  listening on Unix socket \"\/var\/run\/postgresql\/.s.PGSQL.5432\"\n\ufffd2020-09-29 11:01:04.906 +07 [39]: [1-1] db=,user= (,) LOG:  database system was interrupted; last known up at 2020-09-29 01:21:08 +07\ny2020-09-29 11:01:05.037 +07 [39]: [2-1] db=,user= (,) LOG:  starting point-in-time recovery to earliest consistent point\nn2020-09-29 11:01:05.052 +07 [39]: [3-1] db=,user= (,) LOG:  restored log file \"00000024.history\" from archive\nv2020-09-29 11:01:05.128 +07 [39]: [4-1] db=,user= (,) LOG:  restored log file \"0000002400000149000000DB\" from archive\n\ufffd2020-09-29 11:01:05.149 +07 [39]: [5-1] db=,user= (,) FATAL:  hot standby is not possible because max_connections = 300 is a lower setting than on the master server (its value was 2000)\n\ufffd2020-09-29 11:01:05.150 +07 [32]: [4-1] db=,user= (,) LOG:  startup process (PID 39) exited with exit code 1\n2020-09-29 11:01:05.150 +07 [32]: [5-1] db=,user= (,) LOG:  aborting startup due to startup process failure\nY2020-09-29 11:01:05.175 +07 [32]: [6-1] db=,user= (,) LOG:  database system is shut down\n2020\/09\/29 04:01:05 [INFO]   Removing container ID: 62db8684e45f2dce119552f7aba9b123a1229e96a56901a7508a86176e914eda\n2020\/09\/29 04:02:05 [INFO]   Container \"62db8684e45f2dce119552f7aba9b123a1229e96a56901a7508a86176e914eda\" has been removed\n2020\/09\/29 04:02:05 [FATAL]  Failed to run the data retrieval service: failed to refresh data: database instance is not running\n```\n\nTODO \/ How to implement\n===\nBefore Postgres starts (on a physical restore step), retrieve the `max_connections` parameter and set it to the configuration file.\nUse `pg_controldata`:\n```bash\n$ sudo -u postgres \/usr\/lib\/postgresql\/11\/bin\/pg_controldata -D \/var\/lib\/postgresql\/11\/main | grep max_connections\nmax_connections setting:              100\n```\n\n\nAcceptance criteria\n===","state":"closed","created_at":1601389193451,"updated_at":1621316936121,"closed_at":1603275710941,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Engine 2.0","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/169","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/169","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/169\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/169\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#169","relative":"#169","full":"postgres-ai\/database-lab#169"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":71424955,"iid":168,"project_id":14976868,"title":"Dynamically allocated port","description":"Let's implement what is proposed in https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/merge_requests\/127: use dynamically allocated port inside containers, to allow using `show port;` in applications\n\n(which currently is returning `5432` always, introducing confusions and caveats -- this is a problem in certain scenarios).","state":"closed","created_at":1600661640429,"updated_at":1605070416243,"closed_at":1601462005635,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/168","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/168","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/168\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/168\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#168","relative":"#168","full":"postgres-ai\/database-lab#168"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":71424756,"iid":167,"project_id":14976868,"title":"Support PostgreSQL 13","description":"Goal\n===\nSupport PostgreSQL which is to be released on September 24.\n\nTODO \/ How to implement\n===\n- [ ] Carefully read release notes: https:\/\/www.postgresql.org\/docs\/release\/13.0\/\n- [-] <s>Prepare extended Postgres image https:\/\/gitlab.com\/postgres-ai\/custom-images\/-\/issues\/2<\/s>\n- [x] Carefully test\n    - [ ] physical mode\n    - [ ] logical mode\n- [ ] add tests for 13\n- [-] <s>Pay attention to changes in `pg_stat_***` \u2013\u00a0there are new columns, and we may benefit from having them<\/s>\n- [-] <s>Consider using `pg_stat_progress_basebackup` to show progress of running `pg_basebackup` for physical initialization mode https:\/\/www.postgresql.org\/docs\/13\/progress-reporting.html#BASEBACKUP-PROGRESS-REPORTING<\/s>\n\nAcceptance criteria\n===\nDatabase Lab Engine can be used for Postgres 13.","state":"closed","created_at":1600661121824,"updated_at":1604920115721,"closed_at":1604904692517,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/167","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":5,"completed_count":1},"weight":5,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/167","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/167\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/167\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#167","relative":"#167","full":"postgres-ai\/database-lab#167"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":71424625,"iid":166,"project_id":14976868,"title":"Full refresh without losing clones","description":"Goal\n===\nAllow performing full refresh in \"logical\" provisioning mode, without interruptions, not losing the existing clones and snapshots.\n\nTODO \/ How to implement\n===\n\n\n- [x] reorganize FS configuration\n   - create mountpoint configuration structs\n- [x] refactor FS pool managers\n   - create zfs and lvm filesystem managers\n- [x] retrieval pool rotation\n   - detect the next pool to update\n   - pool switching\n   - reload service configuration\n- [x] running an actual retrieval chain\n   - reproduce retrieval job execution\n- [x] running a refresh scheduler\n   - create a timetable\n   - cancel nested snapshot schedulers\n- [x] cloning with different fs pools\n   - provide fs managed pools to the cloning service\n   - adopt cloning operations\n- [x] idle timeouts\n   - detect clone idleness for all managed pools\n\n----\nThe problem is that normally, we refresh the instance fully. To do that, we need to erase PGDATA.\n\nA possible solution would be using a separate volume \/ ZFS pool (most convenient in clouds: EBS volume on AWS, PD disk on GCP, etc.), and performing initialization of PGDATA there, not interrupting the work of the existing Database Lab Engine.\n\nNext, once new PGDATA is initialized, we have options\/ideas: \n- straightforward reload. Cons: disk space overhead. We can try to use ZFS deduplication in order to avoid the negative effect. Steps:\n   - remove existing PGDATA\n   - load new PGDATA\n   - create a new snapshot\n\n- rsync or copy the new data to the \"main\" disk overwriting the existing data, and create a new snapshot (there are risks that deviation will be so significant in terms \"delta\" of data blocks, that it will \"eat\" disk space significantly -- thorough testing is needed); This solution is based on assumption that oids do not change. If the schema has changed, fully refresh of PGDATA might be required\n\n- use \"baseline\" snapshot to reduce the delta:\n    - when performing a fresh setup, create an \"initial\" ZFS snapshot, when there is no PGDATA yet,\n    - always keep this snapshot,\n    - before fetching a fresh PGDATA to a new volume, mirror from that snapshot first somehow (using a temporary clone on the \"main\" zpool, or using `zfs send)\n    - once new PGDATA on a temporary zpool is ready, mirror it back to the \"main zpool\",\n    - then create a new snapshot on the main zpool,\n    - destroy a temporary zpool \/ disk \/ volume.\n\nFor clouds (e.g., in the case of AWS \/ RDS), it is important to implement an automated provision of a temporary disk (AWS: EBS volume), which needs to be auto-deleted at the end of the refresh operation.\n\nAgain, first, thorough testing is required to explore the possibilities and resolve possible issues with the approach described.\n\nAcceptance criteria\n===\nAs a Database Lab Engine administrator, I can set up a workflow in which periodical refreshing in \"logical\" provisioning mode does not lead of temporary downtime and losing the existing clones \u2013 I just need an additional disk space (in clouds \u2013 temporarily).","state":"closed","created_at":1600660725997,"updated_at":1611241540251,"closed_at":1611046661639,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","List of tasks"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":10,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/166","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":7,"completed_count":7},"weight":42,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/166","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/166\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/166\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#166","relative":"#166","full":"postgres-ai\/database-lab#166"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":72712637,"iid":174,"project_id":14976868,"title":"postgres on zfs benchmarking","description":"Goal\n===\n\nTODO \/ How to implement\n===\n- [x] create benchmarks for zfs performance (create, write, read, delete files), how it depends on:  \n  - [x] record size\n  - [x] compression\n  - [x] deduplication\n\n\nAcceptance criteria\n===","state":"closed","created_at":1600361888019,"updated_at":1603120046037,"closed_at":1603120045854,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":[],"milestone":null,"assignees":[{"id":6449733,"username":"fomin.list","name":"Dmitry Fomin","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/6449733\/avatar.png","web_url":"https:\/\/gitlab.com\/fomin.list"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":6449733,"username":"fomin.list","name":"Dmitry Fomin","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/6449733\/avatar.png","web_url":"https:\/\/gitlab.com\/fomin.list"},"user_notes_count":7,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/174","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":4},"weight":3,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/174","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/174\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/174\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#174","relative":"#174","full":"postgres-ai\/database-lab#174"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":71122546,"iid":164,"project_id":14976868,"title":"Database Lab terraform module","description":"Goal\n===\n- Deploy to AWS on EC2 instances\n- (?) Deploy to GCP\n\nTODO \/ How to implement\n===\n- Create AMI\n- Tests\n\n\nAcceptance criteria\n===","state":"closed","created_at":1600098624618,"updated_at":1603118949804,"closed_at":1603118949627,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":[],"milestone":null,"assignees":[{"id":6449733,"username":"fomin.list","name":"Dmitry Fomin","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/6449733\/avatar.png","web_url":"https:\/\/gitlab.com\/fomin.list"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":6449733,"username":"fomin.list","name":"Dmitry Fomin","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/6449733\/avatar.png","web_url":"https:\/\/gitlab.com\/fomin.list"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/164","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":13,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/164","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/164\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/164\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#164","relative":"#164","full":"postgres-ai\/database-lab#164"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":71119438,"iid":162,"project_id":14976868,"title":"Create custom CI runner for tests","description":"Goal\n===\nBe able to automatically launch tests of Database Lab using runners. We want to be able to use ZFS, that's why we probably need a CI runners on our machine with special configuration.\n\nTODO \/ How to implement\n===\n- [x] Create custom runner\n- [x] Launch test scripts and check that everything works\n\nAcceptance criteria\n===","state":"closed","created_at":1600095003735,"updated_at":1611204538356,"closed_at":1611204538312,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/162","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":8,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/162","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/162\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/162\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#162","relative":"#162","full":"postgres-ai\/database-lab#162"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":70185553,"iid":155,"project_id":14976868,"title":"logical provisioning: support  pg_dump_anon","description":"Goal\n===\nWe need to be able to use an alternative to pg_dump, for example [pg_dump_anon](https:\/\/postgresql-anonymizer.readthedocs.io\/en\/stable\/anonymous_dumps\/)\n\nTODO \/ How to implement\n===\nWe already have postgres_anonymizer in our extended docker image.\n\nBut pg_dump is hard-coded. Allow substituting it by pg_dump_anon.\n\npg_dump_anon doesn't support `-j`, and it supports only `plain` format right now.\n\nAcceptance criteria\n===\nI'm able to refresh Database Lab from production or another Database Lab with configured masking based on postgres_anonymizer, so no PII reaches my non-production environments.\n\nWhen testing: ensure that some masking is working: define a masking rule for some column\/username pair, see https:\/\/postgresql-anonymizer.readthedocs.io\/en\/stable\/dynamic_masking\/ -- on the destination, we must see the masked value.","state":"closed","created_at":1598236402262,"updated_at":1600096701305,"closed_at":1600096701174,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":[],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/155","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/155","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/155\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/155\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#155","relative":"#155","full":"postgres-ai\/database-lab#155"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":69804746,"iid":150,"project_id":14976868,"title":"Automated setup: automatic pull and remove Docker images","description":"Goal\n===\nAutomatically pull and remove Docker images to improve retriever user experience\n\nTODO \/ How to implement\n===\n- automatically pull absent images\n- stop and remove unused images for physical restore (`retriever_physical_restore`)\n\n\nAcceptance criteria\n===","state":"closed","created_at":1597326117380,"updated_at":1598281888486,"closed_at":1598281888457,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Engine 2.0","Flow::Backlog"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/150","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/150","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/150\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/150\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#150","relative":"#150","full":"postgres-ai\/database-lab#150"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":69768241,"iid":149,"project_id":14976868,"title":"Postgres config management in the case of physical data retrieval","description":"Goal\n===\nCurrently, during physical data retrieval, we rely on postgresql.conf that comes with backup or is brought by pg_basebackup. This is not reliable because such a config may contain various unexpected actions.\n\nWe aim to control postgresql.conf fully. (And later, in a separate issue, pg_hba.conf as well).\n\nFor that, we want to start from a default postgresql.conf always, and apply transformations needed for Database Lab's work.\n\nTODO \/ How to implement\n===\n- [ ] always start with the default postgresql.conf. We need to have them as a starting point. To get it, use `initdb -D \/path`.\n- [ ] set shared_buffers to some small value that will be enough for maintenance tasks and sync instance activity (should be configurable in dblab config; `100MB` should be enough)\n- [ ] apply adjustments that user configures in the main dblab config \u2013 we'll ask to provide 3 things:\n    - [ ] `work_mem` and all the planner settings such as `effective_cache_size`. We'll ask user to get it using the following query with regexp:\n    ```sql\n    select format($$%s = '%s'$$, name, setting)\n    from pg_settings\n    where name ~ '(work_mem$|^enable_|_cost$|scan_size$|effective_cache_size|^jit|^geqo|default_statistics_target|constraint_exclusion|cursor_tuple_fraction|collapse_limit$|parallel|plan_cache_mode)';\n    ```\n    - [ ] apply `shared_preload_libraries` that user configured in the main dblab config (default is `pg_stat_statements`, its our minimum)\n    - [ ] apply extensions-related params, if any\n- [ ] take care of `log_***` settings\n\nAcceptance criteria\n===\nAs a user, I know what I need to provide in the main dblab config to configure and use Database Lab with automated \"physical\" data retrieval. This process doesn't depend on the fact if or if not `postgresql.conf` is prese in PGDATA on the source.","state":"closed","created_at":1597246114736,"updated_at":1597373511682,"closed_at":1597373511669,"closed_by":null,"labels":["Engine 2.0","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/149","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":7,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/149","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/149\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/149\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#149","relative":"#149","full":"postgres-ai\/database-lab#149"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":69383391,"iid":147,"project_id":14976868,"title":"Automatic setup: snapshot schedule and retention policy","description":"Goal\n===\nConfigure snapshot creation schedule and retention policy (autodeletion).\n\nTODO \/ How to implement\n===\n- create a new `snapshot` stage\n- provide stage configuration. For example,\n    ```yaml\n    snapshot:\n      jobs:\n        - name: snapshotting\n          options:\n            schedule: \"0 *\/6 * * *\"\n            retention:\n              snapshotLimit: 4\n    ```\n- snapshot creation \n  - parse schedule\n  - run a task to create a snapshot\n- autodeletion - periodically run a task to remove old snapshots. Check `scripts\/cleanup_zfs_snapshot.sh`\n  - detect old snapshots\n  - remove detected snapshots\n\nAcceptance criteria\n===","state":"closed","created_at":1596484508784,"updated_at":1598280777946,"closed_at":1598280777916,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Engine 2.0","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/147","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":12,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/147","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/147\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/147\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#147","relative":"#147","full":"postgres-ai\/database-lab#147"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":69347728,"iid":145,"project_id":14976868,"title":"Sync instance: add a separate stage and configuration","description":"Goal\n===\nRun sync instance in order to keep data from physical backup up-to-date\n\nTODO \/ How to implement\n===\n- options:\n    - arbitrary `restore_command` or `primary_conninfo`\n    - use WAL-G for the first step\n- integrate as an option to existing stages\n- prepare stage configuration(docker images, credentials, volumes)\n\nAcceptance criteria\n===","state":"closed","created_at":1596430581205,"updated_at":1598280669005,"closed_at":1598280668971,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Engine 2.0","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/145","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/145","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/145\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/145\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#145","relative":"#145","full":"postgres-ai\/database-lab#145"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":69329748,"iid":143,"project_id":14976868,"title":"Automated setup: always recalculate statistics when restored from a dump","description":"Goal\n===\nWhen we use \"logical\" data provisioning, restoring from a dump, initially, there are no actual stats in the database. As the last step for the restore job, there should be stats recalculation.\n\nWithout stats, the optimizer chooses sub-optimal plans.\n\nTODO \/ How to implement\n===\nAfter running pg_restore, always run `vacuum analyze freeze;` in the target database.\n\nAcceptance criteria\n===\nAs us user, using \"logical\" data retrieval approach (for example, for an RDS database as a source), I get the result with up-to-date stats, so the performance, the SQL execution plans are good.","state":"closed","created_at":1596316831070,"updated_at":1598281873616,"closed_at":1598281873590,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Engine 2.0","Flow::Backlog"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/143","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/143","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/143\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/143\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#143","relative":"#143","full":"postgres-ai\/database-lab#143"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":69029156,"iid":142,"project_id":14976868,"title":"Automated setup: extend \"extended-postgres\" \u2013 more Postgres extensions","description":"Related: https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/138\n\nGoal\n===\nAdd most of all popular Postgres extensions to `extended-postgres`.\n\nTODO \/ How to implement\n===\n- [x] define and review the list of the most popular extensions @NikolayS @fomin.list :four: \n    - RDS and others\n    - github activity\n    - search: any ratings?\n    - we expect ~20-30\n- [x] extend \"extended-postgres\" :ten:\n    - most are installed via `apt-get install` or `apk add` (if -alpine)\n    - we must support 9.6, 10, 11, 12\n    - some require compilation (should we take them at all?) -- 80\/20 rule\n- [x] ensure it's published on Docker Hub https:\/\/hub.docker.com\/r\/postgresai\/extended-postgres\n- [ ] docs: describe the list of supported Postgres extensions :two: \n\nAcceptance criteria\n===\nAs a user, I don't do any additional actions to launch my first Database Lab for my real database (extensions I use are already supported by Database Lab, in 99%).","state":"closed","created_at":1595865101663,"updated_at":1598281805518,"closed_at":1598281805491,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Engine 2.0","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},{"id":6449733,"username":"fomin.list","name":"Dmitry Fomin","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/6449733\/avatar.png","web_url":"https:\/\/gitlab.com\/fomin.list"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"user_notes_count":13,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/142","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":3},"weight":16,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/142","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/142\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/142\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#142","relative":"#142","full":"postgres-ai\/database-lab#142"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":69028872,"iid":141,"project_id":14976868,"title":"Automated setup: basic Postgres configuration (physical & logical)","description":"Goal\n===\nSimplify configuration when setting up Database Lab.\n\nTODO \/ How to implement\n===\n- [x] first, we take the default `postgresql.conf`\n- [x] MAIN: `shared_buffers`: 200M for sync instance and 1\/N (or constant; pre-defined in config) of RAM for clones \n- [x] MAIN: override all params required for Database Lab: logging connections, etc\n- [x] planner params, `effective_cache_size`, to match production -- we support changing it right in the main Database Lab configuration file (but we don't edit them automatically)\n- [x] pg_hba.conf - only changes required for Database Lab \u2013 same principle (allow to extend it)\n- [x] review what's happening to config during snapshotting\n\n\n### Config suggestions\n\nfrom prod:\n```\n# Use values from the source (production) to make the planner work similarly\neffective_cache_size = ..\nseq_page_cost = ..\nrandom_page_cost = ..\nwork_mem = ...\nmaintenance_work_mem = ...\n# ... and the other 'planner' settings, see https:\/\/www.postgresql.org\/docs\/current\/runtime-config-query.html\n```\n\nthis we need to enforce (same as  log_***)\n```\nmin_wal_size = '1GB'\nmax_wal_size = '16GB'\ncheckpoint_timeout = '15min'\ncheckpoint_completion_target = 0.9\n```\n\nFor the docs\n```\nselect format($$%s = '%s'$$, name, setting)\nfrom pg_settings\nwhere name ~ '(work_mem$|^enable_|_cost$|scan_size$|effective_cache_size|^jit|^geqo|default_statistics_target|constraint_exclusion|cursor_tuple_fraction|collapse_limit$|parallel|plan_cache_mode)';\n```\n\nAcceptance criteria\n===\nAs a user, I just edit the main config (paying attention to: `shared_buffers`), launch Database Lab, and it works, without requiring to change any config params.","state":"closed","created_at":1595864602874,"updated_at":1598280814940,"closed_at":1598280814910,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Engine 2.0","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/141","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":6,"completed_count":6},"weight":10,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/141","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/141\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/141\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#141","relative":"#141","full":"postgres-ai\/database-lab#141"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":69028672,"iid":140,"project_id":14976868,"title":"Automated setup: create the first snapshot (physical case)","description":"Goal\n===\nRight after retrieval\/refresh of PGDATA the very 1st snapshot should be created automatically. :warning: This issue is only about physical retrieval.\n\nTODO \/ How to implement\n===\n- [x] adjust pre-snapshot configs\n- [x] promote database\n- [x] keep metadata to a file\n- [x] customize a snapshot script \n- [x] add an ability for custom pre-processing\n\nAcceptance criteria\n===\nTBD\n\nRelated #139","state":"closed","created_at":1595864244947,"updated_at":1598280832455,"closed_at":1598280832430,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Engine 2.0","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/140","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":5,"completed_count":5},"weight":14,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/140","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/140\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/140\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#140","relative":"#140","full":"postgres-ai\/database-lab#140"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":43299080,"iid":134,"project_id":14976868,"title":"Reload configuration without downtime","description":"Goal\n===\nReload configuration without stopping the service\n\nTODO \/ How to implement\n===\nHandle the `SIGHUP` signal to reload service configuration\n\n\nAcceptance criteria\n===","state":"closed","created_at":1592196169278,"updated_at":1608704701306,"closed_at":1605241847106,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","enhancement"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/134","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":6,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/134","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/134\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/134\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#134","relative":"#134","full":"postgres-ai\/database-lab#134"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":43295900,"iid":133,"project_id":14976868,"title":"Synchronization or port allocation statuses.","description":"Goal\n===\nPort may be allocated twice, resulting in an error\n\nTODO \/ How to implement\n===\nDon't allocate the same port simultaneously. It's necessary to add a synchronization mechanism.\n\nThere is an issue in the StartSession function(pkg\/services\/provision\/mode_local.go):\n\n```\n\t\/\/ TODO(anatoly): Synchronization or port allocation statuses.\n\tport, err := j.getFreePort()\n\tif err != nil {\n\t\treturn nil, errors.New(\"failed to get a free port\")\n\t}\n...\n\terr = j.setPort(port, true)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err, \"failed to set a port\")\n\t}\n```\nAcceptance criteria\n===","state":"closed","created_at":1592195857534,"updated_at":1592579997491,"closed_at":1592579997444,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/133","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/133","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/133\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/133\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#133","relative":"#133","full":"postgres-ai\/database-lab#133"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":49913552,"iid":135,"project_id":14976868,"title":"API returns the list of clones without specific order (was: \"UI: Order list of clones\")","description":"Goal\n===\nCurrently, the list of clones on the page of DB Lab instance (https:\/\/postgres.ai\/console\/XXXX\/instances\/XXXX) is without a specific order. This is inconvenient. We need a predefined order.\n\nTODO \/ How to implement\n===\n- This must be implemented at the Database Lab API level. `instance status` and `clone list` \u2013 they both have to return the list of clones ordered by creation time, desc (the newest is the 1st).\n\n\nAcceptance criteria\n===\nAs a user, if I refresh the page, the list of clones doesn't change the order.","state":"closed","created_at":1591368666723,"updated_at":1597939406565,"closed_at":1592921762603,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/135","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/135","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/135\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/135\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#135","relative":"#135","full":"postgres-ai\/database-lab#135"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":35053542,"iid":130,"project_id":14976868,"title":"Add error details to the status message on failure","description":"Goal\n===\nSet a specific error message instead of a default message on failure: `Cloning failure.`\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1590571902723,"updated_at":1591199159611,"closed_at":1591199159559,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["API","Flow::In Progress"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/130","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/130","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/130\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/130\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#130","relative":"#130","full":"postgres-ai\/database-lab#130"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":34407435,"iid":127,"project_id":14976868,"title":"Port visibility","description":"Goal\n===\nLimit access to control port to local network interface by default.\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1589210926416,"updated_at":1589555028815,"closed_at":1589554595370,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/127","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/127","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/127\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/127\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#127","relative":"#127","full":"postgres-ai\/database-lab#127"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":34311004,"iid":125,"project_id":14976868,"title":"Make a cleanup script more reliable","description":"Goal\n===\nIf the creation of a snapshot is being failed during a few days, the cleanup script can eventually remove all snapshots\n```\n0 4 * * *   ZFS_POOL=\"zpool\"   PGDATA_SUBDIR=\"\/postgresql\/data\"   MOUNT_DIR=\"\/var\/lib\/dblab\/clones\"   SUDO_CMD=\"sudo -u postgres\"  bash \/home\/ubuntu\/database-lab\/scripts\/create_zfs_snapshot.sh | logger --stderr --tag \"create_zfs_snapshot\"\n0 6 * * * sudo zfs list -t snapshot -o name | grep -v clone | grep -v NAME | head -n -3 | xargs -n1 --no-run-if-empty sudo zfs destroy -R 2>&1  | logger --stderr --tag \"cleanup_zfs_snapshot\"\n```\n\nTODO \/ How to implement\n===\n- Do not remove the last snapshot: \n    - use `head -n -NUM` because the command option with the leading `-` prints all except the last NUM lines of the input\n- ~~Do not remove the snapshot from which a clone was created~~ **Update**: clone will not be removed:\n   ```\n     $ sudo zfs destroy -R dblab_pool_replica\/clone_pre_20200611092119\n     cannot destroy 'dblab_pool_replica\/dblab_clone_6000': dataset is busy\n   ```\n- Restart sync instance even on failure the snapshot script\n\n\nAcceptance criteria\n===","state":"closed","created_at":1588939130536,"updated_at":1591881953351,"closed_at":1591881953112,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/125","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/125","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/125\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/125\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#125","relative":"#125","full":"postgres-ai\/database-lab#125"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":33914235,"iid":124,"project_id":14976868,"title":"Improve create_zfs_snapshot script","description":"Goal\n===\n- [x] Define variable `dockerImage`: `postgres:${pg_ver}-alpine`\n- [x] Better comments from `pgdata_subdir=${PGDATA_SUBDIR:-\"\"}`. Like: `export PGDATA_SUBDIR=\"\/<dir name, but not full path, and dont forget '\/'>\"`\n- [x] Set default value for `datastateat` if it's empty\n- [x] [Separate issue?] `docker run -it --rm  -v \/etc\/passwd:\/etc\/passwd:ro -e POSTGRES_PASSWORD=mysecretpassword -d postgres`\n\n```\n# diff create_zfs_snapshot.sh create_zfs_snapshot.sh.base \n32c32\n< container_pgdata_dir=\"\/var\/lib\/postgresql\/data\"\n---\n> container_pgdata_dir=\"\/var\/lib\/postgresql\/pgdata\"\n41c41\n< sudo_cmd=${SUDO_CMD:-\"sudo -u postgres\"} # Use `sudo -u postgres` for default environment\n---\n> sudo_cmd=${SUDO_CMD:-\"\"} # Use `sudo -u postgres` for default environment\n57,59d56\n< pg_ver_full=$(${sudo_cmd} cat ${clone_pgdata_dir}\/PG_VERSION)\n< \n< image_name=${IMAGE_NAME:-\"postgres:${pg_ver}-alpine\"}\n80,81d76\n< sed -i 's\/^\\\\(.*stats_temp_directory\\\\)\/# \\\\1\/' ${clone_pgdata_dir}\/postgresql.conf\n< sed -i 's\/^\\\\(.*include_dir\\\\)\/# \\\\1\/' ${clone_pgdata_dir}\/postgresql.conf\n130d124\n<   --volume \/etc\/passwd:\/etc\/passwd:ro \\\n131a126\n>   --user postgres \\\n133c128\n<   ${image_name}\n---\n>   postgres:${pg_ver}-alpine\n182c177\n<   sudo docker exec ${container_name} ${sudo_cmd} \/usr\/lib\/postgresql\/${pg_ver_full}\/bin\/pg_ctl -D ${container_pgdata_dir} -W promote\n---\n>   sudo docker exec ${container_name} pg_ctl -D ${container_pgdata_dir} -W promote\n```\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1588093323258,"updated_at":1613401371805,"closed_at":1588246342993,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":7,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/124","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":4},"weight":3,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/124","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/124\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/124\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#124","relative":"#124","full":"postgres-ai\/database-lab#124"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":33509919,"iid":122,"project_id":14976868,"title":"Incorrent clone size in metadata","description":"Goal\r\n===\r\n- CloneSize -> CloneDiffSize in API (console, database lab, update specification)\r\n- Are we sure that data size is correct?\r\n\r\nFollowing the tutorial, when you do `psql ... -c '\\l+'`, it shows correct size, as expected (\\~1.5 GiB), but when you do `dblab clone list`, it shows weird size something like ~200,000:\r\n\r\n```\r\n        \"metadata\": {\r\n            \"cloneSize\": 217088,\r\n            \"cloningTime\": 1.344037454,\r\n            \"maxIdleMinutes\": 20\r\n        },\r\n```\r\n\r\n`cloneSize` seems to be diff size, needs renaming\r\n\r\nCurrent values:\r\n- CLI: `\"cloneSize\": 218112`, \r\n- GUI: `Data size: 2.504 GiB`, \r\n- psql is correct: `1503 MB`\r\n\r\n```\r\n$ zfs list -po name,used,mountpoint,compressratio,available,type,origin,creation,referenced,logicalreferenced,logicalused,dblab:datastateat -S dblab:datastateat -S creation -t filesystem\r\nNAME                              USED  MOUNTPOINT                              RATIO        AVAIL  TYPE        ORIGIN             CREATION        REFER      LREFER       LUSED  DBLAB:DATASTATEAT\r\ndblab_pool\/dblab_clone_6000     440320  \/var\/lib\/dblab\/clones\/dblab_clone_6000   2.10  33532292608  filesystem  dblab_pool@initdb  1587380790  532452352  2688620544      592384  -\r\ndblab_pool                   533844480  \/var\/lib\/dblab\/data                      5.17  33532292608  filesystem  -                  1587325346  532447232  2688612864  2689524224  -\r\n```\r\n\r\n\r\nTODO \/ How to implement\r\n===\r\nFix clone size in CLI, GUI and Database Lab API response\r\n\r\nData size is correct:\r\n```\r\n\/var\/lib\/dblab\/data# du -h --apparent-size | sort -rh | head -10\r\n2.5G\t.\r\n1.5G\t.\/base\/16384\r\n1.5G\t.\/base\r\n1.1G\t.\/pg_wal\r\n7.8M\t.\/base\/13423\r\n7.7M\t.\/base\/13422\r\n7.7M\t.\/base\/1\r\n623K\t.\/global\r\n17K\t.\/pg_multixact\r\n14K\t.\/pg_stat\r\n```\r\n\r\n\r\nAcceptance criteria\r\n===","state":"closed","created_at":1587379587238,"updated_at":1588475732405,"closed_at":1587566807865,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["API","Bug","EE1","Flow::Review\/QA"],"milestone":{"id":1238394,"iid":28,"group_id":4236843,"title":"EE1","description":"The very first release of Postgres.ai Platform, CE\/EE versions","state":"active","created_at":"2020-04-13T14:35:08.330Z","updated_at":"2020-04-13T14:35:08.330Z","due_date":"2020-04-28","start_date":"2020-04-01","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/28"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/122","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/122","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/122\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/122\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#122","relative":"#122","full":"postgres-ai\/database-lab#122"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":33507178,"iid":121,"project_id":14976868,"title":"Define health check endpoint + add \"signature\" to 404 errors","description":"Goal\n===\nTo easily make sure that service is running and describe its status\n\nTODO \/ How to implement\n===\n- add `GET \/healthz` endpoint\n- log incoming requests to this endpoint\n- add version and build time to response\n\n\nAcceptance criteria\n===","state":"closed","created_at":1587376025518,"updated_at":1587985582903,"closed_at":1587985582660,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["API","EE1","Flow::Review\/QA"],"milestone":{"id":1238394,"iid":28,"group_id":4236843,"title":"EE1","description":"The very first release of Postgres.ai Platform, CE\/EE versions","state":"active","created_at":"2020-04-13T14:35:08.330Z","updated_at":"2020-04-13T14:35:08.330Z","due_date":"2020-04-28","start_date":"2020-04-01","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/28"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/121","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/121","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/121\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/121\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#121","relative":"#121","full":"postgres-ai\/database-lab#121"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":33506723,"iid":120,"project_id":14976868,"title":"Provide cross-platform CLI artifacts","description":"Goal\n===\nCurl installation of CLI tool wouldn't work on non-Linux systems. We need MacOS, Windows and FreeBSD versions as well.\n\nTODO \/ How to implement\n===\n- Build binaries for: linux, darwin, freebsd, windows in CI\n- Improve the cli_install script to automatic downloading CLI binaries\n\nMR: https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/merge_requests\/98\n\nAcceptance criteria\n===","state":"closed","created_at":1587375486204,"updated_at":1587956304573,"closed_at":1587956304468,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["CLI","EE1","Flow::Review\/QA"],"milestone":{"id":1238394,"iid":28,"group_id":4236843,"title":"EE1","description":"The very first release of Postgres.ai Platform, CE\/EE versions","state":"active","created_at":"2020-04-13T14:35:08.330Z","updated_at":"2020-04-13T14:35:08.330Z","due_date":"2020-04-28","start_date":"2020-04-01","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/28"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/120","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/120","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/120\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/120\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#120","relative":"#120","full":"postgres-ai\/database-lab#120"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":33505717,"iid":119,"project_id":14976868,"title":"Refactoring API response errors","description":"Goal\n===\nTo add more details, hints for errors and specify `INTERNAL_ERROR` (it should be used only for *unpredicted* errors).\nFor example, in GUI:\n```\nSomething went wrong. clone with such ID already exists \nFull response: \n{\"error\": {}, \n\"content\": {\"code\": \"INTERNAL_ERROR\", \"hint\": \"\", \"detail\": \"clone with such ID already exists\", \"message\": \"Internal server error.\"}, \n\"message\": \"Internal Server Error\", \n\"status_code\": 500}\n```\n\nTODO \/ How to implement\n===\n- check the relevance of API responses, adjust if needed\n- prepare list of code errors for the docs.\n\n\n\nAcceptance criteria\n===","state":"closed","created_at":1587374076455,"updated_at":1588159923616,"closed_at":1588159923559,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["API","EE1","Flow::Review\/QA"],"milestone":{"id":1238394,"iid":28,"group_id":4236843,"title":"EE1","description":"The very first release of Postgres.ai Platform, CE\/EE versions","state":"active","created_at":"2020-04-13T14:35:08.330Z","updated_at":"2020-04-13T14:35:08.330Z","due_date":"2020-04-28","start_date":"2020-04-01","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/28"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/119","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":6,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/119","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/119\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/119\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#119","relative":"#119","full":"postgres-ai\/database-lab#119"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":33505314,"iid":118,"project_id":14976868,"title":"Change the default port to 2345","description":"Goal\n===\nTo avoid possible conflicts, change the default server port of the Database Lab to 2345\n\nTODO \/ How to implement\n===\n\n- change the default value of server port: `3000` to `2345` for Database Lab instances\n- take into account the documentation\n\n\nAcceptance criteria\n===","state":"closed","created_at":1587373509241,"updated_at":1587568796466,"closed_at":1587568796393,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["EE1","Flow::Review\/QA"],"milestone":{"id":1238394,"iid":28,"group_id":4236843,"title":"EE1","description":"The very first release of Postgres.ai Platform, CE\/EE versions","state":"active","created_at":"2020-04-13T14:35:08.330Z","updated_at":"2020-04-13T14:35:08.330Z","due_date":"2020-04-28","start_date":"2020-04-01","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/28"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/118","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/118","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/118\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/118\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#118","relative":"#118","full":"postgres-ai\/database-lab#118"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":31922345,"iid":112,"project_id":14976868,"title":"Database Lab - Telemetry","description":"Goal\n===\n\nAs a Database Lab user I want to be able to collect performance metrics about a clone (e.g. for verifying of database migrations).\n\nImplement basic support with following artefacts collection:\n- [x] Telemetry collection duration;\n- [x] Locks monitoring.\n- [x] CI\/CD: how can we understand if it fails?\n\nTODO \/ How to implement\n===\nOriginal idea:\nNew client CLI commands:\n- `dblab telemetry start` - starts collection of metrics (deletes previously collected artefacts);\n- `dblab telemetry stop` - stops collection of metrics, interval services, executes additional scripts;\n- `dblab telemetry status` - gets short summary about migration status;\n- `dblab telemetry download` - downloads artefacts from Database Lab machine to a user's machine.\n\nImplement corresponding API handles.\n\nUsage:\n```\ndblab clone create ...\ndblab telemetry start\n\nsqitch  deploy\n\ndblab telemetry stop\ndblab telemetry download\n```\n\nSuggestions from standup call:\n- Use Prometheus format for export of time series data\n- `dblab clone observe -f CLONE_ID`\n- Use `start`, `stop` or not?\n\nImproved idea:\n- Collect telemetry and expose it in Prometheus format or use https:\/\/github.com\/wrouesnel\/postgres_exporter.\n- Collect telemetry all the time for all clones.\n- Use `dblab clone observe -f CLONE_ID` to retrieve current telemetry for the clone.\n- Use `dblab clone start-observe CLONE_ID` and `dblab clone stop-observe CLONE_ID` to get aggregated statistics about duration and locks and the end of a DB migration test.\n\nFastest implementation:\n- Execute monitoring queries from Database Lab CLI itself, do not change server or its API.\n- Use `dblab clone observe -f CLONE_ID` to start observing and `dblab clone stop-observe CLONE_ID` to stop observing and show aggregated metrics.\n\n\nAcceptance criteria\n===","state":"closed","created_at":1584024968567,"updated_at":1659058227845,"closed_at":1585786808324,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":[],"milestone":null,"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":9,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/112","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":3},"weight":13,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/112","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/112\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/112\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#112","relative":"#112","full":"postgres-ai\/database-lab#112"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":31576111,"iid":109,"project_id":14976868,"title":"Cannot delete a \"failed\" clone","description":"There is a clone:\n\n```\n$ dblab clone list\n...json\n    {\n        \"id\": \"joe-bpfrfqt4h85p27j6426g\",\n        \"snapshot\": {\n            \"id\": \"zpool\/clone_pre_20200304065541@snapshot_20200304065541\",\n            \"createdAt\": \"2020-03-04 06:58:12 UTC\",\n            \"dataStateAt\": \"2020-03-04 06:55:33 UTC\"\n        },\n        \"protected\": false,\n        \"deleteAt\": \"\",\n        \"createdAt\": \"2020-03-04 14:15:07 UTC\",\n        \"status\": {\n            \"code\": \"FATAL\",\n            \"message\": \"Cloning failure.\"\n        },\n        \"db\": {\n            \"connStr\": \"\",\n            \"host\": \"\",\n            \"port\": \"\",\n            \"username\": \"XXX\",\n            \"password\": \"\"\n        },\n        \"metadata\": null,\n        \"project\": \"\"\n    },\n...\n]\n```\n\nIf I try to delete it with `clone destroy` I get the following:\n\n```\n$ dblab clone destroy joe-bpfrfqt4h85p27j6426g\n2020\/03\/05 03:27:19 [DEBUG]  Database Lab request error: Code \"INTERNAL_ERROR\". Message: Internal server error. Detail: clone is not started yet Hint: \nurl: http:\/\/localhost:3000\/clone\/joe-bpfrfqt4h85p27j6426g\nrequest-dump: DELETE \/clone\/joe-bpfrfqt4h85p27j6426g HTTP\/1.1\nHost: localhost:3000\nVerification-Token: XXXX\n2020\/03\/05 03:27:19 failed to get response: Code \"INTERNAL_ERROR\". Message: Internal server error. Detail: clone is not started yet Hint: \n```\n\nThen I see that status is changed to DELETING and the clone eventually is deleted -- however, the initial response looks like a bug.\n\nUPDATE: after deletion attempt, the status indeed changed to DELETING, but it **has not been deleted** after 5 minutes of waiting:\n\n```\n    {\n        \"id\": \"joe-bpfrfqt4h85p27j6426g\",\n        \"snapshot\": {\n            \"id\": \"zpool\/clone_pre_20200304065541@snapshot_20200304065541\",\n            \"createdAt\": \"2020-03-04 06:58:12 UTC\",\n            \"dataStateAt\": \"2020-03-04 06:55:33 UTC\"\n        },\n        \"protected\": false,\n        \"deleteAt\": \"\",\n        \"createdAt\": \"2020-03-04 14:15:07 UTC\",\n        \"status\": {\n            \"code\": \"DELETING\",\n            \"message\": \"Clone is being deleted.\"\n        },\n        \"db\": {\n            \"connStr\": \"\",\n            \"host\": \"\",\n            \"port\": \"\",\n            \"username\": \"XXX\",\n            \"password\": \"\"\n        },\n        \"metadata\": null,\n        \"project\": \"\"\n    }\n```","state":"closed","created_at":1583379175892,"updated_at":1583402109417,"closed_at":1583402109302,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA","Size::S","m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/109","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/109","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/109\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/109\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#109","relative":"#109","full":"postgres-ai\/database-lab#109"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":31227667,"iid":107,"project_id":14976868,"title":"CLI: allow choosing snapshot when creating a clone","description":"Goal\n===\nAllow choosing snapshot when creating a clone  \n\nTODO \/ How to implement\n===\n\nEE feature?\n\ndblab clone create --snapshot-id\n\nAcceptance criteria\n===\n\nAs a user, I can choose a snapshot to work with.","state":"closed","created_at":1582615954363,"updated_at":1582769783473,"closed_at":1582735614323,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["CLI","Flow::Review\/QA","m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/107","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/107","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/107\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/107\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#107","relative":"#107","full":"postgres-ai\/database-lab#107"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":31131974,"iid":106,"project_id":14976868,"title":"LVM tutorial and ZFS tutorial updates","description":"Goal\n===\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1582298708152,"updated_at":1582899011677,"closed_at":1582899011392,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Docs","m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/106","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/106","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/106\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/106\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#106","relative":"#106","full":"postgres-ai\/database-lab#106"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30907882,"iid":105,"project_id":14976868,"title":"Extended Docker with Postgres (9.6, 10, 11, 12)","description":"Goal\n===\nProvide an \"extended\" Postgres docker image, with additional extensions -- for cases, when we don't want (don't have time) to work on a custom image.\n\nTODO \/ How to implement\n===\n\n- @anatolystansler please provide an example\n- CI\/CD pipelines have to rebuild it\n- it is published to our Docker Hub\n\nAcceptance criteria\n===\nAs a user, I can choose 1 from 3 options:\n\n- use minimalistic (official) image from Docker Hub\n- use \"extended\" image, with various additional extensions\n- build a custom image","state":"closed","created_at":1581925577823,"updated_at":1648055247621,"closed_at":1582120266451,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["CI\/CD","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/105","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":10,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/105","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/105\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/105\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#105","relative":"#105","full":"postgres-ai\/database-lab#105"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30718483,"iid":103,"project_id":14976868,"title":"Base of LVM provision mode","description":"Goal\n===\nBasic implementation of LVM provision mode.\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1581602905509,"updated_at":1582734950096,"closed_at":1582298669923,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/103","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/103","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/103\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/103\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#103","relative":"#103","full":"postgres-ai\/database-lab#103"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30691122,"iid":102,"project_id":14976868,"title":"Determine idle clones by connections and logs","description":"Goal\n===\nCurrently we detect idle clone only by statement logs. It means that we will destroy clones with long running queries, in order to enhance working with clone we should also take into account active connections.\n\nTODO \/ How to implement\n===\n```\nselect * from pg_stat_activity where query not like 'autovacuum: %' and pid <> pg_backend_pid()\n```\n\nAcceptance criteria\n===","state":"closed","created_at":1581538731893,"updated_at":1582210598050,"closed_at":1582210597995,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","enhancement","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/102","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/102","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/102\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/102\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#102","relative":"#102","full":"postgres-ai\/database-lab#102"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30658174,"iid":101,"project_id":14976868,"title":"Create a lightweight method for checking of a clones status","description":"Goal\n===\nIf we try to request `GET \/clone\/cloneID` during reset:\n```\n\terr = ZfsDestroyClone(j.runner, j.config.ModeZfs.ZfsPool, name)\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to destroy clone\")\n\t}\n\terr = ZfsCreateClone(j.runner, j.config.ModeZfs.ZfsPool, name, snapshotID,\n\t\tj.config.ModeZfs.MountDir, j.config.OSUsername)\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create a clone\")\n\t}\n```\n\nthere is a probability to receive a false-negative result\n```\n2020\/02\/12 02:46:38 [DEBUG]  Run(Local): \"zfs destroy -R zpool\/dblab_clone_6000\"\n2020\/02\/12 02:46:39 [INFO]   ->  GET \/clone\/joe-bp1l0454h85sr82l6fo0\n2020\/02\/12 02:46:39 [DEBUG]  Run(Local): \"zfs list -po name,used,mountpoint,compressratio,available,type,origin,creation,referenced,logicalreferenced,logicalused,dblab:datastateat -S dblab:datastateat -S creation -t filesystem -r zpool\"\n2020\/02\/12 02:46:39 [DEBUG]  Failed to get clone: failed to get a session state: cannot get session state: specified ZFS pool does not exist\n2020\/02\/12 02:46:39 [DEBUG]  Response: Code \"NOT_FOUND\". Message: Not found. Detail: Requested object does not exist. Hint: Specify your request.\n2020\/02\/12 02:46:39 [DEBUG]  Not found\n2020\/02\/12 02:46:39 [DEBUG]  Run(Local): \"zfs clone -o mountpoint=\/var\/lib\/dblab\/clones\/dblab_clone_6000 zpool\/clone_pre_20200211092040@snapshot_20200211092040 zpool\/dblab_clone_6000 && chown -R root \/var\/lib\/dblab\/clones\/dblab_clone_6000\"\n2020\/02\/12 02:46:40 [DEBUG]  Run(Local): output \"\"\n2020\/02\/12 02:46:40 [DEBUG]  Starting Postgres...\n```\n\n\nTODO \/ How to implement\n===\n- Create a new method for retrieving a clone status without a session state.\n- Use this method in API for reset and delete methods\n\nOR Alternative: \n\n- skip the session state error, use default clone size\n\n\nAcceptance criteria\n===","state":"closed","created_at":1581485091746,"updated_at":1581516594791,"closed_at":1581516594734,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["API","Bug","Flow::Review\/QA","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/101","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/101","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/101\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/101\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#101","relative":"#101","full":"postgres-ai\/database-lab#101"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30593117,"iid":94,"project_id":14976868,"title":"Data retrieval - RDS","description":"Goal\n===\n\nTODO \/ How to implement\n===\nWork with Amazon API\n\nConfiguration:\n- Amazon credentials\n- Instance IDs\n\nLogic:\nRetrieve instance connection params and pass it to data retrieval pipeline.\n\nBlocked by #93 \n\nAcceptance criteria\n===","state":"closed","created_at":1581351527415,"updated_at":1596550429641,"closed_at":1596550429596,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Flow::Ready for Sprint","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/94","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/94","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/94\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/94\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#94","relative":"#94","full":"postgres-ai\/database-lab#94"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30592283,"iid":93,"project_id":14976868,"title":"Automated data retrieval (declarative database lab initialization)","description":"Goal\n===\n\n```plantuml\n\nframe \"Validation\" {\n [Config]\n}\n\ncloud \"Infrastructure\\n(optional)\\n\" {\ncomponent Provision [\n**Provision machine**\n\n- Create an instance\n- Configure environment\n- Pre-install software\n- Set up extensions\n]\n}\n\n  component Initialize[\n**Initialize**\n\n  - physical copying \n  - logical copying\n\n  - masking ?\n  - cleaning data\n  - configuration\n  \n  - WAL shipping (bg)\n  - streaming replication (bg)\n  - logical replication (bg)\n]\n\nframe \"Snapshotting\" {\n  component Snapshot[\n**Snapshots**\n\n- masking\n- extra data manipulation \n- snapshotting\n]\n\n\n[Config] --> [Provision]: run provisioning\n[Provision] -> [Initialize] : start import\n[Initialize] --> [Snapshot] : prepare a snapshot\n[Snapshot] -> [Snapshot]: schedule\/retention \\nmanagement\n\n```\n\nTODO \/ How to implement\n===\n\n**Config example**\n```yaml\nretrieval:\n  stages:\n    - initialize\n\n  spec:\n    initialize:\n      jobs:\n#        - name: logical-restore\n#          options:\n#            dumpFile: \/tmp\/db.dump\n#            forceInit: false\n#            dbName: test\n#            partial:\n#              tables:\n#                - test\n        - name: physical-restore\n          options:\n            tool: walg\n            dockerImage: \"postgresai\/sync-instance:12\"\n            envs:\n              WALG_GS_PREFIX: \"gs:\/\/{BUCKET}\/{SCOPE}\"\n            walg:\n              storage: gcs\n              backupName: LATEST\n              credentialsFile: \/tmp\/sa.json # optional\n      \n```\n\n-----\n---- OLD\nImplementation:\n- [ ] Stage interface (data retrieval, promotion, mask, etc) 5h\n  - Clones\/snapshot usage\n  - Docker container provision\n  - Each stage running in separate container\n\n- [ ] Pipeline:\n  - [dump\/restore | WAL-G | barman -> PGDATA] -> [PGDATA master\/replica -> master -> remove PII -> snapshot]\n  - [import] -> [promote] -> [mask]\n\n  - Stage 1: [import] \n    - Configuration 2h\n      - snapshot TTL\n      - mode\n      - dockerImage\n      - dump\/restore\n        - connection params\n        - plain-text, directory, custom (-Fc -Fd)\n    - Experiments\/Preparations 6h\n      - Massive diff (!)\n        - Delete previous clone snapshots\n    - Logic 6h\n      - dump\/restore\n      - set statement timeout to 0\n  - Stage 2: [promote]\n    - Can be optional. As we want to give SRE an ability to manually promote their clone.\n    - Configuration 1h\n      - dockerImage\n    - Logic 6h\n  - Stage 3: [mask] OUT-OF-SCOPE \n\n- [ ] Pipeline scheduling (run data retrieval on interval) 4h\n\nDocumentation:\n- [ ] Notify users about autovacuum pause 1h\n- [ ] Pipelines docs 6h\n  - Configs\n  - How it works\n  - How to extend\n\n\nAcceptance criteria\n===","state":"closed","created_at":1581350177520,"updated_at":1597200773937,"closed_at":1594701766748,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/93","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":5,"completed_count":0},"weight":40,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/93","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/93\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/93\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#93","relative":"#93","full":"postgres-ai\/database-lab#93"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30562668,"iid":91,"project_id":14976868,"title":"Choose the latest snapshot by default on the creation of a new clone","description":"Goal\n===\nThere are 3 snapshots:\n```\n$ .\/bin\/dblab snapshot list\n[\n    {\n        \"id\": \"zpool\/clone_pre_20200210022148@snapshot_20200210022148\",\n        \"createdAt\": \"2020-02-10 02:23:26 UTC\",\n        \"dataStateAt\": \"2020-02-10 02:21:43 UTC\"\n    },\n    {\n        \"id\": \"zpool\/clone_pre_20200210021941@snapshot_20200210021941\",\n        \"createdAt\": \"2020-02-10 02:21:34 UTC\",\n        \"dataStateAt\": \"2020-02-10 02:19:33 UTC\"\n    },\n    {\n        \"id\": \"zpool\/clone_pre_20200207071546@snapshot_20200207071546\",\n        \"createdAt\": \"2020-02-07 07:16:57 UTC\",\n        \"dataStateAt\": \"2020-02-05 07:53:51 UTC\"\n    }\n]\n```\nThe latest is created at `2020-02-10 02:21:43 UTC`\nHowever, we get `\"dataStateAt\": \"2020-02-05 07:53:51 UTC\"` for the new clone:\n```\n$ .\/bin\/dblab clone list\n[\n    {\n        \"id\": \"joe\",\n        \"snapshot\": {\n            \"id\": \"zpool\/clone_pre_20200207071546@snapshot_20200207071546\",\n            \"createdAt\": \"2020-02-07 07:16:57 UTC\",\n            \"dataStateAt\": \"2020-02-05 07:53:51 UTC\"\n        },\n        \"protected\": false,\n        \"deleteAt\": \"\",\n        \"createdAt\": \"2020-02-10 02:24:53 UTC\",\n        \"status\": {\n            \"code\": \"OK\",\n            \"message\": \"Clone is ready to accept Postgres connections.\"\n        },\n      ...\n    }\n]\n```\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1581313727278,"updated_at":1648055247641,"closed_at":1581594427450,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":4,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/91","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/91","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/91\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/91\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#91","relative":"#91","full":"postgres-ai\/database-lab#91"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30553629,"iid":89,"project_id":14976868,"title":"Rich configuration options","description":"Goal\n===\nImprove configuration options for Postgres (and other engines in the future). \n\nCurrently we support configuration of two files: `pg_hba.conf` and `postgresql.conf`. `pg_hba.conf` in PGDATA being substituted with the the presented file. And in case of `postgresql.conf` lines being appended to the end of files.\n\nDiscuss with @NikolayS \n\nTODO \/ How to implement\n===\n```yaml\nfiles:\n  - path: pg_hba.conf\n    replaceWithPath: .\/configs\/postgres\/pg_hba.conf \n  - path: postgresql.conf\n    append:\n      - listen_addresses = '*'\n      - log_destination = 'stderr'\n    remove:\n      - logging_collector\n      - data_directory\n    comment:\n      - ssl\n    commentWith: \"#\"\n  - path: standby.signal\n    delete: true\n\n# Move to separate issue. Would be nice to have an option to configure such configuration substitute logic and configure custom script that will be launched at different provision stages.\n# Requires discussion.\nscripts:\n  - runner: pg\n    script:\n      - select 1;\n      - select 2;\n  - runner: bash\n    script:\n      - chown user file.txt\n  - runner: bash\n    fromFile: .\/scripts\/prepareClone.sh\n```\n\nAcceptance criteria\n===","state":"closed","created_at":1581272429720,"updated_at":1645559618890,"closed_at":1596550446640,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Details needed","Flow::Ready for Sprint","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":null,"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/89","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/89","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/89\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/89\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#89","relative":"#89","full":"postgres-ai\/database-lab#89"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30524872,"iid":88,"project_id":14976868,"title":"LVM snapshots\/clone as an alternative to ZFS","description":"Goal\n===\nSometimes, ZFS cannot be used. In this case, let's provide an alternative way: LVM. \n\nCons:\n\n- We expect that this method will be less performant (especially, for large number of snapshots and\/or having old snapshots with continuously working \"sync\" Postgres instance).\n\nPros:\n- Some people cannot use ZFS so they will be able to choose LVM\n- In the case of LVM, the filesystem is \"usual\", ext4 or xfs.\n- Might be the only in managed Kubernetes setups.\n\nTODO \/ How to implement\n===\n\nExample:\n\n```bash\nsudo su -\nmkdir \/opt\/{one,two,test}\npvcreate \/dev\/nvme0n1\nvgcreate testgroup \/dev\/nvme0n1\npvscan\nvgs\nlvmdiskscan\nlvcreate -L 29G -n test testgroup\nmount \/dev\/testgroup\/test \/opt\/test\necho 12345 > \/opt\/test\/xoxo\nlvcreate -L 12m  -s \/dev\/testgroup\/test -n test_snap1\nmount \/dev\/testgroup\/test_snap1 \/opt\/one\ncat \/opt\/one\/xoxo\necho 11111 > \/opt\/one\/xoxo\ndf -hT\ncat \/opt\/one\/xoxo\ncat \/opt\/test\/xoxo\n```\n\n```bash\n# Create LV.\nsudo su -\nmkdir \/var\/lib\/dblab-lvm\/clones\/{1,2,3,4}\npvcreate \/dev\/disk\/by-id\/google-dblab-dev1-lvm1\nvgcreate testgroup \/dev\/disk\/by-id\/google-dblab-dev1-lvm1\nlvcreate -l 50%FREE -n test testgroup\nmkfs.ext4 \/dev\/testgroup\/test\n\n# Mount to initial dir.\nmount \/dev\/testgroup\/test \/var\/lib\/dblab-lvm\/clones\/1\necho 12345 > \/var\/lib\/dblab-lvm\/clones\/1\/xoxo\n\n# Create snapshot.\nlvcreate -l 10%FREE -s \/dev\/testgroup\/test -n test_snap1\nmount \/dev\/testgroup\/test_snap1 \/var\/lib\/dblab-lvm\/clones\/2\ncat \/var\/lib\/dblab-lvm\/clones\/2\/xoxo\necho 11111 > \/var\/lib\/dblab-lvm\/clones\/2\/xoxo\n\ndf -hT\n\ncat \/var\/lib\/dblab-lvm\/clones\/1\/xoxo\ncat \/var\/lib\/dblab-lvm\/clones\/2\/xoxo\n```\n\n```bash\n# Remove LV.\numount \/dev\/testgroup\/test\nlvremove \/dev\/testgroup\/test\n```\n\nExtend\/reduce:\n```bash\nlvreduce -L -2.5G -r \/dev\/vg00\/vol_projects\nlvextend -l +100%FREE -r \/dev\/vg00\/vol_backups\n```\n\nhttps:\/\/www.tecmint.com\/manage-and-create-lvm-parition-using-vgcreate-lvcreate-and-lvextend\/\n\nOne more example: http:\/\/www.voleg.info\/lvm2-clone-logical-volume.html\n\nGood reference for lvs: https:\/\/www.systutorials.com\/docs\/linux\/man\/8-lvs\/\n\n```\nlvs --reportformat json --units b\n```\nAbout snapshot oversize:\n![Screenshot_2020-02-18_at_23.57.29](\/uploads\/44d9d9cbaa2c1d016440eac28c6a6977\/Screenshot_2020-02-18_at_23.57.29.png)\nhttps:\/\/www.golinuxhub.com\/2017\/09\/understanding-lvm-snapshots-create.html\n\n![Screenshot_2020-02-18_at_23.59.11](\/uploads\/8b37629bd942aa6f6c0b94ec8387899c\/Screenshot_2020-02-18_at_23.59.11.png)\n\nhttps:\/\/serverfault.com\/questions\/41020\/is-this-how-lvm-snapshots-work\n\nThin-clones on LVM (using dd for snapshots mostly suggested):\n- http:\/\/www.andybotting.com\/how-do-you-clone-an-lvm-partition\n- https:\/\/serverfault.com\/questions\/702971\/cloning-lvm-partitions\n- http:\/\/www.voleg.info\/lvm2-clone-logical-volume.html\n\nTODO:\n- [ ] Separate ZFS \"lib\" package\n- [ ] Docker container volumes works fine with LVM (?)\n- [ ] Determine volume size. It's required option to create a LVM clone.\n- [ ] Clone removal policies (?) (e.g. can we stop removal of clone on volume size exceed?)\n\nDepends on #92 \n#95 #96 #97 #98\n\nAcceptance criteria\n===\n\nAs a user, I can choose a method for thin cloning, ZFS (default) or LVM.\n\nAs a developer, I know that the abstraction interface\/layer is mature and when needed, I can implement my own thin cloning method.","state":"closed","created_at":1581115005672,"updated_at":1582734949332,"closed_at":1582734949254,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Flow::In Progress","List of tasks","m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":2,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/88","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/88","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/88\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/88\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#88","relative":"#88","full":"postgres-ai\/database-lab#88"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30524794,"iid":87,"project_id":14976868,"title":"Client CLI: \"--insecure\" in configuration","description":"Goal\n===\nCurrently, if I need to work with a self-signed certificate, I need to use `--insecure` option every time. It's a little bit inconvenient -- I would prefer to configure it once.\n\nTODO \/ How to implement\n===\n\nAllow specifying \"insecure\" flag in the configuration for a particular Database Lab instance.\n\n\nAcceptance criteria\n===\n\nAs a user, I configure the ability to work with a self-signed certificate just once (for each Database Lab instance) and then I don't need to use `--insecure` in CLI at all.","state":"closed","created_at":1581114658023,"updated_at":1581667427164,"closed_at":1581520612223,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["CLI","Flow::Review\/QA","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/87","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/87","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/87\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/87\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#87","relative":"#87","full":"postgres-ai\/database-lab#87"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30516591,"iid":86,"project_id":14976868,"title":"Fix data race","description":"Goal\n===\nFix data race on baseCloning: `clones  map[string]*CloneWrapper`\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1581091706788,"updated_at":1581404696035,"closed_at":1581404695993,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","Flow::Review\/QA","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":3,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/86","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/86","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/86\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/86\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#86","relative":"#86","full":"postgres-ai\/database-lab#86"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30480515,"iid":85,"project_id":14976868,"title":"Explain how to extend Postgres containers","description":"Goal\n===\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1581010741681,"updated_at":1645140023131,"closed_at":1582617710591,"closed_by":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"labels":["Docs","Flow::Backlog","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/85","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/85","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/85\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/85\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#85","relative":"#85","full":"postgres-ai\/database-lab#85"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30479162,"iid":84,"project_id":14976868,"title":"Publish artifacts to external storage","description":"Goal\n===\nLatest artifacts might be unaccessible on GitLab during pipelines. Also, currently for client CLI we use latest binaries from master which can be unstable. We should upload only stable releases to our server, not GitLab, to improve reliability.\n\nTODO \/ How to implement\n===\n\nUse GCS (Google buckets):\n- [x] Use private bucket for temprorary CI build and transfer of artifacts between stage\n- [x] Use public bucket for storage of the latest release binaries for CLI download\n\nPrevious ideas (Nexus, not actual)\n===\n<s>We can use Nexus: https:\/\/www.sonatype.com\/nexus-repository-oss<\/s>\n\n- OSS\n\n- Self-hosted\n\n- Supports different formats:\n  - Raw files (suitable for binary artifacts): https:\/\/help.sonatype.com\/repomanager3\/formats\/raw-repositories\n    \n    ```\n    curl -v -u ${NEXUS_USER}:${NEXUS_PWD} --upload-file dblab ${NEXUS_URL}\/repository\/dblab-cli\/${TAG}\/dblab\n    wget -O dblab ${NEXUS_URL}\/repository\/dblab-cli\/{$VERSION}\/${TAG}\/dblab\n\n    For example: https:\/\/{NEXUS_URL}\/repository\/dblabcli\/ce\/0.2.3\/dblab\n    ```\n\n  - Docker images: https:\/\/help.sonatype.com\/repomanager3\/formats\/docker-registry.\n    ```\n    docker push <nexus-hostname>:<repository-port>\/<image>:<tag>\n    docker pull <nexus-hostname>:<repository-port>\/<image>:<tag>\n    ```\n\n- Flexible user access(based on priveledges and roles) with an ability to grant and revoke permissions: https:\/\/help.sonatype.com\/repomanager3\/security\n\n- Supports S3-compartible blob stores: https:\/\/help.sonatype.com\/repomanager3\/high-availability\/configuring-blob-stores#ConfiguringBlobStores-AWSSimpleStorageService(S3)\n\nBut it could be too difficult and long to implement that. Try to upload artifacts to external storage.","state":"closed","created_at":1581008467390,"updated_at":1645114185047,"closed_at":1587657038170,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["CI\/CD","EE1","Flow::Review\/QA"],"milestone":{"id":1238394,"iid":28,"group_id":4236843,"title":"EE1","description":"The very first release of Postgres.ai Platform, CE\/EE versions","state":"active","created_at":"2020-04-13T14:35:08.330Z","updated_at":"2020-04-13T14:35:08.330Z","due_date":"2020-04-28","start_date":"2020-04-01","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/28"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/84","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":5,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/84","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/84\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/84\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#84","relative":"#84","full":"postgres-ai\/database-lab#84"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30479150,"iid":83,"project_id":14976868,"title":"Do not update \"latest\" tag on Docker Hub on \"rc\" git tags","description":"Goal\n===\n\nTODO \/ How to implement\n===\nDon't update tags in format \"v0.2.2\".\n\nAcceptance criteria\n===","state":"closed","created_at":1581008444336,"updated_at":1581591110918,"closed_at":1581591110867,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["CI\/CD","Flow::Backlog","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/83","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/83","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/83\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/83\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#83","relative":"#83","full":"postgres-ai\/database-lab#83"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30404511,"iid":82,"project_id":14976868,"title":"Customize postgres user for initial unix socket connection","description":"Goal\n===\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1580893027961,"updated_at":1648055247598,"closed_at":1580996605010,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Flow::In Progress","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/82","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/82","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/82\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/82\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#82","relative":"#82","full":"postgres-ai\/database-lab#82"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30276816,"iid":76,"project_id":14976868,"title":"create a new struct to update clones - CloneUpdateRequest","description":"Goal\n===\nIt allows to avoid extra checks on updates\n\nTODO \/ How to implement\n===\n```\n\/\/ CloneUpdateRequest defines a struct for clone updating.\ntype CloneUpdateRequest struct {\n    Protected bool   `json:\"protected\"`\n}\n```\n\n\n\nAcceptance criteria\n===","state":"closed","created_at":1580696031637,"updated_at":1582735759824,"closed_at":1582735759544,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["API","m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/76","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/76","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/76\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/76\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#76","relative":"#76","full":"postgres-ai\/database-lab#76"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30174581,"iid":75,"project_id":14976868,"title":"Ask to give a star in README, in the documentation, and in CLI (init, help)","description":"Goal\n===\nCollect more gitlab stars.\n\nTODO \/ How to implement\n===\nAsk to give a star\n\n- [x] in README\n- [ ] in the documentation\n- [x] in CLI (init, help)\n\nAcceptance criteria\n===\nBasic places are covered with our ask to give a star, and we are collecting stars constantly.","state":"closed","created_at":1580528464885,"updated_at":1580884673167,"closed_at":1580884659659,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Docs","Flow::In Progress","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":null,"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/75","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":3,"completed_count":2},"weight":1,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/75","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/75\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/75\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#75","relative":"#75","full":"postgres-ai\/database-lab#75"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30154586,"iid":74,"project_id":14976868,"title":"Build and push Docker images","description":"Goal\n===\nBuild and push Docker images of Database Lab server and CLI tool to Docker Hub on release tag.\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1580479493499,"updated_at":1580918448740,"closed_at":1580918448614,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["CI\/CD","Flow::Review\/QA","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":null,"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/74","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":10,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/74","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/74\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/74\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#74","relative":"#74","full":"postgres-ai\/database-lab#74"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":30144055,"iid":73,"project_id":14976868,"title":"Provide clone metadata","description":"Goal\n===\nFor idle management and clone describing we have to provide an idle timeout for created clones in API response.\n\nTODO \/ How to implement\n===\nAdd a new field `Metadata` in the `Clone` struct\n\nAcceptance criteria\n===","state":"closed","created_at":1580466708492,"updated_at":1580800753772,"closed_at":1580796904667,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["API","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/73","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/73","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/73\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/73\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#73","relative":"#73","full":"postgres-ai\/database-lab#73"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29986436,"iid":70,"project_id":14976868,"title":"Use Docker containers in create snapshot script","description":"Goal\n===\nRemove Postgres dependency.\n\nAdditionally: get rid of:\n```\n2020-01-13 11:53:51.405 UTC [9702]: [1-1] db=,user= (,) FATAL:  could not connect to the primary server: could not connect to server: No such file or directory\n                Is the server running locally and accepting\n                connections on Unix domain socket \"\/var\/run\/postgresql\/.s.PGSQL.5432\"?\n```\n\nTODO \/ How to implement\n===\n\n- [x] Use DBLab container \n- [x] Script remains in bash\n\nAcceptance criteria\n===\n\nAs a user I don't need git clone, and I use only docker exec to create a new snapshot.","state":"closed","created_at":1580139877692,"updated_at":1589367841243,"closed_at":1587985518792,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["EE1","Flow::Review\/QA"],"milestone":{"id":1238394,"iid":28,"group_id":4236843,"title":"EE1","description":"The very first release of Postgres.ai Platform, CE\/EE versions","state":"active","created_at":"2020-04-13T14:35:08.330Z","updated_at":"2020-04-13T14:35:08.330Z","due_date":"2020-04-28","start_date":"2020-04-01","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/28"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":2,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/70","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":6,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/70","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/70\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/70\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#70","relative":"#70","full":"postgres-ai\/database-lab#70"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29986192,"iid":69,"project_id":14976868,"title":"Manage only Database Lab containers","description":"Goal\n===\nCurrently Database Lab stops and removes all Docker containers on start. We need to label our containers and work only with them to not abuse user's machine.\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1580139638642,"updated_at":1580481300198,"closed_at":1580378616496,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Bug","Flow::Review\/QA"],"milestone":null,"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/69","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/69","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/69\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/69\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#69","relative":"#69","full":"postgres-ai\/database-lab#69"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29960073,"iid":67,"project_id":14976868,"title":"Clear CLI output","description":"Goal\n===\nClear and clarify CLI output\n\nTODO \/ How to implement\n===\nThe task might be more complicated than expected. Probably we have to use a custom type of errors and redeclare the default error writer. Need investigation to clarify details.\n\nIn addition, it worth to make sure that the standard flags check will not be missed after that.\n\n- [x] add the `ERROR` label before an error message\n- [x] change a CLI help message\n\n\nAcceptance criteria\n===\n\n```\n$ ~\/database-lab\/bin\/dblab init --url http:\/\/localhost:3000 --token some_token --environment_id dev\n2020\/01\/26 23:19:46 ERROR: Environment \"dev\" is already initialized.\n```","state":"closed","created_at":1580093866097,"updated_at":1580831096402,"closed_at":1580830881130,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["CLI","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":2,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/67","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":2,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/67","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/67\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/67\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#67","relative":"#67","full":"postgres-ai\/database-lab#67"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29920275,"iid":64,"project_id":14976868,"title":"SDK: Add synchronous clone methods","description":"Goal\n===\nMethods: \n- Create\n- Reset\n- Delete\n\n\nTODO \/ How to implement\n===\nAdd to CLI and SDK\nAdd a flag to make requests asynchronous\n\nAcceptance criteria\n===\nDocs?","state":"closed","created_at":1579880842542,"updated_at":1580485643596,"closed_at":1580279819716,"closed_by":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"labels":["m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/64","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/64","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/64\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/64\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#64","relative":"#64","full":"postgres-ai\/database-lab#64"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29885801,"iid":63,"project_id":14976868,"title":"Show \"unchanged\" message","description":"Goal\n===\n```\n \u276f .\/bin\/dblab config update dev1\nThe \"dev1\" environment is successfully updated.\n```\n\nIn this case show:\n```\nConfig unchanged. Set options to update.\n```\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1579789747347,"updated_at":1580485661416,"closed_at":1580382511105,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["CLI","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/63","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/63","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/63\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/63\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#63","relative":"#63","full":"postgres-ai\/database-lab#63"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29774736,"iid":58,"project_id":14976868,"title":"CI for API reference deployment","description":"Add API references to the docs.\n\n@akartasov do you remember in which MR you've described CLI commands?\n\n#10 We can use Swagger as initial API reference\n\nGenerate mock from Swagger specification? Use plugin to disable \"try out\" functionality (https:\/\/github.com\/swagger-api\/swagger-ui\/issues\/3725)?\n\nDeploy from database-lab or load config from gitlab.com?","state":"closed","created_at":1579540701600,"updated_at":1581593294866,"closed_at":1581591111028,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["CI\/CD","Docs","m3"],"milestone":{"id":1148080,"iid":27,"group_id":4236843,"title":"m3","description":"","state":"active","created_at":"2020-02-06T16:23:20.028Z","updated_at":"2020-02-24T16:14:37.986Z","due_date":"2020-02-20","start_date":"2020-02-10","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/27"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":3,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/58","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":2,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/58","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/58\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/58\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#58","relative":"#58","full":"postgres-ai\/database-lab#58"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29752301,"iid":56,"project_id":14976868,"title":"Change the verification token flag for a Database Lab server","description":"Goal\n===\n`-v` is usually \"print version\"\nhttps:\/\/gitlab.com\/postgres-ai\/database-lab\/merge_requests\/27#note_273789327\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1579507630122,"updated_at":1580832097976,"closed_at":1580832097927,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Flow::Review\/QA","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/56","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/56","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/56\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/56\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#56","relative":"#56","full":"postgres-ai\/database-lab#56"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29576214,"iid":53,"project_id":14976868,"title":"Database Lab CLI configuration","description":"Goal\n===\nSingle CLI can control multiple Database Lab instances\n\nTODO \/ How to implement\n===\nStore CLI configs in the user's home directory.\n\nAcceptance criteria\n===\n```\n\/\/ CLI management\ndblab config create ENVIRONMENT_ID\ndblab config update ENVIRONMENT_ID\ndblab config status ENVIRONMENT_ID\ndblab config list\ndblab config switch ENVIRONMENT_ID\ndblab config remove ENVIRONMENT_ID\n\n\/\/ Getting started\ndblab init\n```","state":"closed","created_at":1578990024894,"updated_at":1579616779847,"closed_at":1579511311530,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":[],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/53","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":8,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/53","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/53\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/53\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#53","relative":"#53","full":"postgres-ai\/database-lab#53"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29576185,"iid":52,"project_id":14976868,"title":"Design Database Lab CLI","description":"Goal\n===\nCreate a CLI tool for using Database Lab API.\n\nTODO \/ How to implement\n===\nSuggest the next design of the Database Lab CLI:\n\n```\n\/\/ Clone management\ndblab clone list\ndblab clone create\ndblab clone destroy CLONE_ID\ndblab clone reset CLONE_ID\ndblab clone get CLONE_ID\n\n\/\/ Instance management\ndblab instantce status\n\n\/\/ Snapshot management\ndblab snapshot list\n\n\/\/ CLI management\ndblab config create ENVIRONMENT_ID\ndblab config update ENVIRONMENT_ID\ndblab config view [ENVIRONMENT_ID]\ndblab config list\ndblab config switch ENVIRONMENT_ID\ndblab config remove ENVIRONMENT_ID\n\n\/\/ Getting started\ndblab init\n\n```\n\nMoreover, we are going to change a compiled filename of the Database Lab server from `dblab` to `dblab-server`.\nSo, the `dblab` name will become free and will be used for the CLI binary.\n\n\nAcceptance criteria\n===","state":"closed","created_at":1578989972432,"updated_at":1579616779892,"closed_at":1579511307819,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":[],"milestone":{"id":1125768,"iid":25,"group_id":4236843,"title":"Sprint 14.01.20-27.01.20","description":"","state":"closed","created_at":"2020-01-16T15:53:36.464Z","updated_at":"2020-02-06T20:00:08.481Z","due_date":"2020-01-27","start_date":"2020-01-14","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/25"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/52","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":12,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/52","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/52\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/52\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#52","relative":"#52","full":"postgres-ai\/database-lab#52"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29576151,"iid":51,"project_id":14976868,"title":"Database Lab API SDK","description":"Goal\n===\nCreate a client to make HTTP requests to Database Lab API\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===\nThere is an SDK for following methods:\n* get a clone list\n* create a new clone\n* destroy a clone\n* get an instance status\n* get a snapshot list","state":"closed","created_at":1578989892481,"updated_at":1579616779932,"closed_at":1579187956286,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":[],"milestone":{"id":1125768,"iid":25,"group_id":4236843,"title":"Sprint 14.01.20-27.01.20","description":"","state":"closed","created_at":"2020-01-16T15:53:36.464Z","updated_at":"2020-02-06T20:00:08.481Z","due_date":"2020-01-27","start_date":"2020-01-14","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/25"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/51","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":6,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/51","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/51\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/51\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#51","relative":"#51","full":"postgres-ai\/database-lab#51"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29549417,"iid":48,"project_id":14976868,"title":"Do not use psql in Go, connect to Postgres using a library for Postgres.","description":"Goal\n===\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1578931283938,"updated_at":1579190160071,"closed_at":1579114002636,"closed_by":{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"},"labels":[],"milestone":{"id":1125768,"iid":25,"group_id":4236843,"title":"Sprint 14.01.20-27.01.20","description":"","state":"closed","created_at":"2020-01-16T15:53:36.464Z","updated_at":"2020-02-06T20:00:08.481Z","due_date":"2020-01-27","start_date":"2020-01-14","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/25"},"assignees":[{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":2404297,"username":"dmius","name":"Dmitry","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2404297\/avatar.png","web_url":"https:\/\/gitlab.com\/dmius"},"user_notes_count":1,"merge_requests_count":0,"upvotes":1,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/48","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":5,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/48","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/48\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/48\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#48","relative":"#48","full":"postgres-ai\/database-lab#48"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29541140,"iid":47,"project_id":14976868,"title":"\"No standby\" case during snapshot creation","description":"Goal\n===\n```\n2020-01-13 11:53:51.405 UTC [9702]: [1-1] db=,user= (,) FATAL:  could not connect to the primary server: could not connect to server: No such file or directory\n                Is the server running locally and accepting\n                connections on Unix domain socket \"\/var\/run\/postgresql\/.s.PGSQL.5432\"?\n```\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1578917689665,"updated_at":1587394057989,"closed_at":1587394057942,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":["Bug","EE1","Flow::Backlog"],"milestone":{"id":1238394,"iid":28,"group_id":4236843,"title":"EE1","description":"The very first release of Postgres.ai Platform, CE\/EE versions","state":"active","created_at":"2020-04-13T14:35:08.330Z","updated_at":"2020-04-13T14:35:08.330Z","due_date":"2020-04-28","start_date":"2020-04-01","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/28"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":2,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/47","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/47","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/47\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/47\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#47","relative":"#47","full":"postgres-ai\/database-lab#47"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29529332,"iid":43,"project_id":14976868,"title":"Run Postgres servers in containers","description":"Goal\n===\nStart using containers to run Postgres, it will help to manage clones better:\n- the same paths internally (logs, etc)\n- easier to stop\/start\n- permissions\n- binaries, libraries -- unified paths and permissions\n\n\nAdditionally, the ability to extend Postgres setups: we provide basic container images for 9.6, 10, 11, 12, but we are going to allow choosing an alternative docker image, where the user can use some custom image, with custom extensions, etc.\n\nTODO \/ How to implement\n===\ndesign stage, details are needed + discussion\n\nImages have to be minimalistic.\n\nAre we going to use Ubuntu 18.04? Or smaller templates?\n\nAre we going to use Docker? Or podman?\n\nAcceptance criteria\n===\nAs a user, I can extend the default Dockerfile for my Postgres version, add additional libraries\/extensions tools, FTS dictionaries, etc, and then use it for clones.","state":"closed","created_at":1578897849850,"updated_at":1579675134263,"closed_at":1579614361896,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Details needed","Flow::In Progress"],"milestone":{"id":1125768,"iid":25,"group_id":4236843,"title":"Sprint 14.01.20-27.01.20","description":"","state":"closed","created_at":"2020-01-16T15:53:36.464Z","updated_at":"2020-02-06T20:00:08.481Z","due_date":"2020-01-27","start_date":"2020-01-14","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/25"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":7,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/43","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":12,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/43","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/43\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/43\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#43","relative":"#43","full":"postgres-ai\/database-lab#43"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29391172,"iid":38,"project_id":14976868,"title":"Check suppressed linter warnings","description":"Goal\n===\nAfter a while check suppressed warnings for linters such as:\n* golint\n* gosec\n* gocritic\n* goimports\n* gonmd\n* revive\n* stylecheck\n* wsl\n\nAlso:\n- remove the `new-from-rev` configuration option from `.golangci.yml`\n- fix linter warnings\n\nAcceptance criteria\n===\nThere are no linter exclusions in configs.\nThere are no warnings after the check is running.","state":"closed","created_at":1578457722516,"updated_at":1643593699699,"closed_at":1638175767343,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Flow::Review\/QA","Starter"],"milestone":null,"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/38","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":4,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/38","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/38\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/38\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#38","relative":"#38","full":"postgres-ai\/database-lab#38"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29386359,"iid":37,"project_id":14976868,"title":"Instance control CLI","description":"Goal\n===\nCreate console application to control Database Lab instance with REST API, like `kubectl` or `gcloud`.\n\nTODO \/ How to implement\n===\n- [x] Single CLI can control multiple Database Lab instances\n- [x] Verification tokens can be at config files and environment variables.\n- [x] Create an API SDK.\n- [x] Ability to list snapshots\n- [x] Ability to fetch instance status\n- [x] Ability to create, stop, reset, list clones\n\nExtra issues\n- [x] Add changes to the docs repository(https:\/\/gitlab.com\/postgres-ai\/docs\/merge_requests\/12)\n- [x] Parse API error responses\n- [x] Add an option to ignore a self-signed certificate error\n- [x] Ability to update clones\n- [x] Fix initialization without existing config\n\nAcceptance criteria\n===","state":"closed","created_at":1578433695076,"updated_at":1579671537323,"closed_at":1579671537248,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["List of tasks"],"milestone":{"id":1125768,"iid":25,"group_id":4236843,"title":"Sprint 14.01.20-27.01.20","description":"","state":"closed","created_at":"2020-01-16T15:53:36.464Z","updated_at":"2020-02-06T20:00:08.481Z","due_date":"2020-01-27","start_date":"2020-01-14","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/25"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/37","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":11,"completed_count":11},"weight":26,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/37","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/37\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/37\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#37","relative":"#37","full":"postgres-ai\/database-lab#37"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29333372,"iid":36,"project_id":14976868,"title":"Panic while cloning of a database","description":"Fix an index out of range error\n\nRequest example:\n```\nPOST \/clone\n{\n  \"project\": \"proj1\",\n  \"db\": {\n    \"username\": \"pg\",\n    \"password\": \"postgres\"\n  },\n  \"username\": \"postgres\",\n  \"name\": \"test\"\n}\n```\n\nLog output:\n```\n2020\/01\/06 12:39:04 [DEBUG]  AddUser: CREATE ROLE\npanic: runtime error: index out of range\n\ngoroutine 46 [running]:\n_\/home\/agneum\/database-lab\/src\/cloning.(*baseCloning).CreateClone.func1(0xc00012c1c0, 0xc000054780, 0xc0000d4e80)\n\t\/home\/agneum\/database-lab\/src\/cloning\/mode_base.go:126 +0x57b\ncreated by _\/home\/agneum\/database-lab\/src\/cloning.(*baseCloning).CreateClone\n\t\/home\/agneum\/database-lab\/src\/cloning\/mode_base.go:99 +0x3a3\n```\n\nhttps:\/\/gitlab.com\/postgres-ai\/database-lab\/blob\/master\/src\/cloning\/mode_base.go#L126","state":"closed","created_at":1578321276733,"updated_at":1582628382066,"closed_at":1582628381670,"closed_by":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"labels":["Bug","m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"}],"author":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"type":"ISSUE","assignee":{"id":5205527,"username":"akartasov","name":"Artyom Kartasov","state":"active","avatar_url":"https:\/\/secure.gravatar.com\/avatar\/0e0bf2972f24040ca8b954686d4c4336?s=80&d=identicon","web_url":"https:\/\/gitlab.com\/akartasov"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/36","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/36","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/36\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/36\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#36","relative":"#36","full":"postgres-ai\/database-lab#36"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29200287,"iid":33,"project_id":14976868,"title":"Human-readable timestamp for DATASTATEAT","description":"The following discussion from !7 should be addressed:\n\n- [ ] @NikolayS started a [discussion](https:\/\/gitlab.com\/postgres-ai\/database-lab\/merge_requests\/7#note_265447842):  (+4 comments)\n\n    > Why unix timestamp @anatolystansler?\n    > \n    > I think we need to avoid using it. The format `YYYYMMDDhhmmss.XXX` is much better because it's human-readable.","state":"closed","created_at":1577750060612,"updated_at":1578318144179,"closed_at":1578318143964,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":[],"milestone":null,"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/33","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":1,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/33","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/33\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/33\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#33","relative":"#33","full":"postgres-ai\/database-lab#33"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29195117,"iid":32,"project_id":14976868,"title":"Clone without PGDATA","description":"Goal\n===\nKill Postgres on revert in case of connection failure.\n\nTODO \/ How to implement\n===\nOn connection refused clone ZFS mount being deleted without stopping probably running Postgres instance. Stop Postgres instance on failure first.\n\n```golang\nerr = PostgresStart(j.runner, j.getPgConfig(name, port))\nif err != nil {\n  ZfsDestroyClone(j.runner, j.config.ModeZfs.ZfsPool, name)\n}\n```\n\nAcceptance criteria\n===","state":"closed","created_at":1577727278186,"updated_at":1584023424985,"closed_at":1584023424699,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Bug","m4"],"milestone":{"id":1169143,"iid":2,"project_id":14976868,"title":"m4","description":"","state":"active","created_at":"2020-02-25T10:58:16.616Z","updated_at":"2020-02-25T10:58:16.616Z","due_date":"2020-03-06","start_date":"2020-02-24","expired":true,"web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/milestones\/2"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/32","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":3,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/32","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/32\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/32\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#32","relative":"#32","full":"postgres-ai\/database-lab#32"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29194360,"iid":30,"project_id":14976868,"title":"Configurable HTTP server: SSL cert, network address & port","description":"Goal\n===\n\nTODO \/ How to implement\n===\n- SSL certificates\n- Listen addresses\n\nAcceptance criteria\n===","state":"closed","created_at":1577724142577,"updated_at":1581230774612,"closed_at":1581230774532,"closed_by":{"id":1906296,"username":"NikolayS","name":"Nikolay Samokhvalov","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/1906296\/avatar.png","web_url":"https:\/\/gitlab.com\/NikolayS"},"labels":[],"milestone":null,"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/30","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":10,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/30","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/30\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/30\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#30","relative":"#30","full":"postgres-ai\/database-lab#30"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29193873,"iid":26,"project_id":14976868,"title":"Binaries and install script","description":"Goal\n===\n- [x] Set up CI to automatically upload binaries to GitLab (?).\n- [x] Write simple install script to use like `curl ... | bash`.\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1577722183539,"updated_at":1580918448470,"closed_at":1580918448407,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Flow::Review\/QA","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":0,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/26","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":2,"completed_count":2},"weight":10,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/26","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/26\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/26\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#26","relative":"#26","full":"postgres-ai\/database-lab#26"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29193841,"iid":25,"project_id":14976868,"title":"Containerize","description":"Goal\n===\nContainerize? If so, publish an image. (The main question: what to do with ZFS?) Otherwise, if we decide to live without containers for a while (I rather not), then:\n\n* [ ] polish the installation process for Ubuntu\n* [ ] polish the installation process for CentOS \/ RHEL (this won't be needed if we switch to containers; only ZFS part will remain OS-specific)\n* [ ] have a better script to install all the software (Postgres if needed, Golang, OpenSSL, etc)\n* [ ] consider not installing Go but rather using binaries. In this case, we need to publish them (see how WAL-G has it).\n\nTODO \/ How to implement\n===\nWe need to find the best way to containerize Database Lab.\n\nHow to manage ZFS from docker container?\n\n- Docker ZFS driver\n- Daemon\n- Is it possible to manage from the inside?\n\nAcceptance criteria\n===","state":"closed","created_at":1577722071283,"updated_at":1580832098230,"closed_at":1580832098118,"closed_by":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"labels":["Flow::Review\/QA","m2"],"milestone":{"id":1141499,"iid":26,"group_id":4236843,"title":"m2","description":"By this release we want to significantly improve usability of Database Lab and reduce the effort needed to set up it.\r\n\r\nUpcoming changes include:\r\n- Improved documentations\r\n- Use case examples:\r\n  - Check migrations in CI on production-size data\r\n  - Use Joe bot to optimize SQL queries\r\n- Database Lab server dockerized\r\n- Various CLI improvements","state":"active","created_at":"2020-01-31T16:00:05.461Z","updated_at":"2020-02-11T07:18:57.468Z","due_date":"2020-02-06","start_date":"2020-01-23","expired":true,"web_url":"https:\/\/gitlab.com\/groups\/postgres-ai\/-\/milestones\/26"},"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":7,"merge_requests_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/25","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":4,"completed_count":0},"weight":20,"blocking_issues_count":0,"has_tasks":false,"task_status":null,"_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/25","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/25\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/25\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#25","relative":"#25","full":"postgres-ai\/database-lab#25"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null},{"id":29010389,"iid":22,"project_id":14976868,"title":"Test and document creation of a new snapshot","description":"Goal\n===\n\nTODO \/ How to implement\n===\n\n\nAcceptance criteria\n===","state":"closed","created_at":1577118520881,"updated_at":1579190301857,"closed_at":1578931344607,"closed_by":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"labels":[],"milestone":null,"assignees":[{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"}],"author":{"id":2410814,"username":"ane4ka","name":"Anna","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2410814\/avatar.png","web_url":"https:\/\/gitlab.com\/ane4ka"},"type":"ISSUE","assignee":{"id":2679314,"username":"stansler","name":"Anatoly Stansler","state":"active","avatar_url":"https:\/\/gitlab.com\/uploads\/-\/system\/user\/avatar\/2679314\/avatar.png","web_url":"https:\/\/gitlab.com\/stansler"},"user_notes_count":1,"merge_requests_count":0,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"discussion_locked":null,"issue_type":"issue","web_url":"https:\/\/gitlab.com\/postgres-ai\/database-lab\/-\/issues\/22","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"task_completion_status":{"count":0,"completed_count":0},"weight":1,"blocking_issues_count":0,"has_tasks":true,"task_status":"0 of 0 checklist items completed","_links":{"self":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/22","notes":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/22\/notes","award_emoji":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868\/issues\/22\/award_emoji","project":"https:\/\/gitlab.com\/api\/v4\/projects\/14976868","closed_as_duplicate_of":null},"references":{"short":"#22","relative":"#22","full":"postgres-ai\/database-lab#22"},"severity":"UNKNOWN","moved_to_id":null,"service_desk_reply_to":null,"health_status":null}]